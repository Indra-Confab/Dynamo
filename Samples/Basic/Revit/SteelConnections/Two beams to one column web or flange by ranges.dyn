{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places double sided connections in beam to column geometric situations, on column webs or on column flanges. Works only on connection types with attached ranges of applicability. ",
  "Name": "Two beams to one column web or flange by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Name": "2.1. Beams Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Name": "2.2. Beams Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "b6379c9d97da40e589ef5c84f9338c3f",
      "Name": "3. On column web=true (on column flange=false)",
      "Type": "boolean",
      "Value": "true",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "e481db9b9a764cd880368fe06869d1df",
      "Name": "4. Library file path",
      "Type": "string",
      "Value": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "506614825fda4465a46f0e053404340e",
      "Name": "5. Connection family to place",
      "Type": "string",
      "Value": "Double side clip angle",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "90e9b33fd7384dc299f1335b0b89b0dd",
      "Name": "6. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "68988194c6084e40ba6987f801d5c4b0",
      "Name": "7. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "918575b159534dae84d7e0b43ed7de68",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlantAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "e0347155fcfe4b88a8aa4169246e4107",
      "Inputs": [
        {
          "Id": "6cd5081b3d894062892a0cec90cd6592",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25418920fcf74f3090c265671d5906e7",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb9b4f7d0e2542438a4b22f4b50aa15a",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d656cd5aaed74e56a5c55127ba80b843",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e47e13bd9c0a4ea99a59eb668f197b1e",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc6c73d2e9c34bcea90789c1707b9058",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slant angle (angle between the axis of the element and the vertical axis).\n\nFilter.BySlantAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e3a01b2384c45f4af3ddb7f301c75e0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "980d3836e4374c54ae0417be9be912f0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6bccf5579f84a6496a53819c0d126a3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8352ce7cfa8340249d4d2c77b4d94765",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "596909f5799446a7820a3e674d2f49c7",
      "Inputs": [
        {
          "Id": "31a2a03e186b41f68176345589f851fe",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e2c7e481b8f4c97b05b11b5cadf98fc",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5587e93c96a1461bbf95cde6a7300220",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "881d3b5066d2416ea41953ba13ced78d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f830726134164f5691f1c2dd7e22e7cb",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b12606021e4dbda2be3dfc4f977dc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "3db0ae870aae4d4e8fccea48976c3b33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab334ee1abe949b5ac4be2c72a8b2772",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19ef94231bb245bf9f8d0335d2470c6c",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "1ca46343c98e422eb589fa5f6c1c842d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98ebb802466d45fc88fee4b647379981",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f6d6943546347d2828ddfdfb9c156f9",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "145ece1505dd4e13b5adb581f63e7bf8",
      "Inputs": [
        {
          "Id": "1901e0d33af342ebaa77014a352c0c32",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcf786854a0f4dd3be94e87cc2b56554",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9ff16241fe7408d97349addfede0721",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3e6b35fdf5e421fac487c209e921316",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df853b25b16449ba80be54e810da58b9",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "e1d42da2f0d04115ba4c333d965e15ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6af4a39229064ca09d4e222acb42e2bc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1,2];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0bafd18d55cd47e1a0e461a60e9ceff0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "774bfec08d6646eab975b1a78194a1d4",
      "Inputs": [
        {
          "Id": "b2554cedec674fd9aa2f7fc35bab7008",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49f4b92ce2e64014a68344d009952029",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e1355331b64e7e850e717a10fd4c5e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b9b1b2e8c2648da8d551ba065b0040a",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f46b862733e044d69c1a4ec177003746",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07dbbb1674e54a9e8f6b2a156c204109",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d19b07df0f1247c09fd1a6d579459e44",
      "Inputs": [
        {
          "Id": "8c806428de07439c88b2c7d80368cc46",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "435b20457d424320a532552c70a09bd3",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "094ae248e07d4f5f9a8503e6355a10dc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b52cd842fe44268a9e03f873a26c3b2",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "628afbf358244c619694f826300bcc7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "2ae3c62b069746a3940329b25db46352",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18880fd863d2494ab0c39629273b425f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "b9e7767890a047e685f8ff26c0f26d02",
      "Inputs": [
        {
          "Id": "79c4ee477399447da176b1f256eb638e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "668e6d307b734b7a894d8d0aa7920a35",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e74c87ecb2554dc4a29ecf3c8832de1d",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e42c95f2dec4300bcdaf38ed6cdce08",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d564358cdcbf494381f22cd64b4e6e79",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "d074ff8024794568b8a0c042612ff9da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "23e99e8b332d4164a7ee8f6845af896c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "f5fd7157d8dd46efa1a7ad4b9e7133ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df5273941e614abe8790e600ec43355b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "75fbb7ec69cf461b95141eb144180577",
      "Inputs": [
        {
          "Id": "7625ead503a947a596a3803e4e4f8900",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f463f3d10cf841bc83787c009e615cb5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bedfc1817de342eaa8f615bd6f4577a9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "98f256f147cb4d0f8148c23deef718d3",
      "Inputs": [
        {
          "Id": "9abf1463b0564e40bcd4c16725e35a82",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ab37174f3cb4d6592716343f87999e2",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca65a379b8f640ecbbd00ea1abe6b2bd",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "558c4f50298042ad99570158961261a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d96d7b2764549b1a75d853c6c72a8fc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "289d91618171478dbb998b4e6984e0ea",
      "Inputs": [
        {
          "Id": "89776865d9e04677890be975ab474d44",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bddc1f6f23e74af3a78b22f516810da7",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "683f0f6052a64bfe9cebcd0cdc1e3c93",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "5bf679f3a1d845e9a80dcfacd4d4b0c2",
      "Inputs": [
        {
          "Id": "d51e9f0f59e74d818369de529c3d0ab1",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe5a20fac51049149e5df32f438e9af2",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba8964315d2b466498c8e73c0eb6230b",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "997ebb57baa34324bb07089352ec8a17",
      "Inputs": [
        {
          "Id": "5012cbe92c694c49ad2d3690cf9a2719",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5f7e7e5851a4cdebfe1b0ee945e4405",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "235988b977a14604acb722f2940d6b14",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "911367ea95104a68a8bdabf24ea343d5",
      "Inputs": [
        {
          "Id": "8b3dfa1cdd4d46f29e017a672e889724",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a6f4ad6f78f4de59ade11cb0c564a4f",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "72425b91f2ea4495926845dcc24a7e3f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7115c25603364da8a51e5cb84d267f45",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ade3a07d982d4a6b9566f90ae4060d67",
      "Inputs": [
        {
          "Id": "9182d7cf4e2b4105b31944cf9c39597f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3f6cc8735c14d9fa736f79a5bf972b7",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c14eaa6dc094dfdbea42a4c395b047b",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edffbf7f48b04d89aa738ec345de81da",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "650fbffecdd54e1f8a047828f6d12668",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7e35f853a91e4fc8ab2a21ec9a570c8c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ad66920b3a3e442bb5fe89999aae474b",
      "Inputs": [
        {
          "Id": "181c478a75b8486e9cdd9e6274a212f6",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21af63424c76407dac9933bda913e684",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0233f2e308cd4d35a401d787e461fd3a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c299c99af46a4aeb98d78a3724b5529b",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "0685e4e2cde14269a350099bca66d1cc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cee36242ae464531b1ceebeb2b884fa4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "bb1eaf21f4dc42819950d90924b30413",
      "Inputs": [
        {
          "Id": "5bbd6d4e11b7490888d53a2fcf193a20",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7071f11a1de40069cc54c15c14cdb0f",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439d8e8331ca47d89f4304156db1470a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ed4e2f79751435e847706e7a3780ed6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "02fc6e7ff41f41b384488b805e007f4a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41d5906d72f147d690c67f68396487e0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4f35443af9384bb5a47d95baaeedceeb",
      "Inputs": [
        {
          "Id": "2a3a7187eaf3433ca5137d1f627d7668",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8076a247af394e739313ca05b1daeed3",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae20e96134d42d8bc4b2363f8ac90a7",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2415835e1844a97af39030d2bd9a3f0",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "2404215ffc2c4afa9614331a555b437e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6cbe605591a0477e9bdbb1f61c32bb66",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, of {applicable_number} applicable",
      "Id": "6bcb242ae05c45fda1f9ebbbdeec3731",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ace1ec76dcbe426b9df8ffce870aa1be",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ffb92b32cdde4dc3a73c1560eb54fdfd",
      "Inputs": [
        {
          "Id": "cfadc2c2add14e90b1836896c3985ad3",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7bb3ba22e174ce1a936e83f061d5170",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24f56f2f68ec4e8586c0327889d1805d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d20595c51d346cdaf57d76a04857a05",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "c33840e0557c4408a330da04f399cfb1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99c9647b92cf49ba93ceb20299986ba4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "6e077c8a1abd42a7aa12f341ed0d448d",
      "Inputs": [
        {
          "Id": "f9648e5771c7403fbce5d14d204f351a",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "191d1385ef96481eb537a25313b67c85",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "564e99c9566b4ee5bd5fbffbae8f674d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46fcb7aa4efd42df8be86905211c788f",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "90dbaba524234fdfb31eb37933266b20",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57264b25d28640d2a3e9d57fb1c9b09f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f3f8813e5c794004833a9739d4c2d0ca",
      "Inputs": [
        {
          "Id": "583b330733704330baf738ea4bf7792f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db24234063f845469ae0246721579a68",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79211f1c747b4670a6fa01792af7e5c5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c971c39136642848fa16acb95f8cddb",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "12e6cd04e27647869a2afb60be7717cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c028a8984d5484cb380701f563156ca",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "a1f4df2ff8434486a643c653fcf53787",
      "Inputs": [
        {
          "Id": "0c5a2cc2796d4d40a55c7d84f2121723",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd9e0bb0b69143978fdfe9d904d9de7f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "8807f05fe05d4763a174deb7ff8863e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48ebe732282846088290408b37599da9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "852b8ef9499847458b72627ed032ffc3",
      "Inputs": [
        {
          "Id": "4d8695a21e6142c885c1079149e4f270",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb085e2eacae476d8031f6b7876dfcf9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cda4d8e3feae4ce4b8baf96eece3e925",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "ffaace1683d54d13971e8728952de923",
      "Inputs": [
        {
          "Id": "ce37c4f386d54f3585e6485a67d68c4c",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a585a4698993467db464df485419f031",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0612a40e9d440e28ddadc4aab1afb0e",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b6bd315c8a80447a95142ed6c7047fd2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e27a169f9a944fe294482052fe05ef1f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "c6d9585fb47841cb9c9ceb4bfd7558e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e6dd81a32884af2aad5bf1e9746adc2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "dde7df2ab5954fc1b5b52264b6ea322c",
      "Inputs": [
        {
          "Id": "be314907ceb34e98b2a2d3e11f1431b8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03ebe3556a4244fda67a41a091b73068",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95707ef7d43648b79460d1c5ee2272d6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1e3e2a13ad1349daa6c58b63b5f0b78a",
      "Inputs": [
        {
          "Id": "fa7cbd7a3ae54d3b9cd639eec7dedbfb",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a36c2926d1654975801a127b1c897d84",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3841de7214484a55b00b70d485720ed1",
      "Inputs": [
        {
          "Id": "09baac595f8d42acb57f2f32d54d889c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8543ca588114403e9a1db47a07cea87d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "d45cf1955c2e41dd9e147541a76d0162",
      "Inputs": [
        {
          "Id": "18935de52a4b4d509a5af0deecdbeb9a",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f55e9920f7fa4d468201eb0bab2e284c",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bc1b037889d4e5c841f5b916c1b58c5",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "254a2da754394a22bdc053660c8ae550",
      "Inputs": [
        {
          "Id": "ffb70a570cbd454a90481b2825bff81b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfefcaa0d0af4e35964dd3262b47522f",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e9267712b3a4ae9b4130f23971a580f",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3314cdf441ce47adb55c96b8e87cb3cb",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "ebc677ba74f349d581eb89a79f50b8c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "437eccbb3d724fad9779325d68db224a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "745d81c493ee465684bd2dca363c1732",
      "Inputs": [
        {
          "Id": "fbcd7126c9c3443cb03cdb905c91ead5",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "369839d064054499b2e82ca01d89b08a",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb7dd1c3f9dc4b398d13b0a973a407db",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb1663514382423ba994c96a3802f02c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "35aa8435dc9b403b9c32aa5427de285f",
      "Inputs": [
        {
          "Id": "7b33449e9e074180902e12f0ebdf5a5a",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c3dc18fed984849a49e03df5c51e089",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "647f8844bb9c4fc699893a2c544ea501",
      "Inputs": [
        {
          "Id": "9c5074b6100845df8d56e53f64284d62",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12a7938ec704414893a42981de49dbf8",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c76f836d0934456ea2a9c07013f94183",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35132014c7f64508aa8662dcaec012ed",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.IsItAWebFlangeSection@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "91006b7133c74738aeeb5fe722e22aa4",
      "Inputs": [
        {
          "Id": "79d4eea3fb7a48d79b1d64457bfc1a07",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a67d244d55254c6ab8fba96d2effe74e",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8791810e1774fc69aed913c366cd1d3",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d73ceb19f7a9476da73a510e5e953b98",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at a certain index is of a section shape that has web and flange(s).\n\nFilter.IsItAWebFlangeSection (node: ConnectionNode, index: int = 0): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b6379c9d97da40e589ef5c84f9338c3f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2327af364ec545498bfb19c713f87bca",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "da5564f9c15c4442875c3c2f09316d54",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a3941436a3ac4faaa1b173fa6693dd85",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "InputValue": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "NodeType": "ExtensionNode",
      "Id": "e481db9b9a764cd880368fe06869d1df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "521690debbdb4c35aec8062a28baaf4d",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Double side clip angle",
      "Id": "506614825fda4465a46f0e053404340e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a53a8def236845978abb3db72f05e3bd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "90e9b33fd7384dc299f1335b0b89b0dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c06101f072e84e3487bf17ac1b2b7a4a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "68988194c6084e40ba6987f801d5c4b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3e8a1b845484aa3aae47e45982eed44",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "11bfb528b8034721ab1332c7430df49c",
      "Inputs": [
        {
          "Id": "dd5425b4b92545308ad2501a52230de2",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1cd8d901eb34facad252726eedd028d",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "48fcd108a82d43fd850367d4baf9a627",
      "Inputs": [
        {
          "Id": "89bf00397d4d4713bf563ed352476c76",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c42174eddf2471e88572f5b54efc251",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9fb1869abb0b4b5c922cf72043b2eccd",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc259abf235645bba56c56ae5e70727e",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9373ce73619b446099b200a4b1a68c8f",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fce6295d22e48d4bae0f629020b7cc4",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "59fc6041eaac459fac396d3f8e5721e9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b204b705c6c54283a84910d158212e75",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenBeams@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,double,double",
      "Id": "ebfa1de1b2e54659906ef5ead66146fe",
      "Inputs": [
        {
          "Id": "35a4c8cdedc44c8ba5948f04830c365c",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fefa6107d08847d9ab30ff09d3adcce3",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "680b3dc6cefa440eba8630a532b21213",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0edf93dca70c4857baa364e29682aa57",
          "Name": "rangeStart",
          "Description": "A value between 0 and 180 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5675eb1063754cca9d366a6e262db882",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 180 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f4a156b894b447da25064dd2ebe1abf",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcd30de8cdbf451e81de8df21827cb20",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. This is similar to ByAngleBetweenAxes except it only measures the angle using the X axis, and for the case where the structural elements meet end to end the angle can be between 0-180 degrees instead of 0-90 degrees.\n\nFilter.ByAngleBetweenBeams (node: ConnectionNode, indexFirst: int, indexSecond: int, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 90.0,
      "Id": "4396333b6c4649b699a01825ac2cecce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "58c7c6b0a8754fb5a8454f0b4a526a50",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;\n2;\n180-x;\n180;",
      "Id": "309c7b5d1be14411ba7a99eb1fa3eb3a",
      "Inputs": [
        {
          "Id": "f0f6cb8e7e4f476cbe080771cf323c96",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9261a64af541482a84af5327289508c7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1407178978f4bffb4cff65fcd663cd3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d72fec785b24faab926ce85810ac85e",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84f07a141f4148a0b8159d442c15da05",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "357eac97fdcc4c60b7825d2ab7d935cb",
      "Inputs": [
        {
          "Id": "91d873587a134598a39332dca310d843",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e0baa0926fe40ab841bf6cc979e4910",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a82e7158778145c2b092bbbede207765",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "1ab680fe44854edbabf8e3771e1ef71b",
      "Inputs": [
        {
          "Id": "e4850a58848f448b88c7c67c46f72ba4",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72c82894a0964e758f3cbcbe53d3ca64",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "c028e38f5f934b86bb6672b9886c308a",
      "Inputs": [
        {
          "Id": "37c53ed09d514d00b858a7fff2758609",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b5f197c7dd344fea63bb14241a817bb",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f055bfab9abe49ad8cbebcf914aafdea",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d78c303edffa4bb6a33d5bc7733835d8",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcd3bdedf6e8410eb5dac047d1597704",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "65e9e3a8dbab409b963688c43e71d357",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "22c3ae1026444d15870b80a07bc4c348",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "de7a61a40fe8487193c823ec10b16bd6",
      "Inputs": [
        {
          "Id": "4d29ee263bb84dbfbadc416bcac5e36d",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e537fe76dc53476aab613e7930ad30a5",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f44d2c5086604692b008bdafcd4f1bce",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e12c09c51af642dba5b63048689b4a31",
      "Inputs": [
        {
          "Id": "741a2975827f49f38b22745f9d48e6e3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07235bb1945f4fbe914951f5b181c72b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "7e910391fed94135ad5273ad7f07dcb0",
      "Inputs": [
        {
          "Id": "05c7e05767674d6c9b7330ebbe826680",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aae1c0a26b3a4974b80998d629a678ee",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "9abef0a57b5442e886821dad2a365962",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65d39af4f7794af8a4604b84acf9a8bd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "69fcf991bf0a45d6a16147fb827123da",
      "Inputs": [
        {
          "Id": "9664603430044451871c6bca6075248c",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce2363f657954eefba9879a0ead0cbbf",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3805e9e9c78a4cfea29998a8558fa835",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b005aee71f90402f98ceeb40b063f4d4",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "72eef0d45d9840f9b7be10a84879f75b",
      "Inputs": [
        {
          "Id": "ca9641e74726432190cea88401213959",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8211998131af4410a602db713f26ec64",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "405861b41dc54bb69d33fc4048245fe0",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "c4c8fc18ad204c8888d0b523cd963132",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf2a40fef7d84c0cab23a9767dba712d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "052fddd551cd4b30a0639d7bc1093acb",
      "Inputs": [
        {
          "Id": "891c9577db1642f09c2521bceb5c2927",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78a61817eccd44fba89beca072de6e69",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5eae8a9ba653466e953b5ecdcda0bdcf",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22e8da273c3e4d26939848fcf169c956",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de9d9665797f4ecfbde9e74f9bd6d0c1",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d2f36fa6d3a4bc28f422b2ff8749fca",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "2bdcf2859cab4e7cbea37a1ac4fbd0e6",
      "Inputs": [
        {
          "Id": "5f90f748e6b44f0a8072b82f7031fd6b",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad3c574c790e4c20bb193e57308911f7",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "79fbb618714a48c4bc29aa05cdc0e980",
      "Inputs": [
        {
          "Id": "256b2746ba8a44e693b780c82d5f889d",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0b696a836a342fd947f9111f834c06c",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "0da512330b06423b9c1d7014a669978f",
      "Inputs": [
        {
          "Id": "f59d792ef3bf4d5583a055a0197197a2",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66199a15afdf4c528f192ba8647c48a1",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "255fbd6a41924786995905d9846edf76",
      "Inputs": [
        {
          "Id": "7506e37c7988482b953c6d2e5bb58381",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de9981024aae43ecb9228ea9b39fd4a2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "5c7c42adc66f4b898af2d3644d230d44",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "82040cf2b8e14cf58aec5aa6087ca195",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "33a5a9f821bf4b25b753b4241efec4ee",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38dab7a3f4444e72b1187ffd719b2fb7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "2d1a7c5ccc224ce197868c6280845446",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae33459e3e8848aaa6c5bac31eaf5f6e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "d8d1982235f0414b91a16c993cee469d",
      "Inputs": [
        {
          "Id": "47c8a8a6a5e24d23a583e046b8342c42",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80573bc29759491ebd2d20967af4bdca",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30069eed49fd4019b8f6c84f4063c952",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ddb9efb9a3f40668ea59cd322e8749a",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "b68d15f6840f47e3a3ecb40be31328d6",
      "Inputs": [
        {
          "Id": "12591fe5bc994d9989af5dd754884683",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0553d2d212847b6bbb7afca9c43421b",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bf74db7da0745ea84ffad491caf1c0e",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5f616b275e44e4f9f4fbe4e94ca34a6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7204e7443a8742f6b65ec7ea0932b8b0",
      "Inputs": [
        {
          "Id": "fcff2a2e38c145c5bfbc2b44b77aa91e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff57ebe5333042e6aa9442952db1bcd6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d457d963be3445e4a68858da6e4a3f39",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "99143a0da4774d9084c1be42cfd8aa5c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bfc688ab6528415ea7e5f2fca254cd79",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "36026027a56a4d1aa9444f54bc20a942",
      "Inputs": [
        {
          "Id": "f459fb9afd934aecae05fc9fa2a8c52a",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "81d612f7f5e34804a2f61f2d9f15035c",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5029cc24c1c248e98ef2b5e9b809bf89",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "24d3a6464e394f559039c0ecea44d2b4",
      "Inputs": [
        {
          "Id": "56eacfdf0c8f4a7c94a59043f834bc56",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a7577c3ee5ae4aedadf5ee4cb484306c",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b967f0425db64f718bb6767001d376a2",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "affcd4d2649a4fb9a7f6fa9deac41c48",
      "Inputs": [
        {
          "Id": "74dd62c06b7e45ff80938d625f1af491",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ada94eac4b247ea83a0e271820edff2",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94e8692d7feb4522b83498290834cecd",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "bb542f03663347df98613cbc39e9c913",
      "Inputs": [
        {
          "Id": "41bc639fc0484460bcaa1e7736a13de9",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63d5ca7136a74c46b331e210672070fb",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63bb690f07064add8fafddfcf99d03ef",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "63a9a518ad2d455eaf731ba77895c2ed",
      "Inputs": [
        {
          "Id": "bb82869d181e4d3a9c082755e6b92983",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c279a9299bea4ff5b2634a59cb6422d6",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb21274066b146bf800bceb463f3395f",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "d53921a62c6e4c31bfa0d57376cd96e9",
      "Inputs": [
        {
          "Id": "a20d617e43b04bd58265ec2c26ce711f",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "425e7d43b87e4eeba97519152db7b213",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0b4c268a2604edfa7dccd891d775578",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "5897f2193b864f0189e62c85568ba86f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "974932bea32b4d9ba93b9dc4f0b35fe1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "17d9d30936474aa6b6aec950e56c2fc3",
      "Inputs": [
        {
          "Id": "5a3dd5875c5047348d200bf8d9b4c4e4",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3839786fe6dd42b98083e0470a6f99f8",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c9b41400a9e4184939decab0a5fef8b",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fcf80d1dd5a4466945660ece0aa6c65",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "ef7c3a7a44e3497eb1792af5ca7aee11",
      "Inputs": [
        {
          "Id": "8a2a46a645b04c78a777605da59ba7c8",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "422e1282c1754444b58f85b32e26e451",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e0700e1582b4711920267773437ebc1",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c73b27b473a74015b15be644eaee3eaf",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "d36b5a25176b45c7aaef14a158365cb6",
      "Inputs": [
        {
          "Id": "8dec4b3a078d4820ae5bc23fc21c6930",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b7492462cd54cd2a2c9f6c651b1c3b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "d421e702fc074c709af3b03e3cc9e668",
      "Inputs": [
        {
          "Id": "4d6bba5deab44bfa8a76c2749301aa2c",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5785b96021b344ecb21d5532e1862d77",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39dd98d77c354c18bdeafe00ad59c54b",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "7e698a7cad8c4b6487dd3f4fd136e498",
      "Inputs": [
        {
          "Id": "234857a2039546dabbdd64eb0e9fb6d7",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f602e8968c8243d49bbed9c8df4b7c4f",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30c5c82b48a641ffabb540bccc8f06e3",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "3a84d3f974264636973ee174bedcd2ec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "19fed6c75882468f9b4a25ed5efedabf",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "7c7e271b0852496b87e96854fcf30dc3",
      "Inputs": [
        {
          "Id": "c8e11369ef484362ac8266b20976b178",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a37598b7200b45889ad3937d8d3ba58f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "276e78a54baf433d9fd55341b784a031",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "ea42a193ccd948a5ab35e7e4fdaa2fbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0e97e72944b74164bd3d31b3a342a71d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "cd701087a42d478a885ad5404760236f",
      "Inputs": [
        {
          "Id": "f581407932034c42b2801f1d53a976e8",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "481579b38c374bde97df38b49450d2d5",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4ede39a881004d5385d7ce3c16f084a2",
      "Inputs": [
        {
          "Id": "6205562251954e8c898108ef58394e19",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "802be045d70d452e95cb69a0e8a60e64",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbfe346f8f8044b39900ea6883d30143",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "16e9b81354264fdebc2ad8ed70240cd6",
      "Inputs": [
        {
          "Id": "6c90e14ecc044989a244cb3eefb1e96d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "eb988cf855284eb0a5353c3e02aef96b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c586a5ac11d4de5af063fe9aaffbe88",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "a4a60b211ee04e9e8c1d811ac663e524",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ff2a455b25c45fe9ddcacd2e9520d72",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0855ed7a98194c6b92b76e2e1eebcb1a",
      "Inputs": [
        {
          "Id": "f2f6ee3030734e5b89b6ec0ad6942754",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "76ea602cd8ea48259a39c339465c6d48",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a428da38c76340939d9711daf0d46354",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "fb5dc7d5bc014ba1be0a4558df56bb2c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9486c9844e124f01a18e8682e8ed666e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "7f0450ade8e1472381de379a83ff9421",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d71c4553a6748a08e3349195372ed4f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "9ebffaccd55b4c8c9671c8b23b18f703",
      "Inputs": [
        {
          "Id": "fa0a8fa619944de69c8d2d44e38af1f3",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7034c72971e546e89c20469e93f4b59c",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "9798515582464e90a292bf99d212b3e8",
      "Inputs": [
        {
          "Id": "5105fd88adee497aaef9a7e90e6eb0c0",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c83b44f8f9384ca1884cac66d13ae807",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "c0fd7983cb7a44fdbf4b00fa1ba7ea01",
      "Inputs": [
        {
          "Id": "f0517d2cae9b4ab8a02889c61043dad2",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a044368d59c4470db590cdbcbdbf57c3",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.XAxis",
      "Id": "96ca66d85c3d45969a14c28353cf745f",
      "Inputs": [
        {
          "Id": "da9cd4dfc1a349c7b0a94ead077f754c",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4878da46515549ef99c83dd0cdbba062",
          "Name": "Vector",
          "Description": "The output X axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the X axis of a structure data element.\n\nStructureData.XAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.XAxis",
      "Id": "951ed3af5be347e9b62962338278cf69",
      "Inputs": [
        {
          "Id": "097bc17968414b43b87b1b1294622431",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29778afee81741a99fcef070caf8466a",
          "Name": "Vector",
          "Description": "The output X axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the X axis of a structure data element.\n\nStructureData.XAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.XAxis",
      "Id": "94ba0be1b915400ca4259c0387e34f23",
      "Inputs": [
        {
          "Id": "e01c1e93e0d24cafa0f83ebb34f447cb",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0eb353f558048a08087aa0b16aadf33",
          "Name": "Vector",
          "Description": "The output X axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the X axis of a structure data element.\n\nStructureData.XAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.YAxis",
      "Id": "dcf1734eea9e4705bb735a6dbf7afa1c",
      "Inputs": [
        {
          "Id": "3761e827689844ff903e8f8e6bf7bed8",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70122e357c9649a39bd9fa99dfe58e2f",
          "Name": "Vector",
          "Description": "The output Y axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Y axis of a structure data element.\n\nStructureData.YAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.ZAxis",
      "Id": "886c8b1a363d49cf98241a55d89d78ad",
      "Inputs": [
        {
          "Id": "d81f17e5f6e944a39b99b42849abfe38",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18756924f6c44167a9e604e00b2a0043",
          "Name": "Vector",
          "Description": "The output Z axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Z axis of a structure data element.\n\nStructureData.ZAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "d58feaf7f8db461689705fc7e4f210cf",
      "Inputs": [
        {
          "Id": "e834a43fb6504af6961a809b2b5e11bb",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c117d6f81ed4251b7817973f6f279ca",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c4760956d9b4f21aa2473f452f5f770",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "41560786b0ca49faaf52c4e95ff26816",
      "Inputs": [
        {
          "Id": "3dd32f3fb4d3425da6e94cb434f31fea",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f004aed392442378b750ca0becf50ab",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "879e932f487d48e3a2a5b4909471fb5a",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "1651de98cde74bdcbca5ff4dac20fdb7",
      "Inputs": [
        {
          "Id": "12628950b65a40d3bb66872d10c57aeb",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f03d406711f4382b5591ee330079078",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b92cce70ee6449bc98201119b4b4d9c0",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "c0e87c230f864215a734f97951a23809",
      "Inputs": [
        {
          "Id": "c7fb29a8a0a04efc928679b6223eaaf7",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfa2518183424cb4b5856956b85a4029",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "832ef1fc57854964a41526124cd20f57",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c71592d304dd426dbd92432566166bc4",
      "Inputs": [
        {
          "Id": "ba710661bbf7416dbb8440f86101f522",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "43ea41ac761a4eabafaa053291de6827",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c118eb88293f4085967c825265513dc9",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21773ab8db254ea4bf6a6286240eb78e",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "db73c72133a948b798916bcf4ccf4cf2",
      "Inputs": [
        {
          "Id": "0c0b5c7035204f6091ddc58f2ae98842",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "86194778d71f4ac0bc96ab7880fd35eb",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4a3d764b15a04f64ba241e9d612d818a",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b831048acf543128b83d522cf47e613",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e3fdc1813b054423859bd77a0fb83855",
      "Inputs": [
        {
          "Id": "a7ae013dac5242d6a2469a67faedbf42",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc426feb5025408bb2bc069881d43e69",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cba78b127764152a6dbb25ddafb3c07",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7340a3145cb54bdebc92cca1a3a992a0",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "fc9dc84697b5404a8408e257ef9b17be",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ffbc59f2b6d9498a932ff7407d9a85a5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "&&@var[]..[],var[]..[]",
      "Id": "6164b5bb2b3648d9a82d6184a27787de",
      "Inputs": [
        {
          "Id": "4171c3e522e6473ba1614a8790f1bc8a",
          "Name": "x",
          "Description": "A boolean to check if true\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97f757ef89df4086b700a3bc15156084",
          "Name": "y",
          "Description": "Another boolean to check if true\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "167037667e3d4875817f2da6ad787217",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Logical AND operator\n\n&& (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "&&@var[]..[],var[]..[]",
      "Id": "fbc294eebf9e4f0c8232cf769b2a6823",
      "Inputs": [
        {
          "Id": "33356f0dacea41e9a573e8903b666274",
          "Name": "x",
          "Description": "A boolean to check if true\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4a3b756cd594242b4cea314dd6e6a09",
          "Name": "y",
          "Description": "Another boolean to check if true\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e741b98ab524463eb0dcd602580df461",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Logical AND operator\n\n&& (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "9a734d15e5d6460db441f739a8b52cf2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ec9cf22020e1404a892881071e26c764",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "947c3226e1ed42c1a1454787c75fa27c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a7600b37e8f4905901417bf5aa5f561",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "55040cc63ff04853be75f9eaddf00f5c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab3db35d982142cd8c22b933b924c483",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3f0176d604fa4480a9a053cce7bcbe8f",
      "Inputs": [
        {
          "Id": "3515d144e0404066bd315e059bda6527",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8180b8fdf0144c6e9c89ed53a086bd93",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ae7c40f92044299bc9e9b698fc9d2b2",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "978e27b279ad4a52b008353bd58937cd",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a7c93ca8db6c4b95a1b1a0d0b92120df",
      "Inputs": [
        {
          "Id": "b9a0382b43fe47949441f4deeccd31f8",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc3bd154b8d0439a851134f5ecc290d9",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8859344b4cba45f8a62d227891a6b420",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be0a733b8a9b4101a5dc86f38d73797d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "10aea48c7603406b922f03c29249f99c",
      "Inputs": [
        {
          "Id": "e4fa2b9730314bf0856d6f2854faa8bb",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "838b6c7f634e4418844289648316ffed",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f31df2c48e714a048fa38c7169652702",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2dca966a90bc45698c60f4872dab4d59",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "d35367c28e84432e810cde5376f8d470",
      "Inputs": [
        {
          "Id": "1bfc3965ab604393ad2e6b9f6ffbb98a",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3524226cb73147c9b014595441388625",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "555edee1fa1742ca9f3c409d8712c33e",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "49375259c38348da84c64fb5c30928b9",
      "Inputs": [
        {
          "Id": "294ca45d5c6f454c96283f57ed11a99e",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7894473ce044491bb25c225879bc7ee8",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "536aab7a6fd8492da0e4b6fd734c5708",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "3cde8468a5224cdbb17753ee5ad9ba99",
      "Inputs": [
        {
          "Id": "3da567c772b5490194a4a0d9cdc3771e",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d7571a892a14d6980f26befd311d96d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d118c6ce4b194a1a913f63e233d0107d",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c8da34f7ac4948cbba2b5c52a99addc6",
      "Inputs": [
        {
          "Id": "9ecdecaad6754e94be9f95c593c87de9",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7aa3b9d5c40c43d1b5e3f7bfd674f5e7",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "19864cda74774380af4790d264a20734",
      "Inputs": [
        {
          "Id": "d21610aa0f864ccfae5c1ba937d0c335",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70a4ef7231f2421384b51df53a602273",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"# Load the Python Standard and DesignScript Libraries\nimport sys\nimport clr # imports the common language runtime (CLR) into the Dynamo Python environment so that we can call .net fucntions direclty\nclr.AddReference('ProtoGeometry') # adds the Dynamo geometry engine to the CLR\nfrom Autodesk.DesignScript.Geometry import * # imports the relevant portions of the Dynamo geometry library into the Dynamo Python environment\n\nv1s = IN[0] # sets the v1s variable to the contents of input 0 from the Dynamo environment\nv2s = IN[1] # sets the v2s variable to the ocntents of input 1 from the Dynamo environment\naxs = IN[2] # sets the axs variable to the ocntents of input 2 from the Dynamo environment\n\nangles = []\nif len(v1s) > 0 and v1s[0]:\n    if len(v1s) == len(v2s) and len(v1s) == len(axs):\n        # generates a set for each input combination\n        triples = [ [v1s[i], v2s[i], axs[i] ] for i in range(0, len(v1s)) ]\n\n        # calculates the cross product for the axis and the each vector, then pulls the cross of the axis and the result, and gets the angle between the two\n        angles360 = [Vector.AngleWithVector(Vector.Cross(triple[2], Vector.Cross(triple[0], triple[2])), Vector.Cross(triple[2], Vector.Cross(triple[1], triple[2]))) for triple in triples]\n\n        angles180 = [360 - a if a > 180 else a for a in angles360]\n        angles = [180 - a if a > 90 else a for a in angles180]\n    else:\n        # sets a string as the output for situations when the list inputs are mismatched\n        angles = 'Lists are mismatched. Ensure an even count and rank for each input.'\n\nOUT = angles\";",
      "Id": "2dd5ba32c83f483abf92311089d8bc17",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f0c18e521ea46e2a46530df4db03b50",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "db433b6271164ca1b84e5051d40f8855",
      "Inputs": [
        {
          "Id": "9cca098a0bd34e719696b7ab094bfbab",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0c3cff4056c4846916c9f58e114f431",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "445a7459b0ef43efa772de89d5973246",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d71eae93fdd4766a27e7845da2fd56f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b4856d168584fb2b22c491334826316",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "90babe8113ac4d76bb7edfcee9220623",
      "Inputs": [
        {
          "Id": "f198239f5ccf4938b753a135bbb3d901",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb29e3761fe74fd9abdec6b587b5153e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "158d208e3af248c1b810416c25beea74",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e539b22736e408ca8d38bdce5ad4645",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01d6010d305046d8b9b5f84ced5c248d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4d3a1855d3ee469f8964cec68757b72a",
      "Inputs": [
        {
          "Id": "83b1e795d3684f03b23dd1278581607e",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0550d4e413da4444a9ea2fab19d71426",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69ddc7153f8b4c0d9e79b625d2ceb5b8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b94560719f84c8a9a3fe1edca8596b7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aca334311bdf46a2b21a7d994c5758db",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "8147ab7168e547de974a951f540c69c8",
      "Inputs": [
        {
          "Id": "a4daf0ef482a47aea7c1ee705dc92bc0",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f64af6d713e34d60a821f7016ed1271f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d445055eef449fcb420904772a4cf34",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c64d18b42f1478ea2879afee9156e0e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fd76db74aa84ec39f0f291d7756cee6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bb465e8ccc8342bcb1fe7dc80ab00f15",
      "Inputs": [
        {
          "Id": "58db521606ee40cbbb9175e7a4e99ce2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c22f748825ae4c9a81fed2362ed2faca",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a828bd85f6ad4d6cb945d754497347e8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "bc4e7620520342028876e6beaaf30903",
      "Inputs": [
        {
          "Id": "e753915657814bb1ad6147b1fdf7e945",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47a053467db14ccbb0cd09c962592769",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"0.0001\";",
      "Id": "20c6f26cb3684d85a46f7d6d4fed7c39",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "722bd13816554ca1be3d0ddea7b2c6ad",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "0aecc845353647d882120aeeae614e50",
      "Inputs": [
        {
          "Id": "8ea9bc11d43346ae98c32696fb7f2d7a",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe2c478f3a384ae3b4d62f399169ed03",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07235cce8c6f4761873d5dbc755d4290",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "79c4ee477399447da176b1f256eb638e",
      "Id": "a2a2e0cfb963474bbfad81e27ef03f41",
      "IsHidden": "False"
    },
    {
      "Start": "918575b159534dae84d7e0b43ed7de68",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "57be43b3ad01434eadada705d66d6938",
      "IsHidden": "False"
    },
    {
      "Start": "e47e13bd9c0a4ea99a59eb668f197b1e",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "1b2056f0e937447db0aadada9df3b89f",
      "IsHidden": "False"
    },
    {
      "Start": "4e3a01b2384c45f4af3ddb7f301c75e0",
      "End": "25418920fcf74f3090c265671d5906e7",
      "Id": "79f2765c0a4c4ba1970bdf5cf16daa94",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "eb9b4f7d0e2542438a4b22f4b50aa15a",
      "Id": "5b30ef5ce89d4d87a8aed0145bc4a423",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "d656cd5aaed74e56a5c55127ba80b843",
      "Id": "ef8dd08ce05e4fd5b1416a27234e8ab9",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "89bf00397d4d4713bf563ed352476c76",
      "Id": "45e8a942471544458d620f78bb420a86",
      "IsHidden": "False"
    },
    {
      "Start": "980d3836e4374c54ae0417be9be912f0",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c052f00c89dc4165bbd99e33b7dbfb30",
      "IsHidden": "False"
    },
    {
      "Start": "d6bccf5579f84a6496a53819c0d126a3",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "1d1eba77cc1c482dad0de2596a493a1f",
      "IsHidden": "False"
    },
    {
      "Start": "d6bccf5579f84a6496a53819c0d126a3",
      "End": "9fb1869abb0b4b5c922cf72043b2eccd",
      "Id": "1f8f7d8dd7ff498996c5bf09ac0f758e",
      "IsHidden": "False"
    },
    {
      "Start": "8352ce7cfa8340249d4d2c77b4d94765",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "da3867b34e864eeaba4f4f440e610d03",
      "IsHidden": "False"
    },
    {
      "Start": "8352ce7cfa8340249d4d2c77b4d94765",
      "End": "fc259abf235645bba56c56ae5e70727e",
      "Id": "93128f7a273248f59a7173b4b5b3bec2",
      "IsHidden": "False"
    },
    {
      "Start": "881d3b5066d2416ea41953ba13ced78d",
      "End": "1901e0d33af342ebaa77014a352c0c32",
      "Id": "b2c6b815a2d441ba845ecca322e013e5",
      "IsHidden": "False"
    },
    {
      "Start": "d0b12606021e4dbda2be3dfc4f977dc3",
      "End": "2e2c7e481b8f4c97b05b11b5cadf98fc",
      "Id": "531fd8a51b8747e3b59409e00debd515",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "5587e93c96a1461bbf95cde6a7300220",
      "Id": "4d128a78f44b4228b96e1210e441cc29",
      "IsHidden": "False"
    },
    {
      "Start": "3f6d6943546347d2828ddfdfb9c156f9",
      "End": "a9ff16241fe7408d97349addfede0721",
      "Id": "ffa846437ff04004834b628f0176c79c",
      "IsHidden": "False"
    },
    {
      "Start": "e3e6b35fdf5e421fac487c209e921316",
      "End": "dd5425b4b92545308ad2501a52230de2",
      "Id": "430650739887404a8a56f5addc63d78e",
      "IsHidden": "False"
    },
    {
      "Start": "6af4a39229064ca09d4e222acb42e2bc",
      "End": "fcf786854a0f4dd3be94e87cc2b56554",
      "Id": "20cd8b8267ee4c67913593908e1f7278",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "18935de52a4b4d509a5af0deecdbeb9a",
      "Id": "623fa12ce2324f809572bbcf045c39d1",
      "IsHidden": "False"
    },
    {
      "Start": "0bafd18d55cd47e1a0e461a60e9ceff0",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "1c138b598c5b46ea97fc42b778e4bfd1",
      "IsHidden": "False"
    },
    {
      "Start": "0bafd18d55cd47e1a0e461a60e9ceff0",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "409702f4a609456d88c671e0ad211bd1",
      "IsHidden": "False"
    },
    {
      "Start": "0bafd18d55cd47e1a0e461a60e9ceff0",
      "End": "78a61817eccd44fba89beca072de6e69",
      "Id": "f193f5949ae64a41a37bcd7e31af9bd5",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "ca9641e74726432190cea88401213959",
      "Id": "789baa39df4d4ba5974f967e59af0fb0",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "888d37cf48944e59a368d7ec1c3743a6",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "9d8c29bb94ee4d9ca5b9fd559d98551c",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "ce37c4f386d54f3585e6485a67d68c4c",
      "Id": "a9de549597e2425b881f50c7f3a67c03",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "3da567c772b5490194a4a0d9cdc3771e",
      "Id": "aa51e974fa494dad8318b4a3ebade251",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "439d8e8331ca47d89f4304156db1470a",
      "Id": "903a489caf204c8ba3d73b182120b60c",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "0233f2e308cd4d35a401d787e461fd3a",
      "Id": "4e784a13af6841989a134f56d19f440d",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "9c14eaa6dc094dfdbea42a4c395b047b",
      "Id": "8fe8ba996fec48758463ce6d7e4184f5",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "5012cbe92c694c49ad2d3690cf9a2719",
      "Id": "7fefbbde9d0e4cb9af0bd68a829c9f4a",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "24f56f2f68ec4e8586c0327889d1805d",
      "Id": "ecc706416d344151b22510730477d49a",
      "IsHidden": "False"
    },
    {
      "Start": "4b9b1b2e8c2648da8d551ba065b0040a",
      "End": "8c806428de07439c88b2c7d80368cc46",
      "Id": "d5a5faf947bd4c6e9d534f34f26dc29a",
      "IsHidden": "False"
    },
    {
      "Start": "f46b862733e044d69c1a4ec177003746",
      "End": "b2554cedec674fd9aa2f7fc35bab7008",
      "Id": "0eb2a939fab04aac99db2f4637a5f005",
      "IsHidden": "False"
    },
    {
      "Start": "07dbbb1674e54a9e8f6b2a156c204109",
      "End": "435b20457d424320a532552c70a09bd3",
      "Id": "05731ca6b12f462e8690ecedec35ac89",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "2a3a7187eaf3433ca5137d1f627d7668",
      "Id": "da6b0dbc09b84d52a504e4cd4315c156",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "b5f7e7e5851a4cdebfe1b0ee945e4405",
      "Id": "9aefbb467ffd42459ba596fbaedf7824",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "79211f1c747b4670a6fa01792af7e5c5",
      "Id": "fb3da7da34f94965bfece9386b6a44a8",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "0c5a2cc2796d4d40a55c7d84f2121723",
      "Id": "039501746c774a1bb0cf07eb6822e931",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "966a372eaa4148669ebb222139563c70",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "564e99c9566b4ee5bd5fbffbae8f674d",
      "Id": "6657084acdc34901a26a01f3f2969ddb",
      "IsHidden": "False"
    },
    {
      "Start": "8b52cd842fe44268a9e03f873a26c3b2",
      "End": "ce2363f657954eefba9879a0ead0cbbf",
      "Id": "245ab9eaf9894b5a9df4150f70910af6",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "628afbf358244c619694f826300bcc7f",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "7b33449e9e074180902e12f0ebdf5a5a",
      "Id": "43fb33d0106e49e5a6ce83f265eb5dc7",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "9c5074b6100845df8d56e53f64284d62",
      "Id": "42d3ff4960274c02bea07a4fa9a16b14",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "05c7e05767674d6c9b7330ebbe826680",
      "Id": "6df13e07effd4664852b0e688304cbb6",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "d21610aa0f864ccfae5c1ba937d0c335",
      "Id": "cb478f409c10466cad11af998d92243a",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "18880fd863d2494ab0c39629273b425f",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "18880fd863d2494ab0c39629273b425f",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "8e42c95f2dec4300bcdaf38ed6cdce08",
      "End": "37c53ed09d514d00b858a7fff2758609",
      "Id": "82d6e9d1c0a44ce8b5eca676a6022646",
      "IsHidden": "False"
    },
    {
      "Start": "23e99e8b332d4164a7ee8f6845af896c",
      "End": "668e6d307b734b7a894d8d0aa7920a35",
      "Id": "62edb465e54e4dbaa47a22e4441e9c14",
      "IsHidden": "False"
    },
    {
      "Start": "df5273941e614abe8790e600ec43355b",
      "End": "bddc1f6f23e74af3a78b22f516810da7",
      "Id": "ac3bf5bbecca4a93ab9cd20f648c8cfb",
      "IsHidden": "False"
    },
    {
      "Start": "bedfc1817de342eaa8f615bd6f4577a9",
      "End": "9abf1463b0564e40bcd4c16725e35a82",
      "Id": "67997a1f848f4c688e904d42439444dc",
      "IsHidden": "False"
    },
    {
      "Start": "ca65a379b8f640ecbbd00ea1abe6b2bd",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "d41f3f9facb146c9abe74ff7372bf365",
      "IsHidden": "False"
    },
    {
      "Start": "ca65a379b8f640ecbbd00ea1abe6b2bd",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "19af210724d64131be6416be835e71a4",
      "IsHidden": "False"
    },
    {
      "Start": "3d96d7b2764549b1a75d853c6c72a8fc",
      "End": "7ab37174f3cb4d6592716343f87999e2",
      "Id": "bad6eee471bf4b2597fb8d6998ca1ac5",
      "IsHidden": "False"
    },
    {
      "Start": "683f0f6052a64bfe9cebcd0cdc1e3c93",
      "End": "2ae3c62b069746a3940329b25db46352",
      "Id": "59ea92bdbf354e4489bfb5535695e846",
      "IsHidden": "False"
    },
    {
      "Start": "ba8964315d2b466498c8e73c0eb6230b",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "721e89b349bc4c73bd133f44af9e8ca2",
      "IsHidden": "False"
    },
    {
      "Start": "235988b977a14604acb722f2940d6b14",
      "End": "8b3dfa1cdd4d46f29e017a672e889724",
      "Id": "7804c685566847e39e9ad3cfef9aae51",
      "IsHidden": "False"
    },
    {
      "Start": "4a6f4ad6f78f4de59ade11cb0c564a4f",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "5b20a8bb8f2b4a979a4261e90a0b48fb",
      "IsHidden": "False"
    },
    {
      "Start": "7115c25603364da8a51e5cb84d267f45",
      "End": "9182d7cf4e2b4105b31944cf9c39597f",
      "Id": "94dbeb29e59441c580ce359963a658b9",
      "IsHidden": "False"
    },
    {
      "Start": "edffbf7f48b04d89aa738ec345de81da",
      "End": "ffb70a570cbd454a90481b2825bff81b",
      "Id": "2472d70dde88427884e3907ee3f6705a",
      "IsHidden": "False"
    },
    {
      "Start": "7e35f853a91e4fc8ab2a21ec9a570c8c",
      "End": "c3f6cc8735c14d9fa736f79a5bf972b7",
      "Id": "a091950439a64be988c3cbed8ba9c93a",
      "IsHidden": "False"
    },
    {
      "Start": "c299c99af46a4aeb98d78a3724b5529b",
      "End": "5bbd6d4e11b7490888d53a2fcf193a20",
      "Id": "36a195c059624d08819e3356e4ffa9c0",
      "IsHidden": "False"
    },
    {
      "Start": "cee36242ae464531b1ceebeb2b884fa4",
      "End": "21af63424c76407dac9933bda913e684",
      "Id": "aad5d1c2b6dc4fa48244082a354dcac4",
      "IsHidden": "False"
    },
    {
      "Start": "5ed4e2f79751435e847706e7a3780ed6",
      "End": "6ae20e96134d42d8bc4b2363f8ac90a7",
      "Id": "07b071209abd4db6ac3a95566807b4bb",
      "IsHidden": "False"
    },
    {
      "Start": "41d5906d72f147d690c67f68396487e0",
      "End": "d7071f11a1de40069cc54c15c14cdb0f",
      "Id": "4820dca5dbbc4a748dc828abca079f8a",
      "IsHidden": "False"
    },
    {
      "Start": "b2415835e1844a97af39030d2bd9a3f0",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "d1dab9429b0a438ca478d341fabe59a7",
      "IsHidden": "False"
    },
    {
      "Start": "6cbe605591a0477e9bdbb1f61c32bb66",
      "End": "3805e9e9c78a4cfea29998a8558fa835",
      "Id": "60089ac9c06e4c82bee8bae88e9d2e11",
      "IsHidden": "False"
    },
    {
      "Start": "ace1ec76dcbe426b9df8ffce870aa1be",
      "End": "cfadc2c2add14e90b1836896c3985ad3",
      "Id": "d961473abe2b462ab5968b08865a656e",
      "IsHidden": "False"
    },
    {
      "Start": "2d20595c51d346cdaf57d76a04857a05",
      "End": "f9648e5771c7403fbce5d14d204f351a",
      "Id": "8199f1481c5b4145939d6b08a7aa2b77",
      "IsHidden": "False"
    },
    {
      "Start": "99c9647b92cf49ba93ceb20299986ba4",
      "End": "e7bb3ba22e174ce1a936e83f061d5170",
      "Id": "df2ec0b7e6774b5cb3a58acf5d9c429b",
      "IsHidden": "False"
    },
    {
      "Start": "46fcb7aa4efd42df8be86905211c788f",
      "End": "583b330733704330baf738ea4bf7792f",
      "Id": "6c5d9c3e96cb49f98e261fe6b1e5cca8",
      "IsHidden": "False"
    },
    {
      "Start": "57264b25d28640d2a3e9d57fb1c9b09f",
      "End": "191d1385ef96481eb537a25313b67c85",
      "Id": "6327f3d1a103491e815367cc2e6fcdf5",
      "IsHidden": "False"
    },
    {
      "Start": "0c971c39136642848fa16acb95f8cddb",
      "End": "094ae248e07d4f5f9a8503e6355a10dc",
      "Id": "b7ef383d8d1749aa8349589a87d62136",
      "IsHidden": "False"
    },
    {
      "Start": "2c028a8984d5484cb380701f563156ca",
      "End": "db24234063f845469ae0246721579a68",
      "Id": "c6bd1a2475af4f15bcc18c986114b962",
      "IsHidden": "False"
    },
    {
      "Start": "bd9e0bb0b69143978fdfe9d904d9de7f",
      "End": "4d8695a21e6142c885c1079149e4f270",
      "Id": "57b0b937c4e3459ba71a2dada06e0e27",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "eb085e2eacae476d8031f6b7876dfcf9",
      "Id": "440b229f7ec64da281ef8a41b35906aa",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "3524226cb73147c9b014595441388625",
      "Id": "23dc19d082b847e2928063e30d70f52e",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "7894473ce044491bb25c225879bc7ee8",
      "Id": "a520bb93e4b245928421a23878ccfbd1",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "3d7571a892a14d6980f26befd311d96d",
      "Id": "8a4418b5ff074ec5a054a665bcf01f94",
      "IsHidden": "False"
    },
    {
      "Start": "cda4d8e3feae4ce4b8baf96eece3e925",
      "End": "9664603430044451871c6bca6075248c",
      "Id": "87edfefa6ef84d25b8173186d32f1bab",
      "IsHidden": "False"
    },
    {
      "Start": "d0612a40e9d440e28ddadc4aab1afb0e",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "f026578dc7fd411ebfc50d77e84437b2",
      "IsHidden": "False"
    },
    {
      "Start": "e27a169f9a944fe294482052fe05ef1f",
      "End": "a585a4698993467db464df485419f031",
      "Id": "8e6dc9766c0c45e5a113d72dd53c8d6c",
      "IsHidden": "False"
    },
    {
      "Start": "4e6dd81a32884af2aad5bf1e9746adc2",
      "End": "f55e9920f7fa4d468201eb0bab2e284c",
      "Id": "8c31057fe86247f0b0e4bef4ca5ed604",
      "IsHidden": "False"
    },
    {
      "Start": "95707ef7d43648b79460d1c5ee2272d6",
      "End": "fa7cbd7a3ae54d3b9cd639eec7dedbfb",
      "Id": "016af0f8301942ceae760f1d740acca6",
      "IsHidden": "False"
    },
    {
      "Start": "a36c2926d1654975801a127b1c897d84",
      "End": "09baac595f8d42acb57f2f32d54d889c",
      "Id": "be8cfe25d1194cb8be058112a3c50097",
      "IsHidden": "False"
    },
    {
      "Start": "8543ca588114403e9a1db47a07cea87d",
      "End": "1e9267712b3a4ae9b4130f23971a580f",
      "Id": "2eeed0c621554e65b1c08111a5198c4b",
      "IsHidden": "False"
    },
    {
      "Start": "6bc1b037889d4e5c841f5b916c1b58c5",
      "End": "be314907ceb34e98b2a2d3e11f1431b8",
      "Id": "7a71ee65eb214a6c92bb58b1810b55a8",
      "IsHidden": "False"
    },
    {
      "Start": "3314cdf441ce47adb55c96b8e87cb3cb",
      "End": "181c478a75b8486e9cdd9e6274a212f6",
      "Id": "3c9f2b73c6974c8b8f5ca28855e6ae1b",
      "IsHidden": "False"
    },
    {
      "Start": "437eccbb3d724fad9779325d68db224a",
      "End": "bfefcaa0d0af4e35964dd3262b47522f",
      "Id": "69e034b541544838b6a9872d110b2f51",
      "IsHidden": "False"
    },
    {
      "Start": "fb1663514382423ba994c96a3802f02c",
      "End": "e4850a58848f448b88c7c67c46f72ba4",
      "Id": "03e5814e34d54256bdac6976fd9aa66b",
      "IsHidden": "False"
    },
    {
      "Start": "0c3dc18fed984849a49e03df5c51e089",
      "End": "fbcd7126c9c3443cb03cdb905c91ead5",
      "Id": "7c584cff31af4e8b845b32b9fd3964fe",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "51365faf42b74ab896ac53145b613245",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "5eae8a9ba653466e953b5ecdcda0bdcf",
      "Id": "9727533af3e04fbb9ca782e79307c8f5",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "8dec4b3a078d4820ae5bc23fc21c6930",
      "Id": "65fd5b14460b46269b2468f593149b5e",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "9ecdecaad6754e94be9f95c593c87de9",
      "Id": "4a9c1146c8ac49ecb5b43ebff06a7648",
      "IsHidden": "False"
    },
    {
      "Start": "c8791810e1774fc69aed913c366cd1d3",
      "End": "58db521606ee40cbbb9175e7a4e99ce2",
      "Id": "07be7918fa984201a11ae2cb9002d6a9",
      "IsHidden": "False"
    },
    {
      "Start": "2327af364ec545498bfb19c713f87bca",
      "End": "a7ae013dac5242d6a2469a67faedbf42",
      "Id": "3fe9b09434174b29bf8c049a36a464db",
      "IsHidden": "False"
    },
    {
      "Start": "a3941436a3ac4faaa1b173fa6693dd85",
      "End": "8ea9bc11d43346ae98c32696fb7f2d7a",
      "Id": "2b01b9d4d5374ce787478c2d20ea99b7",
      "IsHidden": "False"
    },
    {
      "Start": "521690debbdb4c35aec8062a28baaf4d",
      "End": "fe5a20fac51049149e5df32f438e9af2",
      "Id": "4ba3463577cc4842a6f4086c96aa834c",
      "IsHidden": "False"
    },
    {
      "Start": "a53a8def236845978abb3db72f05e3bd",
      "End": "4d29ee263bb84dbfbadc416bcac5e36d",
      "Id": "9fd0544db9e5448682ff64c8d90c709c",
      "IsHidden": "False"
    },
    {
      "Start": "c06101f072e84e3487bf17ac1b2b7a4a",
      "End": "91d873587a134598a39332dca310d843",
      "Id": "b64ce47ecdc94e75bbe5bae6fc559abd",
      "IsHidden": "False"
    },
    {
      "Start": "f3e8a1b845484aa3aae47e45982eed44",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "cf3df7abf499412da6592dbf8377a1b0",
      "IsHidden": "False"
    },
    {
      "Start": "f3e8a1b845484aa3aae47e45982eed44",
      "End": "22e8da273c3e4d26939848fcf169c956",
      "Id": "b303f69af4d747fb9664967316051906",
      "IsHidden": "False"
    },
    {
      "Start": "a1cd8d901eb34facad252726eedd028d",
      "End": "7625ead503a947a596a3803e4e4f8900",
      "Id": "c0fe5e629c634661a85262e15ebd3b2a",
      "IsHidden": "False"
    },
    {
      "Start": "9373ce73619b446099b200a4b1a68c8f",
      "End": "35a4c8cdedc44c8ba5948f04830c365c",
      "Id": "9ed23fe6af0c43e696add0d841a7554f",
      "IsHidden": "False"
    },
    {
      "Start": "b204b705c6c54283a84910d158212e75",
      "End": "8c42174eddf2471e88572f5b54efc251",
      "Id": "d31dd46a3fdb4262b4f46ed0db5ae3aa",
      "IsHidden": "False"
    },
    {
      "Start": "0f4a156b894b447da25064dd2ebe1abf",
      "End": "79d4eea3fb7a48d79b1d64457bfc1a07",
      "Id": "c38fe467286d4206a697100233018291",
      "IsHidden": "False"
    },
    {
      "Start": "58c7c6b0a8754fb5a8454f0b4a526a50",
      "End": "f0f6cb8e7e4f476cbe080771cf323c96",
      "Id": "7a94a6bef1844a59945af928f6a7b773",
      "IsHidden": "False"
    },
    {
      "Start": "9261a64af541482a84af5327289508c7",
      "End": "fefa6107d08847d9ab30ff09d3adcce3",
      "Id": "00f98c4ad31f4971a8bf237fe1ac82ef",
      "IsHidden": "False"
    },
    {
      "Start": "e1407178978f4bffb4cff65fcd663cd3",
      "End": "680b3dc6cefa440eba8630a532b21213",
      "Id": "20af1ee3c2da4bef93c64d744ecdc76c",
      "IsHidden": "False"
    },
    {
      "Start": "9d72fec785b24faab926ce85810ac85e",
      "End": "0edf93dca70c4857baa364e29682aa57",
      "Id": "30e26599a796465190672b6f64966cfc",
      "IsHidden": "False"
    },
    {
      "Start": "84f07a141f4148a0b8159d442c15da05",
      "End": "5675eb1063754cca9d366a6e262db882",
      "Id": "2b62117dac1c4af89396e02da0f3e513",
      "IsHidden": "False"
    },
    {
      "Start": "a82e7158778145c2b092bbbede207765",
      "End": "369839d064054499b2e82ca01d89b08a",
      "Id": "5dde17867a314fe29984589759f24c0b",
      "IsHidden": "False"
    },
    {
      "Start": "72c82894a0964e758f3cbcbe53d3ca64",
      "End": "12a7938ec704414893a42981de49dbf8",
      "Id": "6186c72edbfd4be39fd7f6c1d1588616",
      "IsHidden": "False"
    },
    {
      "Start": "d78c303edffa4bb6a33d5bc7733835d8",
      "End": "6cd5081b3d894062892a0cec90cd6592",
      "Id": "4073267e927647019482deedda1545b6",
      "IsHidden": "False"
    },
    {
      "Start": "22c3ae1026444d15870b80a07bc4c348",
      "End": "9b5f197c7dd344fea63bb14241a817bb",
      "Id": "ca92bf6ef69f421981b76a0c5f442437",
      "IsHidden": "False"
    },
    {
      "Start": "f44d2c5086604692b008bdafcd4f1bce",
      "End": "89776865d9e04677890be975ab474d44",
      "Id": "324f1fe18b32448e94406546fed8e2a7",
      "IsHidden": "False"
    },
    {
      "Start": "f44d2c5086604692b008bdafcd4f1bce",
      "End": "d51e9f0f59e74d818369de529c3d0ab1",
      "Id": "57b8a66c2d174f168f8bcad1cc647d7c",
      "IsHidden": "False"
    },
    {
      "Start": "07235bb1945f4fbe914951f5b181c72b",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "940afa453fb64665b8ebeb7f2a2256ce",
      "IsHidden": "False"
    },
    {
      "Start": "aae1c0a26b3a4974b80998d629a678ee",
      "End": "741a2975827f49f38b22745f9d48e6e3",
      "Id": "0f61679ead8b4a0b80bd6f2003d5d20f",
      "IsHidden": "False"
    },
    {
      "Start": "65d39af4f7794af8a4604b84acf9a8bd",
      "End": "4e0baa0926fe40ab841bf6cc979e4910",
      "Id": "7ab04d254e7d4130997740d9c43921b5",
      "IsHidden": "False"
    },
    {
      "Start": "b005aee71f90402f98ceeb40b063f4d4",
      "End": "8180b8fdf0144c6e9c89ed53a086bd93",
      "Id": "1763e95884654da3a02465a05cccf2d8",
      "IsHidden": "False"
    },
    {
      "Start": "405861b41dc54bb69d33fc4048245fe0",
      "End": "891c9577db1642f09c2521bceb5c2927",
      "Id": "52f15c0134634f99a713933d45f60638",
      "IsHidden": "False"
    },
    {
      "Start": "405861b41dc54bb69d33fc4048245fe0",
      "End": "5f90f748e6b44f0a8072b82f7031fd6b",
      "Id": "b72aef78e20a4c4ab5b5ea639f4db1a4",
      "IsHidden": "False"
    },
    {
      "Start": "bf2a40fef7d84c0cab23a9767dba712d",
      "End": "8211998131af4410a602db713f26ec64",
      "Id": "8e810d5f94774be68bed103bdc486920",
      "IsHidden": "False"
    },
    {
      "Start": "4d2f36fa6d3a4bc28f422b2ff8749fca",
      "End": "74dd62c06b7e45ff80938d625f1af491",
      "Id": "e1638c8e310b452088895ffa3c9bff5a",
      "IsHidden": "False"
    },
    {
      "Start": "ad3c574c790e4c20bb193e57308911f7",
      "End": "256b2746ba8a44e693b780c82d5f889d",
      "Id": "0ac88112c7db47aea30bf44c8b76e05b",
      "IsHidden": "False"
    },
    {
      "Start": "a0b696a836a342fd947f9111f834c06c",
      "End": "f59d792ef3bf4d5583a055a0197197a2",
      "Id": "f0ae66933a9d45f48ade0abaf28e056e",
      "IsHidden": "False"
    },
    {
      "Start": "a0b696a836a342fd947f9111f834c06c",
      "End": "7506e37c7988482b953c6d2e5bb58381",
      "Id": "62d96a71a8014df584507debfda1d315",
      "IsHidden": "False"
    },
    {
      "Start": "66199a15afdf4c528f192ba8647c48a1",
      "End": "a7577c3ee5ae4aedadf5ee4cb484306c",
      "Id": "494f6415a5454838bc1dc99ef1c7341a",
      "IsHidden": "False"
    },
    {
      "Start": "de9981024aae43ecb9228ea9b39fd4a2",
      "End": "81d612f7f5e34804a2f61f2d9f15035c",
      "Id": "e8c28cdd27f14e35af89942c120aaac2",
      "IsHidden": "False"
    },
    {
      "Start": "82040cf2b8e14cf58aec5aa6087ca195",
      "End": "47c8a8a6a5e24d23a583e046b8342c42",
      "Id": "50d4587224d945ef95e0c7b096b4a658",
      "IsHidden": "False"
    },
    {
      "Start": "38dab7a3f4444e72b1187ffd719b2fb7",
      "End": "80573bc29759491ebd2d20967af4bdca",
      "Id": "82b2476290d5480fba0a04efd682f67b",
      "IsHidden": "False"
    },
    {
      "Start": "ae33459e3e8848aaa6c5bac31eaf5f6e",
      "End": "b0553d2d212847b6bbb7afca9c43421b",
      "Id": "bdce70711da4456f91fe42ae3465e5fe",
      "IsHidden": "False"
    },
    {
      "Start": "3ddb9efb9a3f40668ea59cd322e8749a",
      "End": "12591fe5bc994d9989af5dd754884683",
      "Id": "ea2078bdca7146918ffec859d9ca57fc",
      "IsHidden": "False"
    },
    {
      "Start": "c5f616b275e44e4f9f4fbe4e94ca34a6",
      "End": "fcff2a2e38c145c5bfbc2b44b77aa91e",
      "Id": "240038995fa040afaa66b77d79dce264",
      "IsHidden": "False"
    },
    {
      "Start": "d457d963be3445e4a68858da6e4a3f39",
      "End": "234857a2039546dabbdd64eb0e9fb6d7",
      "Id": "ed911717288d491c9a34ad52986c97a5",
      "IsHidden": "False"
    },
    {
      "Start": "bfc688ab6528415ea7e5f2fca254cd79",
      "End": "f459fb9afd934aecae05fc9fa2a8c52a",
      "Id": "eaa86396cdfa4b30b61a78a1548b615e",
      "IsHidden": "False"
    },
    {
      "Start": "bfc688ab6528415ea7e5f2fca254cd79",
      "End": "56eacfdf0c8f4a7c94a59043f834bc56",
      "Id": "74d9406c3f53446fafb85b31fbfff7d6",
      "IsHidden": "False"
    },
    {
      "Start": "5029cc24c1c248e98ef2b5e9b809bf89",
      "End": "30069eed49fd4019b8f6c84f4063c952",
      "Id": "6aaadc60da6f48c8ae8f76d5d7ea4ec3",
      "IsHidden": "False"
    },
    {
      "Start": "b967f0425db64f718bb6767001d376a2",
      "End": "0bf74db7da0745ea84ffad491caf1c0e",
      "Id": "f68efbea1a734af1bf885996c4466ab7",
      "IsHidden": "False"
    },
    {
      "Start": "1ada94eac4b247ea83a0e271820edff2",
      "End": "bb82869d181e4d3a9c082755e6b92983",
      "Id": "9916daddcbf6433aa46093749f56e2b2",
      "IsHidden": "False"
    },
    {
      "Start": "94e8692d7feb4522b83498290834cecd",
      "End": "41bc639fc0484460bcaa1e7736a13de9",
      "Id": "502f0b46655347d7bf83d57b71f4cb70",
      "IsHidden": "False"
    },
    {
      "Start": "63d5ca7136a74c46b331e210672070fb",
      "End": "a20d617e43b04bd58265ec2c26ce711f",
      "Id": "c0b8ed89e81249fba7a5288187bca9f4",
      "IsHidden": "False"
    },
    {
      "Start": "63bb690f07064add8fafddfcf99d03ef",
      "End": "5a3dd5875c5047348d200bf8d9b4c4e4",
      "Id": "c6413b6443f44857825be7c2096d88e5",
      "IsHidden": "False"
    },
    {
      "Start": "63bb690f07064add8fafddfcf99d03ef",
      "End": "8a2a46a645b04c78a777605da59ba7c8",
      "Id": "98457b719231443ca9e3891cfe240281",
      "IsHidden": "False"
    },
    {
      "Start": "eb21274066b146bf800bceb463f3395f",
      "End": "5785b96021b344ecb21d5532e1862d77",
      "Id": "ff8657ee62e545b69eb5bc72383a13b4",
      "IsHidden": "False"
    },
    {
      "Start": "b0b4c268a2604edfa7dccd891d775578",
      "End": "c279a9299bea4ff5b2634a59cb6422d6",
      "Id": "1deb9b77262640f1bc2418e2c6ad015a",
      "IsHidden": "False"
    },
    {
      "Start": "974932bea32b4d9ba93b9dc4f0b35fe1",
      "End": "3839786fe6dd42b98083e0470a6f99f8",
      "Id": "f39c0c6e9bcd4038afe4e8ae539e5c55",
      "IsHidden": "False"
    },
    {
      "Start": "1fcf80d1dd5a4466945660ece0aa6c65",
      "End": "422e1282c1754444b58f85b32e26e451",
      "Id": "7f9927aaab724503a63cc648409a8ee8",
      "IsHidden": "False"
    },
    {
      "Start": "3e0700e1582b4711920267773437ebc1",
      "End": "425e7d43b87e4eeba97519152db7b213",
      "Id": "53cf3418660b48bc94bf0846c7e0e6a0",
      "IsHidden": "False"
    },
    {
      "Start": "9b7492462cd54cd2a2c9f6c651b1c3b8",
      "End": "4d6bba5deab44bfa8a76c2749301aa2c",
      "Id": "be3733bf1232472cb06a12354281a981",
      "IsHidden": "False"
    },
    {
      "Start": "39dd98d77c354c18bdeafe00ad59c54b",
      "End": "f602e8968c8243d49bbed9c8df4b7c4f",
      "Id": "211c7333949745baa21d7b9b4f917ad7",
      "IsHidden": "False"
    },
    {
      "Start": "19fed6c75882468f9b4a25ed5efedabf",
      "End": "e537fe76dc53476aab613e7930ad30a5",
      "Id": "ea43248b29814eaa99ccb08c963bc5c3",
      "IsHidden": "False"
    },
    {
      "Start": "276e78a54baf433d9fd55341b784a031",
      "End": "f581407932034c42b2801f1d53a976e8",
      "Id": "f4855a35bbbf4d75b4e9aadee5cc0762",
      "IsHidden": "False"
    },
    {
      "Start": "276e78a54baf433d9fd55341b784a031",
      "End": "43ea41ac761a4eabafaa053291de6827",
      "Id": "e5170394f56546379a01444419989618",
      "IsHidden": "False"
    },
    {
      "Start": "276e78a54baf433d9fd55341b784a031",
      "End": "86194778d71f4ac0bc96ab7880fd35eb",
      "Id": "4e744fd3332b44c8826d2d02d38503cb",
      "IsHidden": "False"
    },
    {
      "Start": "0e97e72944b74164bd3d31b3a342a71d",
      "End": "a37598b7200b45889ad3937d8d3ba58f",
      "Id": "b2aec8ffd5f14596803118aba380d5ae",
      "IsHidden": "False"
    },
    {
      "Start": "481579b38c374bde97df38b49450d2d5",
      "End": "6205562251954e8c898108ef58394e19",
      "Id": "85026aa74ede464b8ffcd92a58787aef",
      "IsHidden": "False"
    },
    {
      "Start": "481579b38c374bde97df38b49450d2d5",
      "End": "6c90e14ecc044989a244cb3eefb1e96d",
      "Id": "bed9e78645554b91a2a125104885eff4",
      "IsHidden": "False"
    },
    {
      "Start": "481579b38c374bde97df38b49450d2d5",
      "End": "f2f6ee3030734e5b89b6ec0ad6942754",
      "Id": "77ed38418d394fec8a89b0e4463d9c2d",
      "IsHidden": "False"
    },
    {
      "Start": "fbfe346f8f8044b39900ea6883d30143",
      "End": "5105fd88adee497aaef9a7e90e6eb0c0",
      "Id": "a728350eecc34b91a3990e349c1019ee",
      "IsHidden": "False"
    },
    {
      "Start": "3c586a5ac11d4de5af063fe9aaffbe88",
      "End": "f0517d2cae9b4ab8a02889c61043dad2",
      "Id": "2363eaf0302b48fabea418ef47268f2b",
      "IsHidden": "False"
    },
    {
      "Start": "4ff2a455b25c45fe9ddcacd2e9520d72",
      "End": "eb988cf855284eb0a5353c3e02aef96b",
      "Id": "1caa2a7e35004995a7d6d13bb460fe3d",
      "IsHidden": "False"
    },
    {
      "Start": "a428da38c76340939d9711daf0d46354",
      "End": "fa0a8fa619944de69c8d2d44e38af1f3",
      "Id": "e39b6a38239b49da8bb6e341589ca8fe",
      "IsHidden": "False"
    },
    {
      "Start": "9486c9844e124f01a18e8682e8ed666e",
      "End": "802be045d70d452e95cb69a0e8a60e64",
      "Id": "3b05cee975904358bfb533d0ee840787",
      "IsHidden": "False"
    },
    {
      "Start": "3d71c4553a6748a08e3349195372ed4f",
      "End": "76ea602cd8ea48259a39c339465c6d48",
      "Id": "916f4d185a9f4afdb86a57aab61216b3",
      "IsHidden": "False"
    },
    {
      "Start": "7034c72971e546e89c20469e93f4b59c",
      "End": "e01c1e93e0d24cafa0f83ebb34f447cb",
      "Id": "a424f237d25046659b1b4d93ce358a81",
      "IsHidden": "False"
    },
    {
      "Start": "c83b44f8f9384ca1884cac66d13ae807",
      "End": "097bc17968414b43b87b1b1294622431",
      "Id": "398fbff0647d48a9b44b09b791277a30",
      "IsHidden": "False"
    },
    {
      "Start": "a044368d59c4470db590cdbcbdbf57c3",
      "End": "da9cd4dfc1a349c7b0a94ead077f754c",
      "Id": "b57991b299654968aecf815f7468f499",
      "IsHidden": "False"
    },
    {
      "Start": "a044368d59c4470db590cdbcbdbf57c3",
      "End": "3761e827689844ff903e8f8e6bf7bed8",
      "Id": "ccf91a9667ba488b86a916ebec82355e",
      "IsHidden": "False"
    },
    {
      "Start": "a044368d59c4470db590cdbcbdbf57c3",
      "End": "d81f17e5f6e944a39b99b42849abfe38",
      "Id": "5f563a697ee149d69736c71e61bc6e64",
      "IsHidden": "False"
    },
    {
      "Start": "4878da46515549ef99c83dd0cdbba062",
      "End": "1d71eae93fdd4766a27e7845da2fd56f",
      "Id": "40d5196a63f4477fac5063b771f90bca",
      "IsHidden": "False"
    },
    {
      "Start": "4878da46515549ef99c83dd0cdbba062",
      "End": "8e539b22736e408ca8d38bdce5ad4645",
      "Id": "952ea333be3a41f3a02431139d9fe2f1",
      "IsHidden": "False"
    },
    {
      "Start": "4878da46515549ef99c83dd0cdbba062",
      "End": "0b94560719f84c8a9a3fe1edca8596b7",
      "Id": "d99e270cb28e4bca8fb87971915d1115",
      "IsHidden": "False"
    },
    {
      "Start": "4878da46515549ef99c83dd0cdbba062",
      "End": "4c64d18b42f1478ea2879afee9156e0e",
      "Id": "adef913c46fe4a1c8171f5291bb3f793",
      "IsHidden": "False"
    },
    {
      "Start": "29778afee81741a99fcef070caf8466a",
      "End": "bb29e3761fe74fd9abdec6b587b5153e",
      "Id": "2209716fb2274c47a738f4d0d5bb509a",
      "IsHidden": "False"
    },
    {
      "Start": "29778afee81741a99fcef070caf8466a",
      "End": "f64af6d713e34d60a821f7016ed1271f",
      "Id": "db1ef1af04554813aa44a9265951b6e6",
      "IsHidden": "False"
    },
    {
      "Start": "e0eb353f558048a08087aa0b16aadf33",
      "End": "c0c3cff4056c4846916c9f58e114f431",
      "Id": "bd69903c4b3c46abb6b2dc7d2559a018",
      "IsHidden": "False"
    },
    {
      "Start": "e0eb353f558048a08087aa0b16aadf33",
      "End": "0550d4e413da4444a9ea2fab19d71426",
      "Id": "aa14738f178b432e8ea59b2943b38efa",
      "IsHidden": "False"
    },
    {
      "Start": "70122e357c9649a39bd9fa99dfe58e2f",
      "End": "445a7459b0ef43efa772de89d5973246",
      "Id": "a7d552adc6054618a173cd7484f85261",
      "IsHidden": "False"
    },
    {
      "Start": "70122e357c9649a39bd9fa99dfe58e2f",
      "End": "158d208e3af248c1b810416c25beea74",
      "Id": "0beab043d1774b82809e3fd06d1e6f93",
      "IsHidden": "False"
    },
    {
      "Start": "18756924f6c44167a9e604e00b2a0043",
      "End": "69ddc7153f8b4c0d9e79b625d2ceb5b8",
      "Id": "c297e11376b042ecb5d7ce29e0e82798",
      "IsHidden": "False"
    },
    {
      "Start": "18756924f6c44167a9e604e00b2a0043",
      "End": "5d445055eef449fcb420904772a4cf34",
      "Id": "b71eb443f6fb44b3910025e8d14f2a43",
      "IsHidden": "False"
    },
    {
      "Start": "3c4760956d9b4f21aa2473f452f5f770",
      "End": "33356f0dacea41e9a573e8903b666274",
      "Id": "c486f1d9228943c3819e1daef7745cd6",
      "IsHidden": "False"
    },
    {
      "Start": "879e932f487d48e3a2a5b4909471fb5a",
      "End": "f4a3b756cd594242b4cea314dd6e6a09",
      "Id": "9ae5fde441574805a0db57bfee682801",
      "IsHidden": "False"
    },
    {
      "Start": "b92cce70ee6449bc98201119b4b4d9c0",
      "End": "4171c3e522e6473ba1614a8790f1bc8a",
      "Id": "d2bccbe0582e415fb0f39896ffc97cf1",
      "IsHidden": "False"
    },
    {
      "Start": "832ef1fc57854964a41526124cd20f57",
      "End": "97f757ef89df4086b700a3bc15156084",
      "Id": "eb6d0ed8bc684a6893eb59d24cf25882",
      "IsHidden": "False"
    },
    {
      "Start": "21773ab8db254ea4bf6a6286240eb78e",
      "End": "cc426feb5025408bb2bc069881d43e69",
      "Id": "c545f7f657e14a7a80d4ee1e1d7685a4",
      "IsHidden": "False"
    },
    {
      "Start": "0b831048acf543128b83d522cf47e613",
      "End": "1cba78b127764152a6dbb25ddafb3c07",
      "Id": "87bc6d34391e42248c57b29074d08072",
      "IsHidden": "False"
    },
    {
      "Start": "7340a3145cb54bdebc92cca1a3a992a0",
      "End": "31a2a03e186b41f68176345589f851fe",
      "Id": "9a54266ad8df426d8ddf51f61d1349b1",
      "IsHidden": "False"
    },
    {
      "Start": "ffbc59f2b6d9498a932ff7407d9a85a5",
      "End": "c118eb88293f4085967c825265513dc9",
      "Id": "7449508fa0fb41da9a9e22e4ac7dfb2c",
      "IsHidden": "False"
    },
    {
      "Start": "ffbc59f2b6d9498a932ff7407d9a85a5",
      "End": "4a3d764b15a04f64ba241e9d612d818a",
      "Id": "b84590ecbc694c70b3e8bb67d8a3c402",
      "IsHidden": "False"
    },
    {
      "Start": "167037667e3d4875817f2da6ad787217",
      "End": "0c0b5c7035204f6091ddc58f2ae98842",
      "Id": "63a0d8a7341f4728afa7993115bbdd87",
      "IsHidden": "False"
    },
    {
      "Start": "e741b98ab524463eb0dcd602580df461",
      "End": "ba710661bbf7416dbb8440f86101f522",
      "Id": "91fa8cf20344444c916787d04e1a95ac",
      "IsHidden": "False"
    },
    {
      "Start": "ec9cf22020e1404a892881071e26c764",
      "End": "9ae7c40f92044299bc9e9b698fc9d2b2",
      "Id": "48bcb8a145a04684bcd6eda2ba1c461e",
      "IsHidden": "False"
    },
    {
      "Start": "6a7600b37e8f4905901417bf5aa5f561",
      "End": "8859344b4cba45f8a62d227891a6b420",
      "Id": "ee91cfec12684202aba96319e81350d5",
      "IsHidden": "False"
    },
    {
      "Start": "ab3db35d982142cd8c22b933b924c483",
      "End": "f31df2c48e714a048fa38c7169652702",
      "Id": "3409c3af8fa044dfbb4541bc502e8031",
      "IsHidden": "False"
    },
    {
      "Start": "978e27b279ad4a52b008353bd58937cd",
      "End": "cc3bd154b8d0439a851134f5ecc290d9",
      "Id": "d0c4fca66bad47408f5cb25db3cc785a",
      "IsHidden": "False"
    },
    {
      "Start": "be0a733b8a9b4101a5dc86f38d73797d",
      "End": "838b6c7f634e4418844289648316ffed",
      "Id": "070f18bded004f3cb963196d677db6ac",
      "IsHidden": "False"
    },
    {
      "Start": "2dca966a90bc45698c60f4872dab4d59",
      "End": "8076a247af394e739313ca05b1daeed3",
      "Id": "424bd8f06ecf4ad3abb9d0b90e603235",
      "IsHidden": "False"
    },
    {
      "Start": "555edee1fa1742ca9f3c409d8712c33e",
      "End": "3515d144e0404066bd315e059bda6527",
      "Id": "1262d8433efe41ffbd12c7d052d14abb",
      "IsHidden": "False"
    },
    {
      "Start": "536aab7a6fd8492da0e4b6fd734c5708",
      "End": "b9a0382b43fe47949441f4deeccd31f8",
      "Id": "c86cf887bf654d5fbf363ed0c4d7716c",
      "IsHidden": "False"
    },
    {
      "Start": "d118c6ce4b194a1a913f63e233d0107d",
      "End": "e4fa2b9730314bf0856d6f2854faa8bb",
      "Id": "535b8c7a86224d328d7e2208dacc282f",
      "IsHidden": "False"
    },
    {
      "Start": "7aa3b9d5c40c43d1b5e3f7bfd674f5e7",
      "End": "1bfc3965ab604393ad2e6b9f6ffbb98a",
      "Id": "b7274e83324d4aa79914c33c54bfc99d",
      "IsHidden": "False"
    },
    {
      "Start": "70a4ef7231f2421384b51df53a602273",
      "End": "294ca45d5c6f454c96283f57ed11a99e",
      "Id": "82418529b26e401b91f208ba03cd725d",
      "IsHidden": "False"
    },
    {
      "Start": "3f0c18e521ea46e2a46530df4db03b50",
      "End": "9cca098a0bd34e719696b7ab094bfbab",
      "Id": "e65350f08fbb4d2f8a5e95c5489d0925",
      "IsHidden": "False"
    },
    {
      "Start": "3f0c18e521ea46e2a46530df4db03b50",
      "End": "f198239f5ccf4938b753a135bbb3d901",
      "Id": "c6e5928858084df1b9d3ece99f48be94",
      "IsHidden": "False"
    },
    {
      "Start": "3f0c18e521ea46e2a46530df4db03b50",
      "End": "83b1e795d3684f03b23dd1278581607e",
      "Id": "e77b9ada387545d1b94283800f063fe8",
      "IsHidden": "False"
    },
    {
      "Start": "3f0c18e521ea46e2a46530df4db03b50",
      "End": "a4daf0ef482a47aea7c1ee705dc92bc0",
      "Id": "e877344c09d84da789bb491061746637",
      "IsHidden": "False"
    },
    {
      "Start": "6b4856d168584fb2b22c491334826316",
      "End": "e834a43fb6504af6961a809b2b5e11bb",
      "Id": "64304739b52e4b4b998599788107582c",
      "IsHidden": "False"
    },
    {
      "Start": "01d6010d305046d8b9b5f84ced5c248d",
      "End": "3dd32f3fb4d3425da6e94cb434f31fea",
      "Id": "61bc63b5517c4586a82900b76a07c7d4",
      "IsHidden": "False"
    },
    {
      "Start": "aca334311bdf46a2b21a7d994c5758db",
      "End": "12628950b65a40d3bb66872d10c57aeb",
      "Id": "4e7e4bffcc554de68e7ff88829e68ea7",
      "IsHidden": "False"
    },
    {
      "Start": "1fd76db74aa84ec39f0f291d7756cee6",
      "End": "c7fb29a8a0a04efc928679b6223eaaf7",
      "Id": "33ed09c19866451fa054a67ee189367e",
      "IsHidden": "False"
    },
    {
      "Start": "a828bd85f6ad4d6cb945d754497347e8",
      "End": "c8e11369ef484362ac8266b20976b178",
      "Id": "4488a34d35d3479cb4040800275b497d",
      "IsHidden": "False"
    },
    {
      "Start": "47a053467db14ccbb0cd09c962592769",
      "End": "fe2c478f3a384ae3b4d62f399169ed03",
      "Id": "3f390bd0b4a948d88eef3da4cb6c249e",
      "IsHidden": "False"
    },
    {
      "Start": "722bd13816554ca1be3d0ddea7b2c6ad",
      "End": "e753915657814bb1ad6147b1fdf7e945",
      "Id": "94ab3c88821b4d3196f520ef2e3cf434",
      "IsHidden": "False"
    },
    {
      "Start": "07235cce8c6f4761873d5dbc755d4290",
      "End": "1f004aed392442378b750ca0becf50ab",
      "Id": "dda684f98f3e4f33b206e15742fcec55",
      "IsHidden": "False"
    },
    {
      "Start": "07235cce8c6f4761873d5dbc755d4290",
      "End": "cfa2518183424cb4b5856956b85a4029",
      "Id": "94bb7c24ad9649aab09b7230c0d564eb",
      "IsHidden": "False"
    },
    {
      "Start": "07235cce8c6f4761873d5dbc755d4290",
      "End": "1f03d406711f4382b5591ee330079078",
      "Id": "7a11741cf9bc4472afe6ae6c683cffcf",
      "IsHidden": "False"
    },
    {
      "Start": "07235cce8c6f4761873d5dbc755d4290",
      "End": "6c117d6f81ed4251b7817973f6f279ca",
      "Id": "4f70dda1a4cc475fa4c65729fae3c6f4",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TfM9xR5nuKi3fSjd9KsCXzPcVl6x4q03QLi1h1C6Fs11uMbNGxT5du7cwG1fvL94j9DV/d9K8/8AiovmXWj/AO5cfzhppXdhN2R2c/inR7ZN0urWMa4z81wn+NZs3xK8OQ4xqiT56fZopJv/AEBTXiWoadDZ3FvcQp5LyTKjhOFYEHqOnate37U2rCTuelyfFCwZittYahdDs/krEp9P9Yyn9M+1QN8RL6Zf3GjRoc8faLsA/wDjqn+dcbb9q07bqKgoiTXPFGg3E96dRt7m2mnd/sUyu6rudmwrkggAHA7cDivQfCfiX/hKNHF8bf7KfNkhMZbd8yMVJB9Mg4zXA64u7T4x/wBNR/Jq6T4WHb4TI/6fbr/0c1V0uTs7HZ+Z7ijzPcVFu+lG76UiiXzPcUVFu+lFAEE04ghkkKO4RSxWNSzHAzgAdT7VxC/Fe3uJDFbaXcfaFOHhvJBAyexXDMDnsR6812u6uJ+LFjbXWg280kKmdblFWYfLIo2twGHI/OqJJ7Xx9dNIGmsIjEescMp3r9CQA35LWb421i11m40vyGYOkc5aORSrDJi/Me4zXEWN9qNjjbKt/F/cuPlkx6BwOT9R+Nai6tHqmpW0YhmgmSCZmjlTj70XRhwfzq1a5LuZ2vJtjsj/ANPK/wAmqzb9qb4kXbDZf9fS/wDoLU637VMhx2NK37Vp23UVmW/atO26isjQXVhus4h/01H8mroPhkceGZB/0/XX/o5qwdRG63gH/TX/ANlatz4cfL4dmH/T/d/+jmrRbE9Trd1G6ot1G6gCXdRUW6igCLIrkvid/wAi7D/19p/6C9dTurk/iY2fD8H/AF9p/wCgPTA89t+1aWnLu1aL/r3l/wDQoqzbftWto67tXT/r2l/9DipLcXQh8WJtt7A/9Pa/+gtWbfatDo1sk86yNGziPMYHy5BOSSQAOOtbHjNNtpp5/wCnxP8A0F65y6t4rjWIhLEkgFo5G9Q2DvTnmuPHYj6rQlWtex14LD/Wq8aN7XNiw1SW+iWW1hiaFvuyNOD+YUEf+PVsWt5cRYM0AdO7W5JI/wCAnk/hk+1fPc3iLxxYXCTw+FEglk1N4Lie1v1xBZgEpcFc4YtzkEcbeQMivY9I8QahDbwvdW8d7GyKxkthscZGT8hOD17Ht0rHBY2njY3Ss15p+W69OtjfG4Kpg5au6fk10T2fr0udfJdQ3kcIikDlZfmXuvyv1HUVufD/AOXQ7gemoXf/AKOaub0++0vxAyKrq9ygyI3BSeM45wOGHpxweeoroNEhm0O3eG2IuYHleYpO2HDOxZsOOoyehHfrXp2sebu7nU5FGRVCHVoXYJLutpTwI5gBn6HofwP1xVvdQMkyKKj3UUAV5mk8mTyTH5207PMzt3Y4zjnGfSvNPE9x4glhWHW4jDapIJPtFnF5kG7BAJYDco+bo2OSOTXpO6jcaoR4/Day+WskW26h7SW53A/gP6ZrW8O4l1kbSDi2lz7fPFXXah4Q068kaaFG0+7PPn2h2En/AGl+63bqO1ZttpF5p+uxfaJLe4ja2mCTRqUkPzxcMvTp3B7dKVuojG8dptsdOP8A0+p/6A9cxL/yGI/+vST/ANDSut+ISbdP03/r+T/0B65KX/kMR/8AXpJ/6GleJnP+41Pl+aPYyf8A32n8/wAmeKTaW3lwi3+KTMketTSSrJPG5vCQf9BBEnGwfw8/e+6OBXuOkf8AIPtf+uSfyFeAalfeFH/s9p/h9qltK+uyx2ubIwiC525a6YKwBVhjBIOdp9K9/wBI/wCPC1/65J/IV5+S3vK9/uiur/l/rsennNrRt37t/Zj3NNrOC8VRPEsmOjEfMvuD1H4Vq2F5qmmY8i6F9CP+WF6Tux6CUcj8Q3X2xVC36CtKGvpj5c24fGlssQS80vUFdjhoo7U3CH/gS5XH1wfai31u4vBdLo2k3cLW8nlFLyaNIM7FbAXLMBtZeFwO3FVoO1aHhk/vda/6/h/6TW9VHcVjdhkkaGMyqqSlQXVW3AHHIBwM0U3dRWgiLcfSjcfSoqKoCXcfSqV0C2rWn/XvP/6FDVioFXdrFt/17Tf+hw0nsI5b4lLt03S/+v8AT/0XJXG6lYz3CpNaKhuV+Q+ZI6gxnkgbSOchcZ4ruPiiu3S9KP8A1EE/9FyVzVv2rnnCNSPLNXXmaU5ypy5oOz8jnP7NtZt8VxNNpt1Knlsko2I456Nkhu/Un6CtyGzk02FI5I2RIwFD9VwOOv8AjitdIknjMcqLJG3VHUMp+oNJb6G1oQ2m3Ulpj/li/wC8hPttPK/8BI6niop0aNJ3pwUW+ysa1K1aqkqk3K3d3IrflVI5FaUNVCn2dlGoWUloWOBdWH7yJmwTygBYdO6/j3rQt7WSSETWzR39v/z0tjk/985/QZNatdjAuwdqu+Gz++1vj/l+X/0mgqjayK2QDyp5HcfUVZ8PSKbvW0DKXF6pK55A+zQc4pw3G9je3H0oqKitiSPd/nNG7/Oai3e5o3e5qrCJd3+c0Wfz61B/17Tf+hw1Fu9zU+k/PrkX/XrN/wChw1MtgOe+LC7dJ0k/9RFP/Rclcnb9q7P4wLt0bSP+wkn/AKKkrjLftWPQZpW/atO26isy37Vp23UVBZr6WM6rpw/6at/6KkrK03Q7W4n1aePzLO7/ALTux9otX8tj++bG7sw6cMD0rX0f/kM6YDwTK2P+/UlVtFbEmr/9hS7/APRzVpT3JZHcWmsTMImm02eIDC3U9u/2hfwR1Hp3GfSoIfDFx5Uiz6xM7SSea7wQRxHdsVMgkMynag5UjvW5u9zRu9zW3KiR8f7uNE3M+0AbmOScDqfeimbvc0U7ARbz6/pRvPr+lFFUAbz6/pTre6ls76O6hCOyxtGY5AQGDFT1HQ/IOx60UUnroBnfEKd/FGl6VbWsLQ3UeoLJIk4O1VEcgLblBBHI/MZxWLB4Rul4kvoQPWOEk/q1FFQooZeh8Nhfv39xn/pkiKP1Vj+tWk0OzXr58nrvuJCG+q7sfhjHtRRVcq7ATR6XZxMGS2RWHIbbyPcHt+FSWdrFYrKsIcCWV5nLuzkuxyxyxJ5PbpRRTET7z6/pRvPr+lFFMA3n1/SiiigD/9k=",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9826.181034372159,
        "Y": -2722.6357651774688
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9468.181034372159,
        "Y": -2722.6357651774688
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8518.4340450710552,
        "Y": -2655.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8772.4340450710552,
        "Y": -2621.8061687714207
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlantAngle",
        "Id": "e0347155fcfe4b88a8aa4169246e4107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7159.4340450710561,
        "Y": -2265.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7617.4340450710561,
        "Y": -2274.8061687714207
      },
      {
        "ShowGeometry": true,
        "Name": "Column Slant Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7617.4340450710561,
        "Y": -2122.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Column Slant Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7617.4340450710561,
        "Y": -1970.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6670.4340450710561,
        "Y": -2045.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7159.4340450710561,
        "Y": -2014.806168771421
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Beams Slope Angle (degrees) from",
        "Id": "b99019feddf34cddbd879fca7f2bc375",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7159.4340450710561,
        "Y": -1863.4461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Beams Slope Angle (degrees) to",
        "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7159.4340450710561,
        "Y": -1712.4461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "596909f5799446a7820a3e674d2f49c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1292.5986847382928,
        "Y": -152.4282164074956
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 915.59868473829283,
        "Y": -25.288216407495611
      },
      {
        "ShowGeometry": true,
        "Name": "Column Section Type",
        "Id": "3db0ae870aae4d4e8fccea48976c3b33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 915.59868473829283,
        "Y": -211.4282164074956
      },
      {
        "ShowGeometry": true,
        "Name": "Beam Section Type",
        "Id": "1ca46343c98e422eb589fa5f6c1c842d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1292.5986847382928,
        "Y": 64.5717835925044
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "145ece1505dd4e13b5adb581f63e7bf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1722.5986847382928,
        "Y": 31.571783592504403
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e1d42da2f0d04115ba4c333d965e15ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1292.5986847382928,
        "Y": 250.71178359250439
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6016.7704329304961,
        "Y": 650.61920116344163
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3547.9131623905218,
        "Y": 721.9949458400215
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3994.9131623905218,
        "Y": 743.68002549690289
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4811.02913463758,
        "Y": 706.26936047720437
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4557.02913463758,
        "Y": 740.40936047720436
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5226.02913463758,
        "Y": 482.57023518139886
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5226.02913463758,
        "Y": 929.96848577300989
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5615.1925885458331,
        "Y": 799.10155431355611
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15840.045502287727,
        "Y": 430.69394768321536
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7064.3711515603572,
        "Y": 400.11007455199149
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6810.3711515603572,
        "Y": 434.25007455199147
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7479.3711515603572,
        "Y": 400.11007455199149
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7827.3711515603572,
        "Y": 400.11007455199149
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7493.6679839055632,
        "Y": 56.847347091543668
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7078.6679839055632,
        "Y": 56.847347091543668
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7841.6679839055632,
        "Y": 56.847347091543668
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6824.6679839055632,
        "Y": 90.987347091543654
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8135.3711515603572,
        "Y": 400.11007455199149
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8149.6679839055632,
        "Y": 56.847347091543668
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7102.3558705571886,
        "Y": -592.10532821171751
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6848.3558705571886,
        "Y": -557.96532821171741
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7517.3558705571886,
        "Y": -592.10532821171751
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7865.3558705571886,
        "Y": -592.10532821171751
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8173.3558705571886,
        "Y": -592.10532821171751
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7364.9400046880646,
        "Y": 909.57632592351752
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7842.9400046880646,
        "Y": 909.57632592351752
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8891.9400046880655,
        "Y": 909.57632592351752
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "774bfec08d6646eab975b1a78194a1d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11811.426861409143,
        "Y": 1091.9283476868388
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11557.426861409143,
        "Y": 1092.0683476868387
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11811.426861409143,
        "Y": 1309.0683476868387
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15190.045502287727,
        "Y": 430.69394768321536
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7376.1846227162005,
        "Y": 1346.9405301806642
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7812.1846227162005,
        "Y": 1329.9405301806642
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8202.1846227162,
        "Y": 1270.0382764539763
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8510.1846227162,
        "Y": 1270.0382764539763
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "d19b07df0f1247c09fd1a6d579459e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12233.426861409143,
        "Y": 1106.9283476868388
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6949.9400046880646,
        "Y": 909.57632592351752
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6695.9400046880646,
        "Y": 943.7163259235175
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 156.96088482147638,
        "Y": 1130.9017135296517
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2260.5170486684856,
        "Y": 1084.3076043601081
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1749.5170486684856,
        "Y": 1158.3076043601081
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1326.5170486684856,
        "Y": 1158.3076043601081
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2771.5170486684856,
        "Y": 1084.4476043601082
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2779.6946505558026,
        "Y": 1257.8803172002515
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3506.0670938274379,
        "Y": 994.34390791085684
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3448.9224757336669,
        "Y": 1327.6341503558765
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "b9e7767890a047e685f8ff26c0f26d02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8025.4340450710561,
        "Y": -2581.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d074ff8024794568b8a0c042612ff9da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8518.4340450710552,
        "Y": -2473.8061687714207
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f5fd7157d8dd46efa1a7ad4b9e7133ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4293.0670938274379,
        "Y": 1028.4839079108569
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "75fbb7ec69cf461b95141eb144180577",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2865.73065840081,
        "Y": 76.7355342093901
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "98f256f147cb4d0f8148c23deef718d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3213.73065840081,
        "Y": 150.7355342093901
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "558c4f50298042ad99570158961261a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2865.73065840081,
        "Y": 258.87553420939008
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "289d91618171478dbb998b4e6984e0ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4039.0670938274379,
        "Y": 994.34390791085684
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "5bf679f3a1d845e9a80dcfacd4d4b0c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3981.9224757336669,
        "Y": 1327.6341503558765
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "997ebb57baa34324bb07089352ec8a17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8278.9400046880655,
        "Y": 909.57632592351752
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "911367ea95104a68a8bdabf24ea343d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8583.9400046880655,
        "Y": 909.57632592351752
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "72425b91f2ea4495926845dcc24a7e3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9712.1995850147923,
        "Y": -320.78194742732285
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ade3a07d982d4a6b9566f90ae4060d67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10057.199585014792,
        "Y": -162.78194742732285
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "650fbffecdd54e1f8a047828f6d12668",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9712.1995850147923,
        "Y": 29.218052572677152
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ad66920b3a3e442bb5fe89999aae474b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10865.199585014792,
        "Y": 19.218052572677152
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0685e4e2cde14269a350099bca66d1cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10461.199585014792,
        "Y": 144.21805257267715
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "bb1eaf21f4dc42819950d90924b30413",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11269.199585014792,
        "Y": 110.21805257267715
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "02fc6e7ff41f41b384488b805e007f4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10865.199585014792,
        "Y": 235.21805257267715
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "4f35443af9384bb5a47d95baaeedceeb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15437.045502287727,
        "Y": 430.69394768321536
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2404215ffc2c4afa9614331a555b437e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13249.054465743597,
        "Y": 1477.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "6bcb242ae05c45fda1f9ebbbdeec3731",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9636.1110356438967,
        "Y": 909.65985869427482
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ffb92b32cdde4dc3a73c1560eb54fdfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9957.1110356438967,
        "Y": 1011.6598586942747
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c33840e0557c4408a330da04f399cfb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9636.1110356438967,
        "Y": 1147.6598586942746
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "6e077c8a1abd42a7aa12f341ed0d448d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10361.111035643897,
        "Y": 1102.6598586942746
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "90dbaba524234fdfb31eb37933266b20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9957.1110356438967,
        "Y": 1227.6598586942746
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f3f8813e5c794004833a9739d4c2d0ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10765.111035643897,
        "Y": 1193.6598586942746
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "12e6cd04e27647869a2afb60be7717cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10361.111035643897,
        "Y": 1318.6598586942746
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "a1f4df2ff8434486a643c653fcf53787",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12941.054465743597,
        "Y": 1308.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8807f05fe05d4763a174deb7ff8863e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12941.054465743597,
        "Y": 1156.3318439917061
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "852b8ef9499847458b72627ed032ffc3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13249.054465743597,
        "Y": 1295.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "ffaace1683d54d13971e8728952de923",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6961.1846227162005,
        "Y": 1346.9405301806642
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b6bd315c8a80447a95142ed6c7047fd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6707.1846227162005,
        "Y": 1381.080530180664
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c6d9585fb47841cb9c9ceb4bfd7558e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6853.6769227734076,
        "Y": -238.37110138735022
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "dde7df2ab5954fc1b5b52264b6ea322c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7522.6769227734076,
        "Y": -272.51110138735021
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "1e3e2a13ad1349daa6c58b63b5f0b78a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7870.6769227734076,
        "Y": -272.51110138735021
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "3841de7214484a55b00b70d485720ed1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8178.6769227734076,
        "Y": -272.51110138735021
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "d45cf1955c2e41dd9e147541a76d0162",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7107.6769227734076,
        "Y": -272.51110138735021
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "254a2da754394a22bdc053660c8ae550",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10461.199585014792,
        "Y": -71.781947427322848
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ebc677ba74f349d581eb89a79f50b8c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10057.199585014792,
        "Y": 53.218052572677152
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "745d81c493ee465684bd2dca363c1732",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1892.2201030497877,
        "Y": 1132.0092918671003
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "35aa8435dc9b403b9c32aa5427de285f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1516.2201030497877,
        "Y": 1073.0092918671003
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "647f8844bb9c4fc699893a2c544ea501",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2479.2201030497877,
        "Y": 1098.0092918671003
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.IsItAWebFlangeSection",
        "Id": "91006b7133c74738aeeb5fe722e22aa4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5334.4340450710561,
        "Y": -1827.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "3. On column web=true (on column flange=false)",
        "Id": "b6379c9d97da40e589ef5c84f9338c3f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -713.0820744996945,
        "Y": -1122.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Tolerance for the 90 degrees beam to column angle in the horizontal plane",
        "Id": "da5564f9c15c4442875c3c2f09316d54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -697.10527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "4. Library file path",
        "Id": "e481db9b9a764cd880368fe06869d1df",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4508.9224757336669,
        "Y": 1361.6341503558765
      },
      {
        "ShowGeometry": true,
        "Name": "5. Connection family to place",
        "Id": "506614825fda4465a46f0e053404340e",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6263.2869897165383,
        "Y": 858.54561815469367
      },
      {
        "ShowGeometry": true,
        "Name": "6. Filter connection type name",
        "Id": "90e9b33fd7384dc299f1335b0b89b0dd",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1119.2201030497877,
        "Y": 1166.0092918671003
      },
      {
        "ShowGeometry": true,
        "Name": "7. Select analysis results",
        "Id": "68988194c6084e40ba6987f801d5c4b0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3547.9131623905218,
        "Y": 873.68002549690289
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "11bfb528b8034721ab1332c7430df49c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2409.73065840081,
        "Y": 76.73553420939021
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "48fcd108a82d43fd850367d4baf9a627",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6188.4340450710561,
        "Y": -1922.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "59fc6041eaac459fac396d3f8e5721e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6670.4340450710561,
        "Y": -1794.806168771421
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenBeams",
        "Id": "ebfa1de1b2e54659906ef5ead66146fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5769.4340450710561,
        "Y": -1827.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Beams colinearity tolerance (degrees)",
        "Id": "4396333b6c4649b699a01825ac2cecce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6670.4340450710561,
        "Y": -1642.3861687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "309c7b5d1be14411ba7a99eb1fa3eb3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6188.4340450710561,
        "Y": -1671.3861687714211
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "357eac97fdcc4c60b7825d2ab7d935cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1516.2201030497877,
        "Y": 1225.0092918671003
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "1ab680fe44854edbabf8e3771e1ef71b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2208.2201030497877,
        "Y": 1132.0092918671003
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "c028e38f5f934b86bb6672b9886c308a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7617.4340450710561,
        "Y": -2490.9461687714211
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65e9e3a8dbab409b963688c43e71d357",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8025.4340450710561,
        "Y": -2365.8061687714207
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "de7a61a40fe8487193c823ec10b16bd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5870.2869897165383,
        "Y": 917.54561815469367
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "e12c09c51af642dba5b63048689b4a31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -358.03911517852362,
        "Y": 1164.9017135296517
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "7e910391fed94135ad5273ad7f07dcb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -794.03911517852362,
        "Y": 1164.9017135296517
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "9abef0a57b5442e886821dad2a365962",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1119.2201030497877,
        "Y": 1318.0092918671003
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "69fcf991bf0a45d6a16147fb827123da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13592.054465743597,
        "Y": 1343.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "72eef0d45d9840f9b7be10a84879f75b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4915.7143402990268,
        "Y": 2336.41829139194
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c4c8fc18ad204c8888d0b523cd963132",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4661.7143402990268,
        "Y": 2370.5582913919397
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "052fddd551cd4b30a0639d7bc1093acb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5330.7143402990268,
        "Y": 2933.7777066281183
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "2bdcf2859cab4e7cbea37a1ac4fbd0e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6430.658872328755,
        "Y": 2342.6037570631829
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "79fbb618714a48c4bc29aa05cdc0e980",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6875.658872328755,
        "Y": 2342.6037570631829
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "0da512330b06423b9c1d7014a669978f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7274.658872328755,
        "Y": 2418.6037570631829
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "255fbd6a41924786995905d9846edf76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7274.658872328755,
        "Y": 2266.6037570631829
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5c7c42adc66f4b898af2d3644d230d44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8354.7473511837234,
        "Y": 2299.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "33a5a9f821bf4b25b753b4241efec4ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8354.7473511837234,
        "Y": 2492.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2d1a7c5ccc224ce197868c6280845446",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8776.7473511837234,
        "Y": 2661.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "d8d1982235f0414b91a16c993cee469d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8776.7473511837234,
        "Y": 2444.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "b68d15f6840f47e3a3ecb40be31328d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9198.7473511837234,
        "Y": 2605.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "7204e7443a8742f6b65ec7ea0932b8b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9602.7473511837234,
        "Y": 2605.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "99143a0da4774d9084c1be42cfd8aa5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8100.7473511837234,
        "Y": 2727.8994294597865
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "36026027a56a4d1aa9444f54bc20a942",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8354.7473511837234,
        "Y": 2643.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "24d3a6464e394f559039c0ecea44d2b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8776.7473511837234,
        "Y": 2812.2594294597866
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "affcd4d2649a4fb9a7f6fa9deac41c48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7253.0033002301225,
        "Y": 3571.3225875355411
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "bb542f03663347df98613cbc39e9c913",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7647.0033002301225,
        "Y": 3584.3225875355411
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "63a9a518ad2d455eaf731ba77895c2ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9155.0033002301225,
        "Y": 3592.3225875355411
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "d53921a62c6e4c31bfa0d57376cd96e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8761.0033002301225,
        "Y": 3626.3225875355411
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5897f2193b864f0189e62c85568ba86f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7647.0033002301225,
        "Y": 3770.4625875355409
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "17d9d30936474aa6b6aec950e56c2fc3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8041.0033002301225,
        "Y": 3694.3225875355411
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "ef7c3a7a44e3497eb1792af5ca7aee11",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8426.0033002301225,
        "Y": 3660.3225875355411
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d36b5a25176b45c7aaef14a158365cb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10073.764194393563,
        "Y": 3241.288719238657
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "d421e702fc074c709af3b03e3cc9e668",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10584.764194393563,
        "Y": 3241.1487192386571
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "7e698a7cad8c4b6487dd3f4fd136e498",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10978.764194393563,
        "Y": 3207.1487192386571
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "3a84d3f974264636973ee174bedcd2ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6263.2869897165383,
        "Y": 1010.5456181546937
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "7c7e271b0852496b87e96854fcf30dc3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3774.0820744996945,
        "Y": -720.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ea42a193ccd948a5ab35e7e4fdaa2fbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4064.0820744996945,
        "Y": -612.77777429566891
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "cd701087a42d478a885ad5404760236f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3437.0820744996945,
        "Y": -477.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "4ede39a881004d5385d7ce3c16f084a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3079.0820744996945,
        "Y": -226.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "16e9b81354264fdebc2ad8ed70240cd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3079.0820744996945,
        "Y": -408.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a4a60b211ee04e9e8c1d811ac663e524",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3437.0820744996945,
        "Y": -325.27777429566891
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "0855ed7a98194c6b92b76e2e1eebcb1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3079.0820744996945,
        "Y": -1418.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fb5dc7d5bc014ba1be0a4558df56bb2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3437.0820744996945,
        "Y": -172.27777429566913
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7f0450ade8e1472381de379a83ff9421",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3437.0820744996945,
        "Y": -1384.7777742956689
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "9ebffaccd55b4c8c9671c8b23b18f703",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2756.0820744996945,
        "Y": -1418.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "9798515582464e90a292bf99d212b3e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2756.0820744996945,
        "Y": -241.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "c0fd7983cb7a44fdbf4b00fa1ba7ea01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2756.0820744996945,
        "Y": -393.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.XAxis",
        "Id": "96ca66d85c3d45969a14c28353cf745f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -393.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.XAxis",
        "Id": "951ed3af5be347e9b62962338278cf69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -241.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.XAxis",
        "Id": "94ba0be1b915400ca4259c0387e34f23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -1418.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.YAxis",
        "Id": "dcf1734eea9e4705bb735a6dbf7afa1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -1570.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.ZAxis",
        "Id": "886c8b1a363d49cf98241a55d89d78ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -89.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "<=",
        "Id": "d58feaf7f8db461689705fc7e4f210cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1231.0820744996945,
        "Y": -1100.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "<=",
        "Id": "41560786b0ca49faaf52c4e95ff26816",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1231.0820744996945,
        "Y": -919.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "<=",
        "Id": "1651de98cde74bdcbca5ff4dac20fdb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1231.0820744996945,
        "Y": -738.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "<=",
        "Id": "c0e87c230f864215a734f97951a23809",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1231.0820744996945,
        "Y": -555.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "c71592d304dd426dbd92432566166bc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -713.0820744996945,
        "Y": -971.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "db73c72133a948b798916bcf4ccf4cf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -713.0820744996945,
        "Y": -754.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "e3fdc1813b054423859bd77a0fb83855",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -190.0820744996945,
        "Y": -983.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fc9dc84697b5404a8408e257ef9b17be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -972.0820744996945,
        "Y": -830.27777429566891
      },
      {
        "ShowGeometry": true,
        "Name": "&&",
        "Id": "6164b5bb2b3648d9a82d6184a27787de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -972.0820744996945,
        "Y": -678.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "&&",
        "Id": "fbc294eebf9e4f0c8232cf769b2a6823",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -972.0820744996945,
        "Y": -1012.6052742956689
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "9a734d15e5d6460db441f739a8b52cf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13592.054465743597,
        "Y": 1559.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "947c3226e1ed42c1a1454787c75fa27c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13939.054465743597,
        "Y": 1505.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "55040cc63ff04853be75f9eaddf00f5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14286.054465743597,
        "Y": 1483.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "3f0176d604fa4480a9a053cce7bcbe8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13939.054465743597,
        "Y": 1288.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "a7c93ca8db6c4b95a1b1a0d0b92120df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14286.054465743597,
        "Y": 1266.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "10aea48c7603406b922f03c29249f99c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14633.054465743597,
        "Y": 1244.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "d35367c28e84432e810cde5376f8d470",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13592.054465743597,
        "Y": 1162.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "49375259c38348da84c64fb5c30928b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13939.054465743597,
        "Y": 1107.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "3cde8468a5224cdbb17753ee5ad9ba99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14286.054465743597,
        "Y": 1085.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "c8da34f7ac4948cbba2b5c52a99addc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13249.054465743597,
        "Y": 1144.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "19864cda74774380af4790d264a20734",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13592.054465743597,
        "Y": 1009.6918439917063
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2dd5ba32c83f483abf92311089d8bc17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -1267.2777742956689
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "db433b6271164ca1b84e5051d40f8855",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1598.0820744996945,
        "Y": -1296.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "90babe8113ac4d76bb7edfcee9220623",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1598.0820744996945,
        "Y": -1045.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "4d3a1855d3ee469f8964cec68757b72a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1598.0820744996945,
        "Y": -612.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "8147ab7168e547de974a951f540c69c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1598.0820744996945,
        "Y": -360.605274295669
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "bb465e8ccc8342bcb1fe7dc80ab00f15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4064.0820744996945,
        "Y": -794.60527429566889
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "bc4e7620520342028876e6beaaf30903",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2430.0820744996945,
        "Y": -545.105274295669
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "20c6f26cb3684d85a46f7d6d4fed7c39",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2756.0820744996945,
        "Y": -545.27777429566891
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "0aecc845353647d882120aeeae614e50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1598.0820744996945,
        "Y": -794.10527429566889
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e0347155fcfe4b88a8aa4169246e4107",
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "b99019feddf34cddbd879fca7f2bc375",
          "5807ab7d61874f7394cfe59a85bfc7c1",
          "b9e7767890a047e685f8ff26c0f26d02",
          "d074ff8024794568b8a0c042612ff9da",
          "91006b7133c74738aeeb5fe722e22aa4",
          "48fcd108a82d43fd850367d4baf9a627",
          "309c7b5d1be14411ba7a99eb1fa3eb3a",
          "65e9e3a8dbab409b963688c43e71d357",
          "c028e38f5f934b86bb6672b9886c308a",
          "4396333b6c4649b699a01825ac2cecce",
          "ebfa1de1b2e54659906ef5ead66146fe",
          "59fc6041eaac459fac396d3f8e5721e9",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -8782.4340450710552,
        "Top": -2728.9461687714211,
        "Width": 3749.9999999999991,
        "Height": 1235.56,
        "FontSize": 36.0,
        "InitialTop": -2655.9461687714211,
        "InitialHeight": 1158.56,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1ba97622b83a4896ac6b2b42a790702f",
        "Title": "Additional (optional) filtering: by section types",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "596909f5799446a7820a3e674d2f49c7",
          "4c0aeca86b3e4a598cd6c0ac60c2e74d",
          "3db0ae870aae4d4e8fccea48976c3b33",
          "1ca46343c98e422eb589fa5f6c1c842d",
          "145ece1505dd4e13b5adb581f63e7bf8",
          "e1d42da2f0d04115ba4c333d965e15ac"
        ],
        "HasNestedGroups": false,
        "Left": 905.59868473829283,
        "Top": -284.4282164074956,
        "Width": 1074.0,
        "Height": 671.14,
        "FontSize": 36.0,
        "InitialTop": -211.4282164074956,
        "InitialHeight": 607.14,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "f5fd7157d8dd46efa1a7ad4b9e7133ac",
          "289d91618171478dbb998b4e6984e0ea"
        ],
        "HasNestedGroups": false,
        "Left": -4303.0670938274379,
        "Top": 921.34390791085684,
        "Width": 1203.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 994.34390791085684,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "46ec41b71daf42dca401a9dc8eb59e77",
          "5bf679f3a1d845e9a80dcfacd4d4b0c2",
          "e481db9b9a764cd880368fe06869d1df"
        ],
        "HasNestedGroups": false,
        "Left": -4518.9224757336669,
        "Top": 1254.6341503558765,
        "Width": 1476.0,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1327.6341503558765,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4547.02913463758,
        "Top": 366.57023518139886,
        "Width": 861.0,
        "Height": 699.398250591611,
        "FontSize": 36.0,
        "InitialTop": 482.57023518139886,
        "InitialHeight": 592.398250591611,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (beams to column)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6800.3711515603572,
        "Top": 327.11007455199149,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 400.11007455199149,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6838.3558705571886,
        "Top": -665.10532821171751,
        "Width": 1556.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": -592.10532821171751,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6814.6679839055632,
        "Top": -16.152652908456332,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 56.847347091543668,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "809e0ab45e464576aa8783e69d0af647",
          "911367ea95104a68a8bdabf24ea343d5",
          "997ebb57baa34324bb07089352ec8a17"
        ],
        "HasNestedGroups": false,
        "Left": 6685.9400046880646,
        "Top": 836.57632592351752,
        "Width": 2427.0000000000009,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 909.57632592351752,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "ffaace1683d54d13971e8728952de923",
          "b6bd315c8a80447a95142ed6c7047fd2"
        ],
        "HasNestedGroups": false,
        "Left": 6697.1846227162005,
        "Top": 1197.0382764539763,
        "Width": 2034.0,
        "Height": 320.0422537266877,
        "FontSize": 36.0,
        "InitialTop": 1270.0382764539763,
        "InitialHeight": 256.0422537266877,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "654e5f1363ce4799b114c9d1057fd75d",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "774bfec08d6646eab975b1a78194a1d4",
          "ecc0331f412c4c319df6ef8ef2e250e2",
          "1c8b31c6aeef42179f9bf04ab0c50df4",
          "d19b07df0f1247c09fd1a6d579459e44"
        ],
        "HasNestedGroups": false,
        "Left": 11547.426861409143,
        "Top": 1018.9283476868388,
        "Width": 894.0,
        "Height": 426.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 1091.9283476868388,
        "InitialHeight": 362.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "e12c09c51af642dba5b63048689b4a31",
          "7e910391fed94135ad5273ad7f07dcb0"
        ],
        "HasNestedGroups": false,
        "Left": -804.03911517852362,
        "Top": 1057.9017135296517,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 1130.9017135296517,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -2789.6946505558026,
        "Top": 1011.3076043601081,
        "Width": 1695.177601887317,
        "Height": 382.57271284014337,
        "FontSize": 36.0,
        "InitialTop": 1084.3076043601081,
        "InitialHeight": 318.57271284014337,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3535ac2782924cc1854d736c3bbf6722",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c6d9585fb47841cb9c9ceb4bfd7558e3",
          "dde7df2ab5954fc1b5b52264b6ea322c",
          "1e3e2a13ad1349daa6c58b63b5f0b78a",
          "3841de7214484a55b00b70d485720ed1",
          "d45cf1955c2e41dd9e147541a76d0162"
        ],
        "HasNestedGroups": false,
        "Left": 6843.6769227734076,
        "Top": -345.51110138735021,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -272.51110138735021,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "200596100f8940ae8596549d1937131d",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "745d81c493ee465684bd2dca363c1732",
          "35aa8435dc9b403b9c32aa5427de285f",
          "647f8844bb9c4fc699893a2c544ea501",
          "1ab680fe44854edbabf8e3771e1ef71b",
          "357eac97fdcc4c60b7825d2ab7d935cb",
          "9abef0a57b5442e886821dad2a365962",
          "90e9b33fd7384dc299f1335b0b89b0dd",
          "c0c86709134049f8a5cfb9db790be141"
        ],
        "HasNestedGroups": false,
        "Left": 1109.2201030497877,
        "Top": 1000.0092918671003,
        "Width": 1615.0,
        "Height": 454.0,
        "FontSize": 36.0,
        "InitialTop": 1073.0092918671003,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "3c06c71925fd4001bf7f740e67a34dd4",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -9836.181034372159,
        "Top": -2795.6357651774688,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -2722.6357651774688,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a32e88e513a24c14a903c173efcc9810",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "506614825fda4465a46f0e053404340e",
          "de7a61a40fe8487193c823ec10b16bd6",
          "3a84d3f974264636973ee174bedcd2ec",
          "bb9b761e5aff4eb5a61e392b88098c7e"
        ],
        "HasNestedGroups": false,
        "Left": -6283.7869897165383,
        "Top": 720.54561815469367,
        "Width": 699.5,
        "Height": 426.00000000000011,
        "FontSize": 36.0,
        "InitialTop": 793.54561815469367,
        "InitialHeight": 323.25792778985192,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c591b1e633ac4ffc920b1f12c75042fb",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "75fbb7ec69cf461b95141eb144180577",
          "98f256f147cb4d0f8148c23deef718d3",
          "558c4f50298042ad99570158961261a0",
          "11bfb528b8034721ab1332c7430df49c"
        ],
        "HasNestedGroups": false,
        "Left": 2399.73065840081,
        "Top": 3.7355342093900958,
        "Width": 1061.0,
        "Height": 391.14,
        "FontSize": 36.0,
        "InitialTop": 76.7355342093901,
        "InitialHeight": 327.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "20e57e8a12e0418994117395b38023b7",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "68988194c6084e40ba6987f801d5c4b0"
        ],
        "HasNestedGroups": false,
        "Left": 3537.9131623905218,
        "Top": 648.9949458400215,
        "Width": 823.99999999999955,
        "Height": 360.68507965688138,
        "FontSize": 36.0,
        "InitialTop": 721.9949458400215,
        "InitialHeight": 296.68507965688138,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "c5db6564277a41c18b0a64dad2e092d6",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72425b91f2ea4495926845dcc24a7e3f",
          "ade3a07d982d4a6b9566f90ae4060d67",
          "650fbffecdd54e1f8a047828f6d12668",
          "ad66920b3a3e442bb5fe89999aae474b",
          "0685e4e2cde14269a350099bca66d1cc",
          "bb1eaf21f4dc42819950d90924b30413",
          "02fc6e7ff41f41b384488b805e007f4a",
          "254a2da754394a22bdc053660c8ae550",
          "ebc677ba74f349d581eb89a79f50b8c0"
        ],
        "HasNestedGroups": false,
        "Left": 9702.1995850147923,
        "Top": -393.78194742732285,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -320.78194742732285,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "45e1aa36d3f849a984e2693be81c373f",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6bcb242ae05c45fda1f9ebbbdeec3731",
          "ffb92b32cdde4dc3a73c1560eb54fdfd",
          "c33840e0557c4408a330da04f399cfb1",
          "6e077c8a1abd42a7aa12f341ed0d448d",
          "90dbaba524234fdfb31eb37933266b20",
          "f3f8813e5c794004833a9739d4c2d0ca",
          "12e6cd04e27647869a2afb60be7717cb"
        ],
        "HasNestedGroups": false,
        "Left": 9626.1110356438967,
        "Top": 836.65985869427482,
        "Width": 1378.0,
        "Height": 617.99999999999977,
        "FontSize": 36.0,
        "InitialTop": 909.65985869427482,
        "InitialHeight": 553.99999999999977,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "6880618d0f8e46fe8bc10f2507c012fa",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "4f35443af9384bb5a47d95baaeedceeb"
        ],
        "HasNestedGroups": false,
        "Left": 15180.045502287727,
        "Top": 357.69394768321536,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 430.69394768321536,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "62618089dc684dafa607a19ff951fcc7",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72eef0d45d9840f9b7be10a84879f75b",
          "c4c8fc18ad204c8888d0b523cd963132",
          "052fddd551cd4b30a0639d7bc1093acb"
        ],
        "HasNestedGroups": false,
        "Left": 4651.7143402990268,
        "Top": 2263.41829139194,
        "Width": 994.0,
        "Height": 906.35941523617839,
        "FontSize": 36.0,
        "InitialTop": 2336.41829139194,
        "InitialHeight": 742.35941523617839,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "43a7c54327dd4fa992bc07e40bbaecd3",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2bdcf2859cab4e7cbea37a1ac4fbd0e6",
          "79fbb618714a48c4bc29aa05cdc0e980",
          "0da512330b06423b9c1d7014a669978f",
          "255fbd6a41924786995905d9846edf76"
        ],
        "HasNestedGroups": false,
        "Left": 6420.658872328755,
        "Top": 2193.6037570631829,
        "Width": 1275.0,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 2266.6037570631829,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "fe204137ddf9453bbc5b983be74ebd1b",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c7c42adc66f4b898af2d3644d230d44",
          "33a5a9f821bf4b25b753b4241efec4ee",
          "2d1a7c5ccc224ce197868c6280845446",
          "d8d1982235f0414b91a16c993cee469d",
          "b68d15f6840f47e3a3ecb40be31328d6",
          "7204e7443a8742f6b65ec7ea0932b8b0",
          "99143a0da4774d9084c1be42cfd8aa5c",
          "36026027a56a4d1aa9444f54bc20a942",
          "24d3a6464e394f559039c0ecea44d2b4"
        ],
        "HasNestedGroups": false,
        "Left": 8090.7473511837234,
        "Top": 2226.2594294597866,
        "Width": 1712.0,
        "Height": 752.0,
        "FontSize": 36.0,
        "InitialTop": 2299.2594294597866,
        "InitialHeight": 658.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "0220b2b9b86c4399ae86e53f5a64df43",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "affcd4d2649a4fb9a7f6fa9deac41c48",
          "bb542f03663347df98613cbc39e9c913",
          "63a9a518ad2d455eaf731ba77895c2ed",
          "d53921a62c6e4c31bfa0d57376cd96e9",
          "5897f2193b864f0189e62c85568ba86f",
          "17d9d30936474aa6b6aec950e56c2fc3",
          "ef7c3a7a44e3497eb1792af5ca7aee11"
        ],
        "HasNestedGroups": false,
        "Left": 7243.0033002301225,
        "Top": 3498.3225875355411,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 3571.3225875355411,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "9dc9eace485844c39e456f67040bbff7",
        "Title": "Aggregate information",
        "DescriptionText": "Combine situation information and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d36b5a25176b45c7aaef14a158365cb6",
          "d421e702fc074c709af3b03e3cc9e668",
          "7e698a7cad8c4b6487dd3f4fd136e498"
        ],
        "HasNestedGroups": false,
        "Left": 10063.764194393563,
        "Top": 3134.1487192386571,
        "Width": 1183.0,
        "Height": 273.0,
        "FontSize": 36.0,
        "InitialTop": 3207.1487192386571,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "0e48ea39c445464587dff42410210597",
        "Title": "Tolerance on Web or on Flange",
        "DescriptionText": "Note: Y axis of column means the beam is on the column's web, Z axis of column means the beam is on the column's flange. Remember to use a tolerance when comparing angles directly, the Filter.By... nodes use a tolerance of 0.0001 implicitly",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b6379c9d97da40e589ef5c84f9338c3f",
          "da5564f9c15c4442875c3c2f09316d54",
          "7c7e271b0852496b87e96854fcf30dc3",
          "ea42a193ccd948a5ab35e7e4fdaa2fbc",
          "cd701087a42d478a885ad5404760236f",
          "4ede39a881004d5385d7ce3c16f084a2",
          "16e9b81354264fdebc2ad8ed70240cd6",
          "a4a60b211ee04e9e8c1d811ac663e524",
          "0855ed7a98194c6b92b76e2e1eebcb1a",
          "fb5dc7d5bc014ba1be0a4558df56bb2c",
          "7f0450ade8e1472381de379a83ff9421",
          "9ebffaccd55b4c8c9671c8b23b18f703",
          "9798515582464e90a292bf99d212b3e8",
          "c0fd7983cb7a44fdbf4b00fa1ba7ea01",
          "96ca66d85c3d45969a14c28353cf745f",
          "951ed3af5be347e9b62962338278cf69",
          "94ba0be1b915400ca4259c0387e34f23",
          "dcf1734eea9e4705bb735a6dbf7afa1c",
          "886c8b1a363d49cf98241a55d89d78ad",
          "d58feaf7f8db461689705fc7e4f210cf",
          "41560786b0ca49faaf52c4e95ff26816",
          "1651de98cde74bdcbca5ff4dac20fdb7",
          "c0e87c230f864215a734f97951a23809",
          "c71592d304dd426dbd92432566166bc4",
          "db73c72133a948b798916bcf4ccf4cf2",
          "e3fdc1813b054423859bd77a0fb83855",
          "fc9dc84697b5404a8408e257ef9b17be",
          "6164b5bb2b3648d9a82d6184a27787de",
          "fbc294eebf9e4f0c8232cf769b2a6823",
          "4d3a1855d3ee469f8964cec68757b72a",
          "8147ab7168e547de974a951f540c69c8",
          "90babe8113ac4d76bb7edfcee9220623",
          "2dd5ba32c83f483abf92311089d8bc17",
          "db433b6271164ca1b84e5051d40f8855",
          "bb465e8ccc8342bcb1fe7dc80ab00f15",
          "0aecc845353647d882120aeeae614e50",
          "bc4e7620520342028876e6beaaf30903",
          "20c6f26cb3684d85a46f7d6d4fed7c39"
        ],
        "HasNestedGroups": false,
        "Left": -4074.0820744996945,
        "Top": -1643.105274295669,
        "Width": 4082.0,
        "Height": 1689.5,
        "FontSize": 36.0,
        "InitialTop": -1570.105274295669,
        "InitialHeight": 1625.5,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7e822b40c73f4abd8b33709a5e4096e0",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2404215ffc2c4afa9614331a555b437e",
          "a1f4df2ff8434486a643c653fcf53787",
          "8807f05fe05d4763a174deb7ff8863e3",
          "852b8ef9499847458b72627ed032ffc3",
          "69fcf991bf0a45d6a16147fb827123da",
          "9a734d15e5d6460db441f739a8b52cf2",
          "947c3226e1ed42c1a1454787c75fa27c",
          "55040cc63ff04853be75f9eaddf00f5c",
          "3f0176d604fa4480a9a053cce7bcbe8f",
          "a7c93ca8db6c4b95a1b1a0d0b92120df",
          "10aea48c7603406b922f03c29249f99c",
          "d35367c28e84432e810cde5376f8d470",
          "49375259c38348da84c64fb5c30928b9",
          "3cde8468a5224cdbb17753ee5ad9ba99",
          "c8da34f7ac4948cbba2b5c52a99addc6",
          "19864cda74774380af4790d264a20734"
        ],
        "HasNestedGroups": false,
        "Left": 12931.054465743597,
        "Top": 936.69184399170626,
        "Width": 1900.0,
        "Height": 875.0,
        "FontSize": 36.0,
        "InitialTop": 1009.6918439917063,
        "InitialHeight": 695.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "bb9b761e5aff4eb5a61e392b88098c7e",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Double side clip angle;Double side clip angle custom).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6273.7869897165383,
        "Top": 793.54561815469367,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "506614825fda4465a46f0e053404340e"
      },
      {
        "Id": "c0c86709134049f8a5cfb9db790be141",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. B to C;Flange). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1119.2201030497877,
        "Top": 1083.0092918671003,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "90e9b33fd7384dc299f1335b0b89b0dd"
      }
    ],
    "X": 7258.1554367018671,
    "Y": 2109.0145554545861,
    "Zoom": 0.73485588558174175
  }
}