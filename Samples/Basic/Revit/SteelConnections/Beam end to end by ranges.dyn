{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places connections in beam end to end geometric situations. Works only on connection types with attached ranges of applicability.",
  "Name": "Beam end to end by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Name": "2.1. Beam Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Name": "2.2. Beam Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Name": "3. Library file path",
      "Type": "string",
      "Value": ".\\Connection library with ranges of applicability.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Name": "4. Connection family to place",
      "Type": "string",
      "Value": "Front plate splice",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "1a78f74f74c04e17b411360786770751",
      "Name": "5. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "d2e9cd7e128f4c45873acae0c8d6a059",
      "Name": "6. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07f2bbe003404583b2aed70b5558cbb8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd2d123c3d94abca7e9992dcda22716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "374e1ff6640649faa07f47bcccb7bd7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "596909f5799446a7820a3e674d2f49c7",
      "Inputs": [
        {
          "Id": "31a2a03e186b41f68176345589f851fe",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e2c7e481b8f4c97b05b11b5cadf98fc",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5587e93c96a1461bbf95cde6a7300220",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "881d3b5066d2416ea41953ba13ced78d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f830726134164f5691f1c2dd7e22e7cb",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b12606021e4dbda2be3dfc4f977dc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "3db0ae870aae4d4e8fccea48976c3b33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab334ee1abe949b5ac4be2c72a8b2772",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19ef94231bb245bf9f8d0335d2470c6c",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "145ece1505dd4e13b5adb581f63e7bf8",
      "Inputs": [
        {
          "Id": "1901e0d33af342ebaa77014a352c0c32",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcf786854a0f4dd3be94e87cc2b56554",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9ff16241fe7408d97349addfede0721",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3e6b35fdf5e421fac487c209e921316",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df853b25b16449ba80be54e810da58b9",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "e1d42da2f0d04115ba4c333d965e15ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6af4a39229064ca09d4e222acb42e2bc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\Connection library with ranges of applicability.rvt",
      "InputValue": ".\\Connection library with ranges of applicability.rvt",
      "NodeType": "ExtensionNode",
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7cb4c5a4d7744158b43d117c10964990",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b23a70c2bc1c4e5cb776ee65c63f7b46",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Front plate splice",
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68aba1580a084fcc909abd9f22159f2b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "774bfec08d6646eab975b1a78194a1d4",
      "Inputs": [
        {
          "Id": "b2554cedec674fd9aa2f7fc35bab7008",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49f4b92ce2e64014a68344d009952029",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e1355331b64e7e850e717a10fd4c5e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b9b1b2e8c2648da8d551ba065b0040a",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f46b862733e044d69c1a4ec177003746",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07dbbb1674e54a9e8f6b2a156c204109",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d19b07df0f1247c09fd1a6d579459e44",
      "Inputs": [
        {
          "Id": "8c806428de07439c88b2c7d80368cc46",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "435b20457d424320a532552c70a09bd3",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "094ae248e07d4f5f9a8503e6355a10dc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b52cd842fe44268a9e03f873a26c3b2",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42b5e54d628b45e4bb1d812a1bdd3400",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "12abfb80ffa74a4c80e36ca5b6059b8c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "488a86843f5540f79ac3761cf6af27cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
      "Inputs": [
        {
          "Id": "35fe42d556bb4d2fa87f919abc4a898e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae7be74142a47fba54135b055a34926",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f96b73bb21c445a19f87f5609e3e2f67",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00992a65f91e4c27ad1f48c9992fbffc",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2edc041e63044911ac298aa3b6e87f56",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d153e5c52e14e3f87bc968a49379386",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenBeams@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,double,double",
      "Id": "459b9a4619d64a2087410d17c30d3e78",
      "Inputs": [
        {
          "Id": "2cd60bde32814abbabdfc8ab677a24f3",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b371cc84bc44600a493c7d3a522544e",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "912f3c93d1004055835c52059a381fe2",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b257d1270f064a26b99599b5939bb523",
          "Name": "rangeStart",
          "Description": "A value between 0 and 180 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d180742b1c24acf99599bafa591ca04",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 180 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c30d0a882e0a4e01866419b0e1346a83",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cba86de3adc84938b32f4cc66aaec2e5",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. This is similar to ByAngleBetweenAxes except it only measures the angle using the X axis, and for the case where the structural elements meet end to end the angle can be between 0-180 degrees instead of 0-90 degrees.\n\nFilter.ByAngleBetweenBeams (node: ConnectionNode, indexFirst: int, indexSecond: int, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n180.0 - x;\n180.0 - y;",
      "Id": "90b8f7ad4af7496a960da48abc152285",
      "Inputs": [
        {
          "Id": "b16277973d4e4078a8eb20a0cbc94624",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a918233f52c47dd873d37884cf0acf6",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a5c2a402b3d45dd9b46f57edad50172",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1eb3569c8f4944eab611889c520261c1",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aca8aa9b282c43788dd4df235bf1b223",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "41b57d2681624a0d8606db34879d7833",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "5516255dde41412eb0a025a606082bd9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94f91ca38df440cb8c4b1cc63011d25f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "41563a8003714c4aa18135c3678b78ff",
      "Inputs": [
        {
          "Id": "03362dd0d0a845ec825c9f233c9a3357",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "956ce6b2f3a44fd1add03d79f6a757e5",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "3567ffc717454450a9a775d56866717e",
      "Inputs": [
        {
          "Id": "455d4ec11a92483f98079f5834df2267",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd9ec8797c874bf592f6756be5917b4a",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7c4a11a65b2456c85f7050ec9baf4b2",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bbe6d6b92cf42b383873b701bd0768a",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d4d080f45ff438298e0808a6c8e8997",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "1cf10b00b22a47289d981f76ec8b60db",
      "Inputs": [
        {
          "Id": "30d6d65d7ba84b6c83b9f7af6bddc826",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a5b8249ae634afbbaf7f5e86869c43f",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfffb3658ee74050937c81299da2147b",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5050bf9c1214819927525b3a27dd3b8",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8191156cf4dc40599f22a36ee60274cd",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "15a8733a44cb4deea22669a182a1c3ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "704f32d4a28047228f3392f3ddc85080",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "67bc4b1b5ce141a791acf6e0abd2c994",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3c720b4b152f4bc8ae9c1c3aa849ecae",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "5561ac0fc2bb41df96ee4227a12facae",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d9c6dd8e591f49148c8a61129ee32eae",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "81e597a35e574a209bf27ecaefa111ef",
      "Inputs": [
        {
          "Id": "529a2075e17f428db35caa28673ce6ee",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4347958f5f3453cba7dcd50027dc866",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afaffe7ac5f04cbdbfbc32768ab29efd",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b46d7428ec6d42b3bfc54b36195d99b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "852092542d8c4fc2a5d3e45fce6aadd3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "4435dbf66b39453bb2f9201e80851e9f",
      "Inputs": [
        {
          "Id": "e1c4d4cb48c24ffb845d0d238e85479e",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d628e4f646c14ccdb64e66c42671b2fd",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a68106059aa2469b97957b5b40887c48",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "df6b95725b894986bb72a1eb95e2fc97",
      "Inputs": [
        {
          "Id": "b01d1f23cf204babb84220c2435c5350",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fdd11a860d446c19be7b672b8a7017d",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7909039622114accb7723913f3c85a9d",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "8575df63c6ea41fe9fa3a3f5ab0b0e8b",
      "Inputs": [
        {
          "Id": "b4154da4a56b41d0b897624834189504",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e342b72dff4a4cc0a84017208d123e47",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "fd01d0a30d8346c8878f6190ac8db8d6",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "84942334ea1f413eaf4d19815619cd1a",
      "Inputs": [
        {
          "Id": "18da148d35d942a8b2362344013a847a",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bf6fcd73d764fe4967c40932232742b",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "65455ba3debe40ab8e6f30bca9c88ead",
      "Inputs": [
        {
          "Id": "f99599bac5f648909de590d2d4363c28",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08a849fdc4cc4983a3105349c22a6831",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ea53314593e4602bde34e9bfb47c2b7",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07b8bf66c5384df9bce9b6c53adabad3",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "512148583d764115b615fd46c4104645",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c821551e71254c108c6ddb6759d63320",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "012204df6648424bbb0653bd2e1ea5fe",
      "Inputs": [
        {
          "Id": "c906624d9bc9402c9be7b55c9c0f40b7",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb13e09720f04a799a38224fab0ae8be",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "ab66ee9f11d24836ac69436560b7caae",
      "Inputs": [
        {
          "Id": "ddcb851fba3445ddb6e5b8e1d46207df",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3cc32c4ab3a5433695166230ba0f0c76",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fbdc867ccbf4fb182e17dd4c10f2fd1",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "10a48ebac913489681a81457bdbdc706",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7c82645ddfc5438ca3c5917ae66ae318",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, of {applicable_number} applicable",
      "Id": "708b96644ba24bd390ff4a4f92479bf2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "62089e56cda84c8ea79c017bda667dcc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "3bff89d646064190a36d081e2b37c0a4",
      "Inputs": [
        {
          "Id": "b609f41301694ae488c003efaff68419",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bae1f9108994c97b72016a2fc0c3095",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "853744738089451197672da266a82a50",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44ed568f54024437b68df1b76c460cd3",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "f6bd70e61c594d8bb21e5179b4a31159",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "77206e00372841b2a9c916fe29819461",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "4d18b9f5ec4847abbccc332c512095a0",
      "Inputs": [
        {
          "Id": "78b2b6621a2847868baba9d639dbe26f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba9125fc329a40bcbe48207cd4bde6d2",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5881b2cf58714f13b705ad98c135e011",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5be552349a44b18adaafaadead03226",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "1340c42048fd44ac8d2be81c63b615f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f89ed136f7c4b0c852cea75a63eaa69",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f1bd4b13922e4b1ca02119000bcfbbe8",
      "Inputs": [
        {
          "Id": "805055507a194eaaae24818aa3b178d6",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe3b124923e34ddba9ecb3926291619b",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99b6695deca747c78bc5008dc7552c0d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba2b726df3b14fff8d581de7f511c793",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "d51b7dd1c67e49caba903b253e81c26b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c68a1baf66e04f2ea173c7117d0e5c2d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "3d5e75db6a7c4b1c9d54ccb5e7b4ae24",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4b8debc800d4ae5ad76d6dd2b34785c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "10a48eaa155443469b29c7c02ab8fc28",
      "Inputs": [
        {
          "Id": "133ed64a49cd45fb8324fbaf3de46855",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e821b22bfc994af39c465f69d069400e",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8438e554f824ca4bfb8723d4c937ae5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a849dc1cc02948258bcc5e6b32294856",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "71ceebd31a084799b8b41091214877fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7625bc6b62a84d7693c59bd72706207d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ab9032cba20249848c5421af0a79d965",
      "Inputs": [
        {
          "Id": "f09fdca8d372477490f6753f00c7c233",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6435bfc38dae4b9db74a3db6d0300ae2",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7992b554bb3c440ab546fb1a8ba02b8e",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e72df1766e5345e4b2ab42a4600e9560",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "ed74b2ee2f484086bd44358d982f0faf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c13fe65127d142518511d9f9057e7cdb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "14cc0d2aefee4b7eacae0878b19bfeee",
      "Inputs": [
        {
          "Id": "1155a60d05424883bdb88023746b5ed8",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04b72debbeac46a7a8db1d5388f2a899",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4c758351e984e4ca7a0359604ae74cb",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a1405418cc94636a6df69aba92414c6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "f8fd2623db834ac4bf25017170ce7ecf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b50420906c44463d9deea441fd5527e5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "11a9bf0ed91747d191caad6d14eca6c5",
      "Inputs": [
        {
          "Id": "b5e6206a7244460698277349612ea333",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "feb57475f820409ebae9f79d0c2792a4",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "541b5bdd05aa496baa28b186dbfa97b0",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9b1486bdd97c4203b10ca66c2473ad87",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd3cf365eebe42839d3d4753d233250f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "ecc14135b9e5498ca9cfe606121157a9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "15c8cb1c307141ea925b5d814a19e426",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "4bda193ffeaf4132a0fde1c594cb1760",
      "Inputs": [
        {
          "Id": "a0328a04a57e4d5b94ee04f19c9de94e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55d751e5111c4677b7dab70bff1f2da8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1ecc3b731084c2ab5266add9e041ca8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "43e00b0a367142f5a1a9bfdd57cd0d4b",
      "Inputs": [
        {
          "Id": "5ba6b7325e414a93ade98de41c3f90f5",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68e2b555d1424a7b9eea7f3606bc8d94",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "7532d2b66f5444719d7496973805199a",
      "Inputs": [
        {
          "Id": "3ec36d3a0f784f2b95dd59cfd1bda9b5",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd4f358fef354ce9abc3daca0aa4c282",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "a75a5849e58948278e5365792061ed28",
      "Inputs": [
        {
          "Id": "f5c0291490ad49abb5a703f635e73548",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3376a4add76040338b3120fcb6e71831",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6018dc85424a4938bc10253880d8e876",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "504fc128235845808f0335cca63debc4",
      "Inputs": [
        {
          "Id": "062c2635deff463683e4e6fee6af5155",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6101a2578d7748d7acd077c5ba3d404b",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "289c5b13dae94acbbf824fd39de24e78",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c447a398c464ac49c00087492f23f90",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "1c9ce7bd33bf46ef856e6419a999cd24",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46f054a7b9654294979bf9c8ffa93f31",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a587e25db1214b5aaacb355b754fd3a5",
      "Inputs": [
        {
          "Id": "0d47648c6c0644a0981a3361d6fcefe6",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50a04b63b1654e11a140f86281c1dd78",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "c1bb999f675646eb8fa962570afd2509",
      "Inputs": [
        {
          "Id": "0c76258b3cd849c4927438173ccf1166",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7d2eb2f495ed4825aba51d0330bf745f",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a5ecb0f40c548b4a42682128bb37a7c",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5717de6bc7349db9b5d21ffbe7ba80a",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "1a78f74f74c04e17b411360786770751",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "096bd551f3fc4938be2c15c73b75f9d1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "75f1c4ac8c2f4d00a20e97da83bc591d",
      "Inputs": [
        {
          "Id": "47d8577e73b543d8b6830f3b8ba1426d",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2fd28788b0f540598808a366928f634b",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adaeaac441e74004973ff3b6149d8d73",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6cfd46ae47b4b00be2b320895d515d9",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "d2e9cd7e128f4c45873acae0c8d6a059",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e762afa739c0484e91069af6e4b2e8ee",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "6ce55a0b8eeb4dd8a10f9daf2d0cbffe",
      "Inputs": [
        {
          "Id": "0f496c3c3e074d339238512a3459b575",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bc49fb0ee764399bb5bb30969daabfb",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b7dd6e3a07a4d7cba2589828b833eb9",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "1cc9a9884d2e4925b9a0cdd1b6cacabe",
      "Inputs": [
        {
          "Id": "49bce56978894355b6351bf82e67eb9f",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db123064afbf4c3993a56365123e386b",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "427ac79601044796b11c54f1129c1819",
      "Inputs": [
        {
          "Id": "7719c7e4e89f4cc0b0a498f8b0cd21fb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88010d29a9b4458382505578ca7464c3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a71e277956fd4b3da407780c7389de46",
      "Inputs": [
        {
          "Id": "4a423a6f3c634119ba6ff8af62ec658a",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75df9993aa0242a1bfaa4bf6a264bc12",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4f4b5c1174ed4f28a9b6eea7bd2d7e42",
      "Inputs": [
        {
          "Id": "16cb68bf8afb456aa2bfc9331d6f16f3",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3cd9d4fc0e2e4a3cb0a8e920a0850a71",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25180b11b64d4311a89a3c0549fde1ba",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "7d05f8e329a6477da2290353c4633fc5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5b27686929b54a1c8feaddc72f161bb5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "87d0006bdd65454baee9ded9c2f4b406",
      "Inputs": [
        {
          "Id": "73332c87db7c45e7b2d43b8bbe48c3d9",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42388694dac9442a99d485094fa5b1b3",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa580c7bc6204142b30abe4dc6ccb577",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a83bf3bcd1843ef97f225c79bf31c4c",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c31f31368ddf414db1e60b444190b35c",
      "Inputs": [
        {
          "Id": "b182456c69f34de5854fa7cea5d0809c",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2373964cdc5d480792f2e7a8e1b29ce4",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "903dc2e25a4e419bac8fc34c2d59b446",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "5563ae3472fc42b7936f6e55535abb38",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "45cd38e29fa24905b34fd48e997e3fd9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "7fc4971255024c29bd46eb6f98abc440",
      "Inputs": [
        {
          "Id": "7f1697479b204577ae1954c543f9dea0",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d7a38d784774e1ca84809659970ecc8",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6b8f53a664c46e5b41cf2172f096a2d",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26f1bf35ba334321b55c77d7f2e35b76",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "181f4886878c44069bbdfcb00538aca7",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7e887a31fc240719ea5f9627ca86b5e",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "6c6ff923ef934d8483c268a95abb4634",
      "Inputs": [
        {
          "Id": "7e90999302be4b928ff41c07c9ffa578",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58d99233479e47708ad39287b46c6302",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "7f20f3a30b874e4b912aea68fcba7eca",
      "Inputs": [
        {
          "Id": "db45583167234c7db93eb371414d19e7",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9324c47893248418b9ccb9af2a38392",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "994693e1e6ea414bb1828a209af55db0",
      "Inputs": [
        {
          "Id": "b444ba7b01da426c8c519d433df10c0c",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e69264f78274540bac06858453eb30f",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "41773dfd9c144695aa82411d7ae3750f",
      "Inputs": [
        {
          "Id": "9b827681ab7f498a8956f8476ac29306",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "585f3f6fc3c943ed9d346f17169e9d15",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "0be974eca6f54d70b719fd2b4842925c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f1b52612c404fbe8546d69bcd95b5f4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "338a4b6c6b9541bf8938bf0bdb9ae728",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6789b6728d4e47148d9386d4c53e6c0a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "e069b67164884eb7817be28db18cc26a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6e0c228db7b42e5b100e71169793fbb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "ed079e2fa7c44d618750550b29c0242a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c316f724dbbf4a5381891c2a265f111c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "126dd088d3f14498b8b9ac71f78390a1",
      "Inputs": [
        {
          "Id": "b8116193040a405bba0e40b056972def",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcefa0c821e747daae71a4f296a2744a",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c69678717e8340f3a5efe3d85519b969",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b19cd5a531ff4262b945168a50af9567",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "77b8f9985379472190bed896b5e34872",
      "Inputs": [
        {
          "Id": "50cc4a97763e45f59383d643122ff1e6",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "789773824ef4438b9d8152b0900c614b",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "974dea0e1d394627817d5b8b19c227db",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f8e4cdeed9f4600b840b1369035b07e",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "668386d86cd14ff5a2bf0344e5827168",
      "Inputs": [
        {
          "Id": "cf8d3161d7084c5d96178b901908f57c",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "23fb95a775b247caac8b684682a7a90f",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "007a4502e5c24dcb9afe75b56cf9d04e",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "6ea17a78033048c98576402aaaf17cad",
      "Inputs": [
        {
          "Id": "a8c06bb74dae45db9cc2e98375c57ba9",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1525cc32441e4a4c930fbe53bf554895",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d47b63e7fec4349abfa377bbe401cb9",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "06eb3f565c1f43d182790e25d2d3fda8",
      "Inputs": [
        {
          "Id": "4183fe7980cd4b4c8071837261135155",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca016a687c8649f89ace9d3be48c83c7",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e5d14c02dbf94eea926d7139e984ec34",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "d642a6fb1aad498898d8d37010be09ea",
      "Inputs": [
        {
          "Id": "b45fd0c235804e91931ea657bda70c03",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe7b73ee03e6450f88b91a759b4f3d0e",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2882aeae2b94815932166a4c823bdb8",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "2b4e1040fa0d4f1b8e9af0f5da812815",
      "Inputs": [
        {
          "Id": "4f91a51061694ec4b6029e9801cb7c54",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2890281071af4afda591f4dbe8705d87",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "341403eb949a421ca62e36de61bbd212",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "22171371b1374970b2d935d84946e7a2",
      "Inputs": [
        {
          "Id": "a227935de9914b9cb5d371e8420ba6cf",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4683b4918d074349bd75c1b6d2dab1f7",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff6645626c0f408eaaf26178da96c783",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "8e5d67586439493c99ae8c840cdb775f",
      "Inputs": [
        {
          "Id": "4f77e594166e43b987f39e4959a3b3cc",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3e605807bcf04d829bd7e390301093fe",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24f4764db8ae4d15bfa7d89ff1289ae1",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "1bfc6fa682b8478dbbd33b5e54eb1191",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cdabf4b9bf734849a5ab284a61186eb2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "6ec4e113a62042129e9a091f601d1911",
      "Inputs": [
        {
          "Id": "a0db5a19138b49f5929072056ce8fc1e",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "efa72287fa594e9abc12951291b222b5",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea796755fb894865b63f6e13d3c56b77",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eba913a415654cfea32c7f6ae68ef1eb",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "6d032a2ec4b542cba748bbef64dd9447",
      "Inputs": [
        {
          "Id": "edea3afc5157474790b2e12de8b7d551",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa3b65672c2845348b9b7c23c9a06545",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2f4fe744c36483a971d9a24dbc6a095",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b39db3a998c742bcafb9185b53911ac2",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "983039f0d8df459e95216054dbb28c08",
      "Inputs": [
        {
          "Id": "5d620ca77f6447c7b44613e09d478ff7",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b6317fadd424ab59e3c716b2b867466",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44ccf08020fa4c1cb8deffff955cb97c",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "7e72b87623e549b3b7f563385a05370d",
      "Inputs": [
        {
          "Id": "39b97afbbc3440dd8cbd1d92388dc851",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2aff2e5fff1544b79d77654db6f8899b",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a12992558094ea48893c63e977c803c",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "4c8f8c3618a740f98fabbaede4f98cc8",
      "Inputs": [
        {
          "Id": "970608d516ff43d4a7e187ee02faf399",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "634ed004cb15488192d2334b3571656f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "3a1dfa9232fa4693bd08140ffcd4fdfb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3c72f34bba2433e99199dd462cda033",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "24efa48c1a274189b3dd7881442d126c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d5958aee70a44b4ac6572a0f54a3c7a",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "cc2776e9dc0046159fd0ba031703b4de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0bace34f022444f382a81ea5e3effa2c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "fef8866c631946f1b4790cab73a7ea5c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "47c9e581a9434f8c8f7fbcc0355afb0b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "537e518c642843ca9da6903670400c24",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2554dd0dfc4455e9682326dcb9a31f5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0acae3369f9e4c9e97b4ce60ba9e5877",
      "Inputs": [
        {
          "Id": "c6be19332c0a46fcb9a7b5e320b3f298",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab4670e71c1b49158fcb3a3178d57cf2",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e9c256169774aaf8a3aeb55f927096c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd720e9e996d4fa88f1a3ab7bfb0a324",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "daf30cf01c1749b8a23724b70e9f7eb1",
      "Inputs": [
        {
          "Id": "055642c8a43d4fbe9571b74c21ac70a7",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09a28fcf8840403ba788bb7586f825e7",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe1b09f991874298a260338ab35cd880",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2306210bcada45319eec6e27b2b8a9b3",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a3ef299529894b10a38ab77927d7446c",
      "Inputs": [
        {
          "Id": "0aa53c81483e4e1aa13651511efa3246",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aaf5c0d6f4774b049804d7ae76e4a215",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2fa399ad06e417fae469a1881f7aca0",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dec5d4104eca4778b8a60620d2bdb675",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "28a3bbf80d5b46dca2ef7f3c9a00d603",
      "Inputs": [
        {
          "Id": "e8d9f13277a449d999a40cd4004f3cd5",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28134d47d3da4b638eab1f171b705946",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc7c2671fe6d4463ada2332ce15a5a43",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "5294e125362e4631986f81414c7bebee",
      "Inputs": [
        {
          "Id": "3a4c94eb14584a3cb5f8343ed8ca487c",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06c908faf7f146518d18db96f43f0afb",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71e22565e09f4de59305b5fff1d27d71",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "6bc59e3bd09346b0b56d1a44437eb395",
      "Inputs": [
        {
          "Id": "2c5ff9b7d8194f1dac294f10e6e930dc",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbc8950a5b884f6f8b16ef77f5caaa88",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98f60d91b81b42d29b58091aa73ac4b3",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "635c217eefa74831a791cc61f59dfd7b",
      "Inputs": [
        {
          "Id": "d45b238a22444330ac66de4b266d4cff",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f15f25da9c4464090ab3470d7100327",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c76f2bc1347e4d00b2bf925473817c5d",
      "Inputs": [
        {
          "Id": "391621323db446af8101fe898bdfcd0e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "190556d594344c4fb3afd04f17e0df36",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "455d4ec11a92483f98079f5834df2267",
      "Id": "1fa13157509047fd993fc7274483b316",
      "IsHidden": "False"
    },
    {
      "Start": "07f2bbe003404583b2aed70b5558cbb8",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "90a0a503e9814ac0bc9a4134e5988c48",
      "IsHidden": "False"
    },
    {
      "Start": "1bd2d123c3d94abca7e9992dcda22716",
      "End": "6ae7be74142a47fba54135b055a34926",
      "Id": "3b0c384d6a3946f38b2db725ea0f9d3c",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "df35c4a8df47420c928d9b43d2a6b336",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "f96b73bb21c445a19f87f5609e3e2f67",
      "Id": "70fd202a19ff4348933af5eee5ff6366",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "91382d6b7fbb4c4481716734234c0202",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "00992a65f91e4c27ad1f48c9992fbffc",
      "Id": "6ba4f1548de545e79356b840cd5ff72a",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "2cd60bde32814abbabdfc8ab677a24f3",
      "Id": "d7bd8a1e1e5e428e9e285e9f8d30665d",
      "IsHidden": "False"
    },
    {
      "Start": "374e1ff6640649faa07f47bcccb7bd7f",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c052f00c89dc4165bbd99e33b7dbfb30",
      "IsHidden": "False"
    },
    {
      "Start": "881d3b5066d2416ea41953ba13ced78d",
      "End": "1901e0d33af342ebaa77014a352c0c32",
      "Id": "b2c6b815a2d441ba845ecca322e013e5",
      "IsHidden": "False"
    },
    {
      "Start": "d0b12606021e4dbda2be3dfc4f977dc3",
      "End": "2e2c7e481b8f4c97b05b11b5cadf98fc",
      "Id": "531fd8a51b8747e3b59409e00debd515",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "5587e93c96a1461bbf95cde6a7300220",
      "Id": "4d128a78f44b4228b96e1210e441cc29",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "a9ff16241fe7408d97349addfede0721",
      "Id": "c8dc7fbad4a44ffe8e0e562a71f23577",
      "IsHidden": "False"
    },
    {
      "Start": "e3e6b35fdf5e421fac487c209e921316",
      "End": "03362dd0d0a845ec825c9f233c9a3357",
      "Id": "022a9e1cb04044708080e1bce6bc2b6d",
      "IsHidden": "False"
    },
    {
      "Start": "6af4a39229064ca09d4e222acb42e2bc",
      "End": "fcf786854a0f4dd3be94e87cc2b56554",
      "Id": "20cd8b8267ee4c67913593908e1f7278",
      "IsHidden": "False"
    },
    {
      "Start": "7cb4c5a4d7744158b43d117c10964990",
      "End": "0fdd11a860d446c19be7b672b8a7017d",
      "Id": "2a3a9004d6704b0d9f72dcc5a531189c",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "f5c0291490ad49abb5a703f635e73548",
      "Id": "6f02e43506044866b95afa41e23756e1",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "eb9f6beadc4f4d60901712fb5b246bc9",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "e5f1d801fbcf40d882f2b21972a4f09b",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "7d7a38d784774e1ca84809659970ecc8",
      "Id": "a458c4bf9d0f4f21bb1c4b7e6815f33c",
      "IsHidden": "False"
    },
    {
      "Start": "68aba1580a084fcc909abd9f22159f2b",
      "End": "16cb68bf8afb456aa2bfc9331d6f16f3",
      "Id": "4ded5280748b415c84e528305e112153",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "b182456c69f34de5854fa7cea5d0809c",
      "Id": "acb7d3f9acf84e9b912d5cbf8ada072c",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "4829426565a8404888a989bc69af587b",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "17061815ca91449883befa22d7ef3c73",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "99dc61bec9fd4571a6389188a6511716",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "b5e6206a7244460698277349612ea333",
      "Id": "eb17a958e30b4cdba9d0a2ad59de2853",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "2c5ff9b7d8194f1dac294f10e6e930dc",
      "Id": "69198a703106417c8e2e8b11549e2057",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "d4c758351e984e4ca7a0359604ae74cb",
      "Id": "ce3c35120f784506a3e0526a03ca600a",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "7992b554bb3c440ab546fb1a8ba02b8e",
      "Id": "6a631594550146db90bd9540b1b4326f",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "e8438e554f824ca4bfb8723d4c937ae5",
      "Id": "6ae5815cd08946ed861c644f343c2d03",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "b4154da4a56b41d0b897624834189504",
      "Id": "d41df897a27d4feabdcbabb8b32567b0",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "853744738089451197672da266a82a50",
      "Id": "657c5b4a4b7a44a68b4309d5733c929f",
      "IsHidden": "False"
    },
    {
      "Start": "4b9b1b2e8c2648da8d551ba065b0040a",
      "End": "8c806428de07439c88b2c7d80368cc46",
      "Id": "d5a5faf947bd4c6e9d534f34f26dc29a",
      "IsHidden": "False"
    },
    {
      "Start": "f46b862733e044d69c1a4ec177003746",
      "End": "b2554cedec674fd9aa2f7fc35bab7008",
      "Id": "0eb2a939fab04aac99db2f4637a5f005",
      "IsHidden": "False"
    },
    {
      "Start": "07dbbb1674e54a9e8f6b2a156c204109",
      "End": "435b20457d424320a532552c70a09bd3",
      "Id": "05731ca6b12f462e8690ecedec35ac89",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "f99599bac5f648909de590d2d4363c28",
      "Id": "9e1783546a2f4e38b9d1afbf20c07fae",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "e342b72dff4a4cc0a84017208d123e47",
      "Id": "26e50badce0e47309116d928693f5354",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "c906624d9bc9402c9be7b55c9c0f40b7",
      "Id": "d3dacdd5549d40928236287641f3d25e",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "99b6695deca747c78bc5008dc7552c0d",
      "Id": "cda6894d19564231aedefbe86ffe40fe",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "f3f8ac94bb344fae9666ffe8b349848c",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "5881b2cf58714f13b705ad98c135e011",
      "Id": "d91ef70e68704161bad90b7716528852",
      "IsHidden": "False"
    },
    {
      "Start": "8b52cd842fe44268a9e03f873a26c3b2",
      "End": "42388694dac9442a99d485094fa5b1b3",
      "Id": "816d09142be241359faaf788b1c65776",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "42b5e54d628b45e4bb1d812a1bdd3400",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "0d47648c6c0644a0981a3361d6fcefe6",
      "Id": "67e6fdd5e999485fad49a08764c3e525",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "47d8577e73b543d8b6830f3b8ba1426d",
      "Id": "a3745de29ad24d96b7bd7d4e8a47c346",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "4a423a6f3c634119ba6ff8af62ec658a",
      "Id": "211f1b02c6ce40aeb6ec7a5e02c5c667",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "391621323db446af8101fe898bdfcd0e",
      "Id": "62099b44bfa44e699cd8bc221e86a95d",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "2edc041e63044911ac298aa3b6e87f56",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "716dbdfff7b34f21a2d70e7df269914b",
      "IsHidden": "False"
    },
    {
      "Start": "c30d0a882e0a4e01866419b0e1346a83",
      "End": "31a2a03e186b41f68176345589f851fe",
      "Id": "d4b45f1786c04b5c807c6dc694d9b71b",
      "IsHidden": "False"
    },
    {
      "Start": "4a5c2a402b3d45dd9b46f57edad50172",
      "End": "4b371cc84bc44600a493c7d3a522544e",
      "Id": "0bbcae9d1f434c56925f9c36f95f5f73",
      "IsHidden": "False"
    },
    {
      "Start": "1eb3569c8f4944eab611889c520261c1",
      "End": "912f3c93d1004055835c52059a381fe2",
      "Id": "3aac2f83fed74c0bb7c83333eeb7e463",
      "IsHidden": "False"
    },
    {
      "Start": "aca8aa9b282c43788dd4df235bf1b223",
      "End": "b257d1270f064a26b99599b5939bb523",
      "Id": "14c4900e198644ada12d7114af25ca73",
      "IsHidden": "False"
    },
    {
      "Start": "41b57d2681624a0d8606db34879d7833",
      "End": "3d180742b1c24acf99599bafa591ca04",
      "Id": "7e34ab3bb0564091a9db64129c29f225",
      "IsHidden": "False"
    },
    {
      "Start": "94f91ca38df440cb8c4b1cc63011d25f",
      "End": "2a918233f52c47dd873d37884cf0acf6",
      "Id": "6a3dbbd265224724b36d3f8d51ce7f2a",
      "IsHidden": "False"
    },
    {
      "Start": "956ce6b2f3a44fd1add03d79f6a757e5",
      "End": "529a2075e17f428db35caa28673ce6ee",
      "Id": "cd9d33a1bf5c4c7699b0a9c3193206ab",
      "IsHidden": "False"
    },
    {
      "Start": "9bbe6d6b92cf42b383873b701bd0768a",
      "End": "30d6d65d7ba84b6c83b9f7af6bddc826",
      "Id": "d99e51edade842ccaac0ba8c83a3c1ad",
      "IsHidden": "False"
    },
    {
      "Start": "a5050bf9c1214819927525b3a27dd3b8",
      "End": "35fe42d556bb4d2fa87f919abc4a898e",
      "Id": "bb3862c0337a4a82bea4ce9f703349b8",
      "IsHidden": "False"
    },
    {
      "Start": "704f32d4a28047228f3392f3ddc85080",
      "End": "fd9ec8797c874bf592f6756be5917b4a",
      "Id": "3689e37f1b384740ae100476ed301058",
      "IsHidden": "False"
    },
    {
      "Start": "3c720b4b152f4bc8ae9c1c3aa849ecae",
      "End": "5a5b8249ae634afbbaf7f5e86869c43f",
      "Id": "cdb742d81d1b4d82a9307b3c55664eb3",
      "IsHidden": "False"
    },
    {
      "Start": "d9c6dd8e591f49148c8a61129ee32eae",
      "End": "d628e4f646c14ccdb64e66c42671b2fd",
      "Id": "8985ad04909e42a9b293429fb969cfd4",
      "IsHidden": "False"
    },
    {
      "Start": "afaffe7ac5f04cbdbfbc32768ab29efd",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "e186ffa087a9441698332204d767e41a",
      "IsHidden": "False"
    },
    {
      "Start": "afaffe7ac5f04cbdbfbc32768ab29efd",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "4e434900a732459ea3e540f494bc07a4",
      "IsHidden": "False"
    },
    {
      "Start": "852092542d8c4fc2a5d3e45fce6aadd3",
      "End": "b4347958f5f3453cba7dcd50027dc866",
      "Id": "5e9d6cc6cd4c4fc2a0eebc23a0a44f59",
      "IsHidden": "False"
    },
    {
      "Start": "a68106059aa2469b97957b5b40887c48",
      "End": "12abfb80ffa74a4c80e36ca5b6059b8c",
      "Id": "767464443b9e49f39dd18e5ce42a2ee1",
      "IsHidden": "False"
    },
    {
      "Start": "7909039622114accb7723913f3c85a9d",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "6f210bbbe7a142fca898ee0886334cff",
      "IsHidden": "False"
    },
    {
      "Start": "fd01d0a30d8346c8878f6190ac8db8d6",
      "End": "18da148d35d942a8b2362344013a847a",
      "Id": "4476ae0c11fe4a8dbda1ed1508515340",
      "IsHidden": "False"
    },
    {
      "Start": "6bf6fcd73d764fe4967c40932232742b",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "b47b9a68e3dc480ba0d473d247e458bc",
      "IsHidden": "False"
    },
    {
      "Start": "07b8bf66c5384df9bce9b6c53adabad3",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "436eaf4b9ffe41baa6618e0cf3586d7e",
      "IsHidden": "False"
    },
    {
      "Start": "c821551e71254c108c6ddb6759d63320",
      "End": "aa580c7bc6204142b30abe4dc6ccb577",
      "Id": "8ab50ef0a8fc4591bd686f16d0558754",
      "IsHidden": "False"
    },
    {
      "Start": "cb13e09720f04a799a38224fab0ae8be",
      "End": "ddcb851fba3445ddb6e5b8e1d46207df",
      "Id": "642b038e2b5c4a4a826c415556175cfa",
      "IsHidden": "False"
    },
    {
      "Start": "0fbdc867ccbf4fb182e17dd4c10f2fd1",
      "End": "73332c87db7c45e7b2d43b8bbe48c3d9",
      "Id": "df3bb2ecfdfe4dc4b5c943924ab062d9",
      "IsHidden": "False"
    },
    {
      "Start": "7c82645ddfc5438ca3c5917ae66ae318",
      "End": "3cc32c4ab3a5433695166230ba0f0c76",
      "Id": "5984ca11e7b84f549f417e7ea2133a69",
      "IsHidden": "False"
    },
    {
      "Start": "7c82645ddfc5438ca3c5917ae66ae318",
      "End": "28134d47d3da4b638eab1f171b705946",
      "Id": "d065d9b0af1246a195b61a99e5d62575",
      "IsHidden": "False"
    },
    {
      "Start": "7c82645ddfc5438ca3c5917ae66ae318",
      "End": "06c908faf7f146518d18db96f43f0afb",
      "Id": "c77ccb3598dd4b6cb54548d41c2f8856",
      "IsHidden": "False"
    },
    {
      "Start": "7c82645ddfc5438ca3c5917ae66ae318",
      "End": "bbc8950a5b884f6f8b16ef77f5caaa88",
      "Id": "03fd410b18c24c1dae5817c43c99ef6b",
      "IsHidden": "False"
    },
    {
      "Start": "62089e56cda84c8ea79c017bda667dcc",
      "End": "b609f41301694ae488c003efaff68419",
      "Id": "116365d659ff442ebf1de218fa90dd1e",
      "IsHidden": "False"
    },
    {
      "Start": "44ed568f54024437b68df1b76c460cd3",
      "End": "78b2b6621a2847868baba9d639dbe26f",
      "Id": "838aa03be974403f90a5f461a505f7b8",
      "IsHidden": "False"
    },
    {
      "Start": "77206e00372841b2a9c916fe29819461",
      "End": "6bae1f9108994c97b72016a2fc0c3095",
      "Id": "084486a118dd4d89868ad1af14819417",
      "IsHidden": "False"
    },
    {
      "Start": "b5be552349a44b18adaafaadead03226",
      "End": "805055507a194eaaae24818aa3b178d6",
      "Id": "64b00d6f0c114c649ca3c374b79661ac",
      "IsHidden": "False"
    },
    {
      "Start": "1f89ed136f7c4b0c852cea75a63eaa69",
      "End": "ba9125fc329a40bcbe48207cd4bde6d2",
      "Id": "24cdd6f8f4504deba7626551daa4f771",
      "IsHidden": "False"
    },
    {
      "Start": "ba2b726df3b14fff8d581de7f511c793",
      "End": "094ae248e07d4f5f9a8503e6355a10dc",
      "Id": "47de0a69c62548b9b22d03b8042d2359",
      "IsHidden": "False"
    },
    {
      "Start": "c68a1baf66e04f2ea173c7117d0e5c2d",
      "End": "fe3b124923e34ddba9ecb3926291619b",
      "Id": "9eb162446e9a41068609218496bc19c2",
      "IsHidden": "False"
    },
    {
      "Start": "a4b8debc800d4ae5ad76d6dd2b34785c",
      "End": "133ed64a49cd45fb8324fbaf3de46855",
      "Id": "10b025780aee4a47b490f369b825e116",
      "IsHidden": "False"
    },
    {
      "Start": "a849dc1cc02948258bcc5e6b32294856",
      "End": "062c2635deff463683e4e6fee6af5155",
      "Id": "833a347eeb144623839687bfac4ae9cb",
      "IsHidden": "False"
    },
    {
      "Start": "7625bc6b62a84d7693c59bd72706207d",
      "End": "e821b22bfc994af39c465f69d069400e",
      "Id": "1da9716b9e9346abba2e92c2841fb184",
      "IsHidden": "False"
    },
    {
      "Start": "e72df1766e5345e4b2ab42a4600e9560",
      "End": "1155a60d05424883bdb88023746b5ed8",
      "Id": "a86fecbbb7d74e06aa8c1f50cd058c53",
      "IsHidden": "False"
    },
    {
      "Start": "c13fe65127d142518511d9f9057e7cdb",
      "End": "6435bfc38dae4b9db74a3db6d0300ae2",
      "Id": "ff8b29a81cd046ab9a32156aa104b756",
      "IsHidden": "False"
    },
    {
      "Start": "8a1405418cc94636a6df69aba92414c6",
      "End": "9ea53314593e4602bde34e9bfb47c2b7",
      "Id": "9dcd5c66425147c8b6817955d36a6523",
      "IsHidden": "False"
    },
    {
      "Start": "b50420906c44463d9deea441fd5527e5",
      "End": "04b72debbeac46a7a8db1d5388f2a899",
      "Id": "fca20a0ca6884451b396b2bb874ed423",
      "IsHidden": "False"
    },
    {
      "Start": "541b5bdd05aa496baa28b186dbfa97b0",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "1863d77fdb9449708d8d1eaa6e759276",
      "IsHidden": "False"
    },
    {
      "Start": "dd3cf365eebe42839d3d4753d233250f",
      "End": "feb57475f820409ebae9f79d0c2792a4",
      "Id": "d1cc04d36e33424abea2f5a7095a1ec4",
      "IsHidden": "False"
    },
    {
      "Start": "15c8cb1c307141ea925b5d814a19e426",
      "End": "3376a4add76040338b3120fcb6e71831",
      "Id": "caba98b3f3fb4b51a68deae0480d5320",
      "IsHidden": "False"
    },
    {
      "Start": "d1ecc3b731084c2ab5266add9e041ca8",
      "End": "5ba6b7325e414a93ade98de41c3f90f5",
      "Id": "31c192b549274887bb768f3e2b77097c",
      "IsHidden": "False"
    },
    {
      "Start": "68e2b555d1424a7b9eea7f3606bc8d94",
      "End": "3ec36d3a0f784f2b95dd59cfd1bda9b5",
      "Id": "e759ea6cb3044c619bc67c684cf33f59",
      "IsHidden": "False"
    },
    {
      "Start": "cd4f358fef354ce9abc3daca0aa4c282",
      "End": "289c5b13dae94acbbf824fd39de24e78",
      "Id": "4850dffdb07b4e5d9231298950fd7c8e",
      "IsHidden": "False"
    },
    {
      "Start": "6018dc85424a4938bc10253880d8e876",
      "End": "a0328a04a57e4d5b94ee04f19c9de94e",
      "Id": "50976cfb33b04d48a61eba5d82d574d1",
      "IsHidden": "False"
    },
    {
      "Start": "9c447a398c464ac49c00087492f23f90",
      "End": "f09fdca8d372477490f6753f00c7c233",
      "Id": "8995cd478abb4eb1968e63b32ae7e2e6",
      "IsHidden": "False"
    },
    {
      "Start": "46f054a7b9654294979bf9c8ffa93f31",
      "End": "6101a2578d7748d7acd077c5ba3d404b",
      "Id": "eeaee079b25d4a459b6c7f973ca23cf4",
      "IsHidden": "False"
    },
    {
      "Start": "50a04b63b1654e11a140f86281c1dd78",
      "End": "0c76258b3cd849c4927438173ccf1166",
      "Id": "115e90ddcffc49f191afd2d97afa9da9",
      "IsHidden": "False"
    },
    {
      "Start": "f5717de6bc7349db9b5d21ffbe7ba80a",
      "End": "49bce56978894355b6351bf82e67eb9f",
      "Id": "f17cb56af3b747e3ab54c65419aa7357",
      "IsHidden": "False"
    },
    {
      "Start": "096bd551f3fc4938be2c15c73b75f9d1",
      "End": "0f496c3c3e074d339238512a3459b575",
      "Id": "755eb4a802fc42289f753c8fd8629b31",
      "IsHidden": "False"
    },
    {
      "Start": "adaeaac441e74004973ff3b6149d8d73",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "1ca0a655fb564301b882df24734e48d1",
      "IsHidden": "False"
    },
    {
      "Start": "adaeaac441e74004973ff3b6149d8d73",
      "End": "c6b8f53a664c46e5b41cf2172f096a2d",
      "Id": "eba0e1f7b06f4edeb677d49d9b5e0eb9",
      "IsHidden": "False"
    },
    {
      "Start": "adaeaac441e74004973ff3b6149d8d73",
      "End": "970608d516ff43d4a7e187ee02faf399",
      "Id": "9c337f2b0af64703a400d57e33c762b5",
      "IsHidden": "False"
    },
    {
      "Start": "adaeaac441e74004973ff3b6149d8d73",
      "End": "d45b238a22444330ac66de4b266d4cff",
      "Id": "93c0a260aea54fbaa9f55b1392550655",
      "IsHidden": "False"
    },
    {
      "Start": "e762afa739c0484e91069af6e4b2e8ee",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "c4af8b24f4734cce9983d48853ef5af1",
      "IsHidden": "False"
    },
    {
      "Start": "e762afa739c0484e91069af6e4b2e8ee",
      "End": "26f1bf35ba334321b55c77d7f2e35b76",
      "Id": "67b7f16813614dbf8a1af0da98353c50",
      "IsHidden": "False"
    },
    {
      "Start": "7b7dd6e3a07a4d7cba2589828b833eb9",
      "End": "7d2eb2f495ed4825aba51d0330bf745f",
      "Id": "8736b45e7f0c43178d06b18bccbdcea9",
      "IsHidden": "False"
    },
    {
      "Start": "db123064afbf4c3993a56365123e386b",
      "End": "2fd28788b0f540598808a366928f634b",
      "Id": "bf4fa8fa71744df5ad24cdbbc1614719",
      "IsHidden": "False"
    },
    {
      "Start": "88010d29a9b4458382505578ca7464c3",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "3d5791c313be4e8ba59f1a4b8f9137b7",
      "IsHidden": "False"
    },
    {
      "Start": "75df9993aa0242a1bfaa4bf6a264bc12",
      "End": "7719c7e4e89f4cc0b0a498f8b0cd21fb",
      "Id": "599d80197ec54651be55fc211432d3c0",
      "IsHidden": "False"
    },
    {
      "Start": "25180b11b64d4311a89a3c0549fde1ba",
      "End": "b01d1f23cf204babb84220c2435c5350",
      "Id": "f2fd5e67816345aab1d62ccf6a3b39f7",
      "IsHidden": "False"
    },
    {
      "Start": "25180b11b64d4311a89a3c0549fde1ba",
      "End": "e1c4d4cb48c24ffb845d0d238e85479e",
      "Id": "43d27080214a4e9492763f185c3e8302",
      "IsHidden": "False"
    },
    {
      "Start": "5b27686929b54a1c8feaddc72f161bb5",
      "End": "0bc49fb0ee764399bb5bb30969daabfb",
      "Id": "3d2400584a1d4383a77ebdf82a76c9bb",
      "IsHidden": "False"
    },
    {
      "Start": "7a83bf3bcd1843ef97f225c79bf31c4c",
      "End": "09a28fcf8840403ba788bb7586f825e7",
      "Id": "a71b22e10c0d4facb366396eb7b4772d",
      "IsHidden": "False"
    },
    {
      "Start": "903dc2e25a4e419bac8fc34c2d59b446",
      "End": "7f1697479b204577ae1954c543f9dea0",
      "Id": "c535bcf4c42c4cec8690234d3739b976",
      "IsHidden": "False"
    },
    {
      "Start": "903dc2e25a4e419bac8fc34c2d59b446",
      "End": "7e90999302be4b928ff41c07c9ffa578",
      "Id": "a67189a65ea04262b7bba2560f759a76",
      "IsHidden": "False"
    },
    {
      "Start": "45cd38e29fa24905b34fd48e997e3fd9",
      "End": "2373964cdc5d480792f2e7a8e1b29ce4",
      "Id": "fab7ac1311df4b7aaeb5214be20ae15c",
      "IsHidden": "False"
    },
    {
      "Start": "d7e887a31fc240719ea5f9627ca86b5e",
      "End": "b45fd0c235804e91931ea657bda70c03",
      "Id": "70544b0dcef940fbad0108afde34062e",
      "IsHidden": "False"
    },
    {
      "Start": "58d99233479e47708ad39287b46c6302",
      "End": "db45583167234c7db93eb371414d19e7",
      "Id": "fb9548da5d944aeb81055ed09a66b5a3",
      "IsHidden": "False"
    },
    {
      "Start": "c9324c47893248418b9ccb9af2a38392",
      "End": "b444ba7b01da426c8c519d433df10c0c",
      "Id": "1ec93edceaf5426ea2eff912f5154433",
      "IsHidden": "False"
    },
    {
      "Start": "c9324c47893248418b9ccb9af2a38392",
      "End": "9b827681ab7f498a8956f8476ac29306",
      "Id": "bab96c9f927544e0ad9c38f193423703",
      "IsHidden": "False"
    },
    {
      "Start": "2e69264f78274540bac06858453eb30f",
      "End": "1525cc32441e4a4c930fbe53bf554895",
      "Id": "508a0c89ef814fbeab46215b31ca6963",
      "IsHidden": "False"
    },
    {
      "Start": "585f3f6fc3c943ed9d346f17169e9d15",
      "End": "23fb95a775b247caac8b684682a7a90f",
      "Id": "971f3240a7794102987b0e557b1255b0",
      "IsHidden": "False"
    },
    {
      "Start": "7f1b52612c404fbe8546d69bcd95b5f4",
      "End": "b8116193040a405bba0e40b056972def",
      "Id": "817af57f5ee6464a928e3ff3fe215b54",
      "IsHidden": "False"
    },
    {
      "Start": "6789b6728d4e47148d9386d4c53e6c0a",
      "End": "dcefa0c821e747daae71a4f296a2744a",
      "Id": "616843a464ac4cdaab49f41d3cd60473",
      "IsHidden": "False"
    },
    {
      "Start": "d6e0c228db7b42e5b100e71169793fbb",
      "End": "789773824ef4438b9d8152b0900c614b",
      "Id": "8a4f093ef4994a3f89dee7bf67bed7cf",
      "IsHidden": "False"
    },
    {
      "Start": "c316f724dbbf4a5381891c2a265f111c",
      "End": "cf8d3161d7084c5d96178b901908f57c",
      "Id": "9c43838027f84ac6bc90690c7ad04d53",
      "IsHidden": "False"
    },
    {
      "Start": "c316f724dbbf4a5381891c2a265f111c",
      "End": "a8c06bb74dae45db9cc2e98375c57ba9",
      "Id": "be9fbe07c6b644cd807960e13ad3878f",
      "IsHidden": "False"
    },
    {
      "Start": "b19cd5a531ff4262b945168a50af9567",
      "End": "50cc4a97763e45f59383d643122ff1e6",
      "Id": "32fc1117245e4db2ab8a61f34f03f080",
      "IsHidden": "False"
    },
    {
      "Start": "5f8e4cdeed9f4600b840b1369035b07e",
      "End": "4183fe7980cd4b4c8071837261135155",
      "Id": "8ee0dede26a84822a39f0de026d2afc9",
      "IsHidden": "False"
    },
    {
      "Start": "007a4502e5c24dcb9afe75b56cf9d04e",
      "End": "c69678717e8340f3a5efe3d85519b969",
      "Id": "c5e434cf7623458098194e3cfa0d86bb",
      "IsHidden": "False"
    },
    {
      "Start": "3d47b63e7fec4349abfa377bbe401cb9",
      "End": "974dea0e1d394627817d5b8b19c227db",
      "Id": "7db54505f0f14665bbfed11924e4752c",
      "IsHidden": "False"
    },
    {
      "Start": "e5d14c02dbf94eea926d7139e984ec34",
      "End": "39b97afbbc3440dd8cbd1d92388dc851",
      "Id": "849eacfe03ec42aa80b97d883b09916c",
      "IsHidden": "False"
    },
    {
      "Start": "fe7b73ee03e6450f88b91a759b4f3d0e",
      "End": "4f77e594166e43b987f39e4959a3b3cc",
      "Id": "fe62ad36d79748f783abef6df3564666",
      "IsHidden": "False"
    },
    {
      "Start": "d2882aeae2b94815932166a4c823bdb8",
      "End": "4f91a51061694ec4b6029e9801cb7c54",
      "Id": "208bd32e20ff42e5a2d32d3fb8ed0cc8",
      "IsHidden": "False"
    },
    {
      "Start": "2890281071af4afda591f4dbe8705d87",
      "End": "a227935de9914b9cb5d371e8420ba6cf",
      "Id": "af3dd11042e8447cba2e31b106963ca9",
      "IsHidden": "False"
    },
    {
      "Start": "341403eb949a421ca62e36de61bbd212",
      "End": "a0db5a19138b49f5929072056ce8fc1e",
      "Id": "bc7574ad0cbd4ca5810eec5f689c901b",
      "IsHidden": "False"
    },
    {
      "Start": "341403eb949a421ca62e36de61bbd212",
      "End": "edea3afc5157474790b2e12de8b7d551",
      "Id": "c8fc07e12a61493f8fa3f7d37cb21c3c",
      "IsHidden": "False"
    },
    {
      "Start": "ff6645626c0f408eaaf26178da96c783",
      "End": "3e605807bcf04d829bd7e390301093fe",
      "Id": "9cf82f8f483d44148c14d6b844681e98",
      "IsHidden": "False"
    },
    {
      "Start": "24f4764db8ae4d15bfa7d89ff1289ae1",
      "End": "6b6317fadd424ab59e3c716b2b867466",
      "Id": "7e3e3aecd8b04ac4b42de8c26a98061b",
      "IsHidden": "False"
    },
    {
      "Start": "cdabf4b9bf734849a5ab284a61186eb2",
      "End": "efa72287fa594e9abc12951291b222b5",
      "Id": "089a7e2aaa4543e2b0619851770c5eb6",
      "IsHidden": "False"
    },
    {
      "Start": "eba913a415654cfea32c7f6ae68ef1eb",
      "End": "fa3b65672c2845348b9b7c23c9a06545",
      "Id": "29d70cf1f9cb4c4680000cfddc2e4a1b",
      "IsHidden": "False"
    },
    {
      "Start": "a2f4fe744c36483a971d9a24dbc6a095",
      "End": "4683b4918d074349bd75c1b6d2dab1f7",
      "Id": "77882bb9f7724bf6975734ad627c858a",
      "IsHidden": "False"
    },
    {
      "Start": "44ccf08020fa4c1cb8deffff955cb97c",
      "End": "2aff2e5fff1544b79d77654db6f8899b",
      "Id": "17d39584ab9249ec9bccb6bd65c7735b",
      "IsHidden": "False"
    },
    {
      "Start": "634ed004cb15488192d2334b3571656f",
      "End": "5d620ca77f6447c7b44613e09d478ff7",
      "Id": "b584e66182df4f44b03dc42efe2bde7f",
      "IsHidden": "False"
    },
    {
      "Start": "b3c72f34bba2433e99199dd462cda033",
      "End": "3cd9d4fc0e2e4a3cb0a8e920a0850a71",
      "Id": "cba57083d6cd4a4e9f41417478613282",
      "IsHidden": "False"
    },
    {
      "Start": "9d5958aee70a44b4ac6572a0f54a3c7a",
      "End": "b16277973d4e4078a8eb20a0cbc94624",
      "Id": "b05a932747b74f6eb7bf243e9855cf58",
      "IsHidden": "False"
    },
    {
      "Start": "0bace34f022444f382a81ea5e3effa2c",
      "End": "3e9c256169774aaf8a3aeb55f927096c",
      "Id": "ce2a9ece59a547ad83f87e835af52ed2",
      "IsHidden": "False"
    },
    {
      "Start": "47c9e581a9434f8c8f7fbcc0355afb0b",
      "End": "fe1b09f991874298a260338ab35cd880",
      "Id": "69a77b1859a04c4a8f001b3a454979dd",
      "IsHidden": "False"
    },
    {
      "Start": "c2554dd0dfc4455e9682326dcb9a31f5",
      "End": "b2fa399ad06e417fae469a1881f7aca0",
      "Id": "5e693bf7d3664d5abe3d8afb12bf19c4",
      "IsHidden": "False"
    },
    {
      "Start": "bd720e9e996d4fa88f1a3ab7bfb0a324",
      "End": "aaf5c0d6f4774b049804d7ae76e4a215",
      "Id": "2767368d50ea44bcae6cb2fb67d51acd",
      "IsHidden": "False"
    },
    {
      "Start": "2306210bcada45319eec6e27b2b8a9b3",
      "End": "ab4670e71c1b49158fcb3a3178d57cf2",
      "Id": "a828b3b6e29e4dc3b0ba4692db647414",
      "IsHidden": "False"
    },
    {
      "Start": "dec5d4104eca4778b8a60620d2bdb675",
      "End": "08a849fdc4cc4983a3105349c22a6831",
      "Id": "f22f82374391488c8de512ac28cfe177",
      "IsHidden": "False"
    },
    {
      "Start": "cc7c2671fe6d4463ada2332ce15a5a43",
      "End": "c6be19332c0a46fcb9a7b5e320b3f298",
      "Id": "1803755de7a54a098b19144e012a3959",
      "IsHidden": "False"
    },
    {
      "Start": "71e22565e09f4de59305b5fff1d27d71",
      "End": "055642c8a43d4fbe9571b74c21ac70a7",
      "Id": "c3f58d0874be4c71a31aa08e64b88b74",
      "IsHidden": "False"
    },
    {
      "Start": "98f60d91b81b42d29b58091aa73ac4b3",
      "End": "0aa53c81483e4e1aa13651511efa3246",
      "Id": "af6ede70a1294add994e6c6fbb79f7b6",
      "IsHidden": "False"
    },
    {
      "Start": "1f15f25da9c4464090ab3470d7100327",
      "End": "3a4c94eb14584a3cb5f8343ed8ca487c",
      "Id": "bd062a370ad84cf0b79d218680cd4bf2",
      "IsHidden": "False"
    },
    {
      "Start": "190556d594344c4fb3afd04f17e0df36",
      "End": "e8d9f13277a449d999a40cd4004f3cd5",
      "Id": "8aa0d357dbc74e50a88cf32275b42eb3",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TfM9xR5nuKi3fSjd9KsCXzPcUeZ7iot30o3fSgCXzPcUeZ7iot30o3fSgCXzPcUeZ7iot30o3fSgCXzPcUeZ7iot30o3fSgCXzPcUeZ7iot30o3fSgCXzPcUVFu+lFAEe6jdWT9svYiS8ENwn/TJyj/QBuCfqwp41qFf9dFPbH/ppESPzXI/WmI091G6q1vdQ3kfmW8sc8ecbomDD8xUm6mBLuo3VFuo3UAS7qN1RbqN1AEu6jdUW6jdQBLuo3VFuo3UAS7qKi3UUAfPuk/FjxHZqqy3EF+npdQjd+DKVP4nNdhpvxjik2i90uSM92tZA/6Nt/nXj1uw3bM4deqnqPwrTt+3+e9W0iD2y38XeGdakDtcRRzkAbrmNoZPpuIHA9jityG3LQrLZ30vlHlSHE0bY6D5s8f7pH19PCrccVp2ebeTzIWeCQ9XhcxseO5UgmsxnsyzahHwUt7nt8paIn8Pm/nWF4j+KfhvwfGza7fDS2UgFJcOckgAEoWC5JA+YjrXGal4h1VPD+qR/bnlVrSZSsyhuqMOoww/AiuO+BGifDDUpCkJOq+I3hxcNqU7XMcg84kojY8ttsob92cuuMdAK4K2InGpGjC133/rf5no0KEJUpVql2lpZW/q3yPcPA3jjTfiFoI1fSxOtoZpINtzHskDI21srk459ea6DIrPexT5WgxbSIu1WjUAbR0UjoV9vyxTor4rIsVyohmbhSPuP/un19jz9etd0b2Sbuzhk022lZF7IoyKj3UbqsRJkUZFR7qN1AEmRRUe6igDB1Hw/FqS4u7ew1RRzsvrVS2fZx9367Sa5y8+G+lSZKWN5Yt62dwJk/APz+n4V2+6jdVWEeYTeAHhk22mrW07nJEF5G1rLgegOd31wo4/KCXw1q+n8y6dO6f37dfOB47bMn9K9UkUSxlHVXQ9VYZH5VW/s23Vi0aNbsTndbu0eT7gHB+hBFKwHk2qTRtoupKHXcLaYbc852HjFebteWg0eCziuIBdKIZzbo6+YF3gb9o5A3AjPqK+i/F1jLN4a1cyTR3e2ynx9qgVmH7tjwVAx7cV5d8Jvhn4W8ReD43OnX+jXsxceXNbLakuHLGWPGRIjN84+Y5DcqD0+ax2EliMfh5p/Br+KPpMDio4fL8RCS+PT8H/AF/mafgn4vXNgEs9dMl7b9FvOWmT/f8A749/vfWvXbe4tNXsVmhkivLSYZV0IZWH+fyr578UeB9S8G3GLpRPZs2I7yIHy29Af7rex/Amn+F/FGo+F7jzbGb92xzJbScxyfUdj7jn8OK+laT1R8ye/Ynsem+6t/T70ifT++P1+tTw3CXEYkjdXQ9GU1h+FvG2n+KowsR+zXoGXtZSN3uVP8Q9x+IFa89lukM0D+TOfvHGVf8A3h3+vX3qb9yixuo3VTiu90nkyp5M/wDcbo3qVPcfqO4FT7qsCXdRUW6igCLcfSjcfSoqKoCXcfSjcfSoqKAJtxHIFMnRblCkq71Jzz6+uexplFAiORjHA8F4n22ycbWLLuYA9mX+Ie456ZB5NeeeKvhX5Sm/8Pnz7ZhvNnu3ED1jP8Q/2Sc+hPAr0fNQ+W9vI0tsQjMcvG33H+vofcfiDU27AeD27PDKCpaKWN+oJV0YH8wRXpXhb4lMqpbaySw6LeqvP/bQD/0IfiOprY17wrp3i8s+DYauq/f4y3+8P419xz9Olecalot5oN2Le+h8pznY4OUkHqp7/TqKncD2544dQt1ztmhkAdGU8EdQwI/mKpyedY/6zdcW/wDz0Ay6/wC8B1HuOfUdTXmPh3xFeeH5P9HbzLdmy9rIfkOepH90+4/EGvTdE8Q2evQlrdysyjMkD8On+I9xx+PFLVATJIJEV0IdGGQynIIopLjTirNLakRyE5aJv9W//wASfcfiDRV8yGQbv85o3f5zUW73NG73NaWES7v85o3f5zUW73NG73NFgJd3+c0bv85qLd7mjd7miwEu7/OaN3+c1Fu9zRu9zRYBZo0mA3AhlOVdThlPqD2qO6aG7tWtNWhW5tG/5b4+77tj7pH94cd+Kfu9zRu9zScbgcXr3gm40fNzZlr2w+9uHMkY9Tjqv+0O3X1rKs5GRopYpGjkX5kkjbDD3B/zmvRoZJbFt1scx5y1u33T/un+E/p/Os3UfDVprRkudNK2l6PmltpBtVj7j+En+8OD78mspJoZJofjISBINSxG3QXS8I3+8P4T79Pp0orl/JktpmgnjaGZfvRuOfr7j3HFFQFjtN59f0o3n1/SiiusQbz6/pRvPr+lFFABvPr+lG8+v6UUUAG8+v6Ubz6/pRRQAbz6/pRvPr+lFFABvPr+lMkXzGVwzRyr92ROGX/63seD3FFFIAupLbUoVg1ZVjK/6u8jO0Kfqfun2OVP6UUUVhKKTGf/2Q==",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4539.1986003440725,
        "Y": -717.83926347480747
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4181.1986003440725,
        "Y": -717.83926347480747
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2458.40207453364,
        "Y": -611.60186621266189
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2712.40207453364,
        "Y": -577.4618662126619
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1557.4020745336402,
        "Y": -230.4618662126619
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Beam Slope Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1557.4020745336402,
        "Y": -78.601866212661889
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Beam Slope Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1557.4020745336402,
        "Y": 73.398133787338111
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -673.40207453364019,
        "Y": -101.60186621266189
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1111.4020745336402,
        "Y": -9.4618662126619029
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "596909f5799446a7820a3e674d2f49c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1414.7576999080784,
        "Y": -64.19606620150094
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 926.75769990807839,
        "Y": -83.056066201500926
      },
      {
        "ShowGeometry": true,
        "Name": "Beam Section Type",
        "Id": "3db0ae870aae4d4e8fccea48976c3b33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 926.75769990807839,
        "Y": 68.30393379849906
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "145ece1505dd4e13b5adb581f63e7bf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1844.7576999080784,
        "Y": 26.80393379849906
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e1d42da2f0d04115ba4c333d965e15ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1414.7576999080784,
        "Y": 151.94393379849905
      },
      {
        "ShowGeometry": true,
        "Name": "3. Library file path",
        "Id": "5c1fecff026548af92d1d0d712d29ce2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4827.9760895636828,
        "Y": 1413.8408268804487
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6005.3278327237886,
        "Y": 634.63642049489931
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3363.3361848357326,
        "Y": 622.19587832949071
      },
      {
        "ShowGeometry": true,
        "Name": "4. Connection family to place",
        "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6286.9266756908219,
        "Y": 872.85718068479832
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3810.3361848357326,
        "Y": 658.29199387154415
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4693.6972822951084,
        "Y": 747.10865157900639
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4439.6972822951084,
        "Y": 781.24865157900649
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5108.6972822951084,
        "Y": 482.26271294719118
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5108.6972822951084,
        "Y": 1011.9545902108216
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5641.4569393093743,
        "Y": 826.5480468069801
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15389.512629071636,
        "Y": 387.55076980488809
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7130.7766891690389,
        "Y": 358.28162429565947
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6876.7766891690389,
        "Y": 392.42162429565946
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7545.7766891690389,
        "Y": 358.28162429565947
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7893.7766891690389,
        "Y": 358.28162429565947
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7544.0304465096333,
        "Y": -40.924081408200394
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7129.0304465096333,
        "Y": -40.924081408200394
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7892.0304465096333,
        "Y": -40.924081408200394
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6875.0304465096333,
        "Y": -6.7840814082003789
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8201.7766891690389,
        "Y": 358.28162429565947
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8200.0304465096342,
        "Y": -40.924081408200394
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7117.4798620254605,
        "Y": -763.65296937481594
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6863.4798620254605,
        "Y": -729.512969374816
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7532.4798620254605,
        "Y": -763.65296937481594
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7880.4798620254605,
        "Y": -763.65296937481594
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8188.4798620254605,
        "Y": -763.65296937481594
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7315.1410414237489,
        "Y": 952.77791168096564
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7793.1410414237489,
        "Y": 952.77791168096564
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8842.1410414237489,
        "Y": 952.77791168096564
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "774bfec08d6646eab975b1a78194a1d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11393.383149921659,
        "Y": 1112.4374868142254
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11139.383149921659,
        "Y": 1112.5774868142253
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11393.383149921659,
        "Y": 1329.5774868142253
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14739.512629071636,
        "Y": 387.55076980488809
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7274.0420507434228,
        "Y": 1359.7012213508956
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7710.0420507434228,
        "Y": 1342.7012213508956
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8100.0420507434228,
        "Y": 1436.2022133068801
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8408.0420507434228,
        "Y": 1436.2022133068801
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "d19b07df0f1247c09fd1a6d579459e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11815.383149921659,
        "Y": 1127.4374868142254
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6900.1410414237489,
        "Y": 952.77791168096564
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6646.1410414237489,
        "Y": 986.91791168096563
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 127.66831790668334,
        "Y": 1098.7853178888818
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2533.8460014049997,
        "Y": 1052.2400709287231
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2022.8460014049997,
        "Y": 1126.2400709287231
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1599.8460014049997,
        "Y": 1126.2400709287231
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3044.8460014049997,
        "Y": 1052.3800709287232
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3042.3144888109905,
        "Y": 1227.5396876900775
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3754.1063010624848,
        "Y": 971.55235062939141
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3767.9760895636828,
        "Y": 1379.8408268804487
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1111.4020745336402,
        "Y": -261.60186621266189
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenBeams",
        "Id": "459b9a4619d64a2087410d17c30d3e78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -254.40207453364019,
        "Y": -6.6018662126618892
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "90b8f7ad4af7496a960da48abc152285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -673.40207453364019,
        "Y": 149.95813378733806
      },
      {
        "ShowGeometry": true,
        "Name": "Colinearity angle (degrees) from",
        "Id": "5516255dde41412eb0a025a606082bd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1111.4020745336402,
        "Y": 293.95813378733806
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "41563a8003714c4aa18135c3678b78ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2521.6564237499751,
        "Y": 26.169668054535435
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "3567ffc717454450a9a775d56866717e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1965.4020745336402,
        "Y": -537.60186621266189
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "1cf10b00b22a47289d981f76ec8b60db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1557.4020745336402,
        "Y": -446.60186621266189
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "15a8733a44cb4deea22669a182a1c3ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2458.40207453364,
        "Y": -429.4618662126619
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "67bc4b1b5ce141a791acf6e0abd2c994",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1965.4020745336402,
        "Y": -321.4618662126619
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5561ac0fc2bb41df96ee4227a12facae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4541.1063010624848,
        "Y": 1005.6923506293913
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "81e597a35e574a209bf27ecaefa111ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2977.6564237499751,
        "Y": 85.169668054535379
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b46d7428ec6d42b3bfc54b36195d99b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2521.6564237499751,
        "Y": 178.30966805453542
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "4435dbf66b39453bb2f9201e80851e9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4287.1063010624848,
        "Y": 971.55235062939141
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "df6b95725b894986bb72a1eb95e2fc97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4300.9760895636828,
        "Y": 1379.8408268804487
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "8575df63c6ea41fe9fa3a3f5ab0b0e8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8229.1410414237489,
        "Y": 952.77791168096564
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "84942334ea1f413eaf4d19815619cd1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8534.1410414237489,
        "Y": 952.77791168096564
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "65455ba3debe40ab8e6f30bca9c88ead",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14986.512629071636,
        "Y": 387.55076980488809
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "512148583d764115b615fd46c4104645",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12702.87724780769,
        "Y": 1392.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "012204df6648424bbb0653bd2e1ea5fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12394.87724780769,
        "Y": 1223.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "ab66ee9f11d24836ac69436560b7caae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12702.87724780769,
        "Y": 1211.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "10a48ebac913489681a81457bdbdc706",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12394.87724780769,
        "Y": 1071.6455196106085
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "708b96644ba24bd390ff4a4f92479bf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9397.1221636718055,
        "Y": 906.21605871760494
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "3bff89d646064190a36d081e2b37c0a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9718.1221636718055,
        "Y": 1008.2160587176048
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f6bd70e61c594d8bb21e5179b4a31159",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9397.1221636718055,
        "Y": 1144.2160587176049
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "4d18b9f5ec4847abbccc332c512095a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10122.122163671806,
        "Y": 1099.2160587176049
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1340c42048fd44ac8d2be81c63b615f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9718.1221636718055,
        "Y": 1224.2160587176049
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f1bd4b13922e4b1ca02119000bcfbbe8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10526.122163671806,
        "Y": 1190.2160587176049
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "d51b7dd1c67e49caba903b253e81c26b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10122.122163671806,
        "Y": 1315.2160587176049
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "3d5e75db6a7c4b1c9d54ccb5e7b4ae24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9800.0279497218216,
        "Y": -289.92115582124643
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "10a48eaa155443469b29c7c02ab8fc28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10145.027949721822,
        "Y": -131.92115582124643
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "71ceebd31a084799b8b41091214877fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9800.0279497218216,
        "Y": 60.07884417875357
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ab9032cba20249848c5421af0a79d965",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10953.027949721822,
        "Y": 50.07884417875357
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ed74b2ee2f484086bd44358d982f0faf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10549.027949721822,
        "Y": 175.07884417875357
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "14cc0d2aefee4b7eacae0878b19bfeee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11357.027949721822,
        "Y": 141.07884417875357
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f8fd2623db834ac4bf25017170ce7ecf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10953.027949721822,
        "Y": 266.07884417875357
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "11a9bf0ed91747d191caad6d14eca6c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6859.0420507434228,
        "Y": 1359.7012213508956
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9b1486bdd97c4203b10ca66c2473ad87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6605.0420507434228,
        "Y": 1393.8412213508957
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecc14135b9e5498ca9cfe606121157a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6857.5160178316582,
        "Y": -360.05659202544
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "4bda193ffeaf4132a0fde1c594cb1760",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7526.5160178316582,
        "Y": -394.19659202544
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "43e00b0a367142f5a1a9bfdd57cd0d4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7874.5160178316582,
        "Y": -394.19659202544
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "7532d2b66f5444719d7496973805199a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8182.5160178316582,
        "Y": -394.19659202544
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "a75a5849e58948278e5365792061ed28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7111.5160178316582,
        "Y": -394.19659202544
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "504fc128235845808f0335cca63debc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10549.027949721822,
        "Y": -40.92115582124643
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1c9ce7bd33bf46ef856e6419a999cd24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10145.027949721822,
        "Y": 84.07884417875357
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a587e25db1214b5aaacb355b754fd3a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1517.3678695988071,
        "Y": 1109.5171807311513
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "c1bb999f675646eb8fa962570afd2509",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1893.3678695988071,
        "Y": 1168.5171807311513
      },
      {
        "ShowGeometry": true,
        "Name": "5. Filter connection type name",
        "Id": "1a78f74f74c04e17b411360786770751",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1120.3678695988071,
        "Y": 1202.5171807311513
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "75f1c4ac8c2f4d00a20e97da83bc591d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2480.3678695988074,
        "Y": 1134.5171807311513
      },
      {
        "ShowGeometry": true,
        "Name": "6. Select analysis results",
        "Id": "d2e9cd7e128f4c45873acae0c8d6a059",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3363.3361848357326,
        "Y": 774.29199387154415
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "6ce55a0b8eeb4dd8a10f9daf2d0cbffe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1517.3678695988071,
        "Y": 1261.5171807311513
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "1cc9a9884d2e4925b9a0cdd1b6cacabe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2209.3678695988074,
        "Y": 1168.5171807311513
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "427ac79601044796b11c54f1129c1819",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -387.33168209331666,
        "Y": 1132.7853178888818
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a71e277956fd4b3da407780c7389de46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -823.33168209331666,
        "Y": 1132.7853178888818
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "4f4b5c1174ed4f28a9b6eea7bd2d7e42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5903.9266756908219,
        "Y": 931.85718068479832
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7d05f8e329a6477da2290353c4633fc5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1120.3678695988071,
        "Y": 1354.517180731151
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "87d0006bdd65454baee9ded9c2f4b406",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13045.87724780769,
        "Y": 1258.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c31f31368ddf414db1e60b444190b35c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5408.7039189848883,
        "Y": 2128.2090556438047
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5563ae3472fc42b7936f6e55535abb38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5154.7039189848883,
        "Y": 2162.3490556438046
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "7fc4971255024c29bd46eb6f98abc440",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5823.7039189848883,
        "Y": 2523.1945775121153
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "6c6ff923ef934d8483c268a95abb4634",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7022.60250712391,
        "Y": 2278.38781987233
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "7f20f3a30b874e4b912aea68fcba7eca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7467.60250712391,
        "Y": 2278.38781987233
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "994693e1e6ea414bb1828a209af55db0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7866.60250712391,
        "Y": 2354.38781987233
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "41773dfd9c144695aa82411d7ae3750f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7866.60250712391,
        "Y": 2202.38781987233
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0be974eca6f54d70b719fd2b4842925c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9030.0154661017259,
        "Y": 1906.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "338a4b6c6b9541bf8938bf0bdb9ae728",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9030.0154661017259,
        "Y": 2099.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e069b67164884eb7817be28db18cc26a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9452.0154661017259,
        "Y": 2268.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ed079e2fa7c44d618750550b29c0242a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8776.0154661017259,
        "Y": 2334.7975814439947
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "126dd088d3f14498b8b9ac71f78390a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9452.0154661017259,
        "Y": 2051.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "77b8f9985379472190bed896b5e34872",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9874.0154661017259,
        "Y": 2212.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "668386d86cd14ff5a2bf0344e5827168",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9030.0154661017259,
        "Y": 2250.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "6ea17a78033048c98576402aaaf17cad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9452.0154661017259,
        "Y": 2419.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "06eb3f565c1f43d182790e25d2d3fda8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10278.015466101726,
        "Y": 2212.1575814439948
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "d642a6fb1aad498898d8d37010be09ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7282.0667859014156,
        "Y": 3102.3588636089526
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "2b4e1040fa0d4f1b8e9af0f5da812815",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7676.0667859014156,
        "Y": 3115.3588636089526
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "22171371b1374970b2d935d84946e7a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8790.0667859014156,
        "Y": 3157.3588636089526
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "8e5d67586439493c99ae8c840cdb775f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9184.0667859014156,
        "Y": 3123.3588636089526
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1bfc6fa682b8478dbbd33b5e54eb1191",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7676.0667859014156,
        "Y": 3301.4988636089524
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "6ec4e113a62042129e9a091f601d1911",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8070.0667859014156,
        "Y": 3225.3588636089526
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "6d032a2ec4b542cba748bbef64dd9447",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8455.0667859014156,
        "Y": 3191.3588636089526
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "983039f0d8df459e95216054dbb28c08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11502.08550773434,
        "Y": 2787.3392320329476
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "7e72b87623e549b3b7f563385a05370d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11896.08550773434,
        "Y": 2753.3392320329476
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c8f8c3618a740f98fabbaede4f98cc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10991.08550773434,
        "Y": 2787.4792320329475
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "3a1dfa9232fa4693bd08140ffcd4fdfb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6286.9266756908219,
        "Y": 1024.8571806847983
      },
      {
        "ShowGeometry": true,
        "Name": "Colinearity angle (degrees) to",
        "Id": "24efa48c1a274189b3dd7881442d126c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1111.4020745336402,
        "Y": 141.95813378733806
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "cc2776e9dc0046159fd0ba031703b4de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13392.87724780769,
        "Y": 1420.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "fef8866c631946f1b4790cab73a7ea5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13045.87724780769,
        "Y": 1474.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "537e518c642843ca9da6903670400c24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13739.87724780769,
        "Y": 1398.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "0acae3369f9e4c9e97b4ce60ba9e5877",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13739.87724780769,
        "Y": 1181.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "daf30cf01c1749b8a23724b70e9f7eb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13392.87724780769,
        "Y": 1203.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "a3ef299529894b10a38ab77927d7446c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14086.87724780769,
        "Y": 1159.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "28a3bbf80d5b46dca2ef7f3c9a00d603",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13392.87724780769,
        "Y": 1022.0055196106085
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "5294e125362e4631986f81414c7bebee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13045.87724780769,
        "Y": 1077.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "6bc59e3bd09346b0b56d1a44437eb395",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13739.87724780769,
        "Y": 1000.0055196106085
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "635c217eefa74831a791cc61f59dfd7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12702.87724780769,
        "Y": 1058.0055196106086
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "c76f2bc1347e4d00b2bf925473817c5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13045.87724780769,
        "Y": 924.00551961060864
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "62536ed7d8f64353aa7e5bd504d6f54d",
          "5516255dde41412eb0a025a606082bd9",
          "90b8f7ad4af7496a960da48abc152285",
          "459b9a4619d64a2087410d17c30d3e78",
          "1cf10b00b22a47289d981f76ec8b60db",
          "67bc4b1b5ce141a791acf6e0abd2c994",
          "3567ffc717454450a9a775d56866717e",
          "15a8733a44cb4deea22669a182a1c3ca",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc",
          "24efa48c1a274189b3dd7881442d126c"
        ],
        "HasNestedGroups": false,
        "Left": -2722.40207453364,
        "Top": -684.60186621266189,
        "Width": 2771.0,
        "Height": 1114.56,
        "FontSize": 36.0,
        "InitialTop": -611.60186621266189,
        "InitialHeight": 1050.56,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1ba97622b83a4896ac6b2b42a790702f",
        "Title": "Additional (optional) filtering: by section types",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "596909f5799446a7820a3e674d2f49c7",
          "4c0aeca86b3e4a598cd6c0ac60c2e74d",
          "3db0ae870aae4d4e8fccea48976c3b33",
          "145ece1505dd4e13b5adb581f63e7bf8",
          "e1d42da2f0d04115ba4c333d965e15ac"
        ],
        "HasNestedGroups": false,
        "Left": 916.75769990807839,
        "Top": -156.05606620150093,
        "Width": 1185.0,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": -83.056066201500926,
        "InitialHeight": 380.0,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "5561ac0fc2bb41df96ee4227a12facae",
          "4435dbf66b39453bb2f9201e80851e9f"
        ],
        "HasNestedGroups": false,
        "Left": -4551.1063010624848,
        "Top": 898.55235062939141,
        "Width": 1203.0,
        "Height": 243.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 971.55235062939141,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c1fecff026548af92d1d0d712d29ce2",
          "46ec41b71daf42dca401a9dc8eb59e77",
          "df6b95725b894986bb72a1eb95e2fc97"
        ],
        "HasNestedGroups": false,
        "Left": -4837.9760895636828,
        "Top": 1306.8408268804487,
        "Width": 1476.0,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1379.8408268804487,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4429.6972822951084,
        "Top": 366.26271294719118,
        "Width": 861.0,
        "Height": 781.69187726363043,
        "FontSize": 36.0,
        "InitialTop": 482.26271294719118,
        "InitialHeight": 674.69187726363043,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (beam to beam, end to end)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6866.7766891690389,
        "Top": 285.28162429565947,
        "Width": 1556.0,
        "Height": 243.14000000000004,
        "FontSize": 36.0,
        "InitialTop": 358.28162429565947,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6853.4798620254605,
        "Top": -836.65296937481594,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -763.65296937481594,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6865.0304465096333,
        "Top": -113.92408140820039,
        "Width": 1556.0000000000009,
        "Height": 243.14000000000001,
        "FontSize": 36.0,
        "InitialTop": -40.924081408200394,
        "InitialHeight": 179.14000000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "809e0ab45e464576aa8783e69d0af647",
          "84942334ea1f413eaf4d19815619cd1a",
          "8575df63c6ea41fe9fa3a3f5ab0b0e8b"
        ],
        "HasNestedGroups": false,
        "Left": 6636.1410414237489,
        "Top": 879.77791168096564,
        "Width": 2427.0,
        "Height": 243.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 952.77791168096564,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "11a9bf0ed91747d191caad6d14eca6c5",
          "9b1486bdd97c4203b10ca66c2473ad87"
        ],
        "HasNestedGroups": false,
        "Left": 6595.0420507434228,
        "Top": 1269.7012213508956,
        "Width": 2034.0,
        "Height": 302.50099195598455,
        "FontSize": 36.0,
        "InitialTop": 1342.7012213508956,
        "InitialHeight": 238.50099195598455,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "654e5f1363ce4799b114c9d1057fd75d",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "774bfec08d6646eab975b1a78194a1d4",
          "ecc0331f412c4c319df6ef8ef2e250e2",
          "1c8b31c6aeef42179f9bf04ab0c50df4",
          "d19b07df0f1247c09fd1a6d579459e44"
        ],
        "HasNestedGroups": false,
        "Left": 11129.383149921659,
        "Top": 1039.4374868142254,
        "Width": 894.0,
        "Height": 426.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 1112.4374868142254,
        "InitialHeight": 362.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "427ac79601044796b11c54f1129c1819",
          "a71e277956fd4b3da407780c7389de46"
        ],
        "HasNestedGroups": false,
        "Left": -833.33168209331666,
        "Top": 1025.7853178888818,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 1098.7853178888818,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "f882cdd5d1ba430582c2ccfd66bed5ca",
          "9a071a3676a146e59b21682562a0b7f7"
        ],
        "HasNestedGroups": false,
        "Left": -3054.8460014049997,
        "Top": 979.24007092872307,
        "Width": 1687.0,
        "Height": 384.2996167613544,
        "FontSize": 36.0,
        "InitialTop": 1052.2400709287231,
        "InitialHeight": 320.2996167613544,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "6142633e21c2437e86c6963568b19319",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ecc14135b9e5498ca9cfe606121157a9",
          "4bda193ffeaf4132a0fde1c594cb1760",
          "43e00b0a367142f5a1a9bfdd57cd0d4b",
          "7532d2b66f5444719d7496973805199a",
          "a75a5849e58948278e5365792061ed28"
        ],
        "HasNestedGroups": false,
        "Left": 6847.5160178316582,
        "Top": -467.19659202544,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -394.19659202544,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "40e119fc48b6430bb5a083cf7113af15",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a587e25db1214b5aaacb355b754fd3a5",
          "c1bb999f675646eb8fa962570afd2509",
          "75f1c4ac8c2f4d00a20e97da83bc591d",
          "6ce55a0b8eeb4dd8a10f9daf2d0cbffe",
          "1cc9a9884d2e4925b9a0cdd1b6cacabe",
          "7d05f8e329a6477da2290353c4633fc5",
          "1a78f74f74c04e17b411360786770751",
          "726d18437ded44808767026673b44d32"
        ],
        "HasNestedGroups": false,
        "Left": 1105.3678695988071,
        "Top": 1035.5171807311513,
        "Width": 1620.0000000000002,
        "Height": 454.99999999999977,
        "FontSize": 36.0,
        "InitialTop": 1108.5171807311513,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "6b61a627e0404c11947caec70e95867b",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -4549.1986003440725,
        "Top": -790.83926347480747,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -717.83926347480747,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "454fabf7d74f4d04b617989abc4bd401",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "646164bb1207481cba7fa1b3dc4fa6b0",
          "4f4b5c1174ed4f28a9b6eea7bd2d7e42",
          "3a1dfa9232fa4693bd08140ffcd4fdfb",
          "5f78b5a22e4043d4b8230c1ced05f4e7"
        ],
        "HasNestedGroups": false,
        "Left": -6300.4266756908219,
        "Top": 734.85718068479832,
        "Width": 682.5,
        "Height": 426.0,
        "FontSize": 36.0,
        "InitialTop": 807.85718068479832,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7c3dfa1662694daeb90311dbd123454f",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "65455ba3debe40ab8e6f30bca9c88ead"
        ],
        "HasNestedGroups": false,
        "Left": 14729.512629071636,
        "Top": 314.55076980488809,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 387.55076980488809,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "02a5d9b9f1d0402496cd0ec2808aa741",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "708b96644ba24bd390ff4a4f92479bf2",
          "3bff89d646064190a36d081e2b37c0a4",
          "f6bd70e61c594d8bb21e5179b4a31159",
          "4d18b9f5ec4847abbccc332c512095a0",
          "1340c42048fd44ac8d2be81c63b615f0",
          "f1bd4b13922e4b1ca02119000bcfbbe8",
          "d51b7dd1c67e49caba903b253e81c26b"
        ],
        "HasNestedGroups": false,
        "Left": 9387.1221636718055,
        "Top": 833.21605871760494,
        "Width": 1378.0,
        "Height": 618.0,
        "FontSize": 36.0,
        "InitialTop": 906.21605871760494,
        "InitialHeight": 554.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "f84b8019d2de4e40accc4ec85d150085",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3d5e75db6a7c4b1c9d54ccb5e7b4ae24",
          "10a48eaa155443469b29c7c02ab8fc28",
          "71ceebd31a084799b8b41091214877fa",
          "ab9032cba20249848c5421af0a79d965",
          "ed74b2ee2f484086bd44358d982f0faf",
          "14cc0d2aefee4b7eacae0878b19bfeee",
          "f8fd2623db834ac4bf25017170ce7ecf",
          "504fc128235845808f0335cca63debc4",
          "1c9ce7bd33bf46ef856e6419a999cd24"
        ],
        "HasNestedGroups": false,
        "Left": 9790.0279497218216,
        "Top": -362.92115582124643,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -289.92115582124643,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "93b44299152344218971f91e1dffce49",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "d2e9cd7e128f4c45873acae0c8d6a059"
        ],
        "HasNestedGroups": false,
        "Left": 3353.3361848357326,
        "Top": 549.19587832949071,
        "Width": 824.0,
        "Height": 361.09611554205344,
        "FontSize": 36.0,
        "InitialTop": 622.19587832949071,
        "InitialHeight": 297.09611554205344,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "ae5c1072eeed42629dc6f2443f8a4c65",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "41563a8003714c4aa18135c3678b78ff",
          "81e597a35e574a209bf27ecaefa111ef",
          "b46d7428ec6d42b3bfc54b36195d99b3"
        ],
        "HasNestedGroups": false,
        "Left": 2511.6564237499751,
        "Top": -46.830331945464565,
        "Width": 713.0,
        "Height": 361.14,
        "FontSize": 36.0,
        "InitialTop": 26.169668054535435,
        "InitialHeight": 297.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "41691ca2e43248bab2aad7cf4424c1bb",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c31f31368ddf414db1e60b444190b35c",
          "5563ae3472fc42b7936f6e55535abb38",
          "7fc4971255024c29bd46eb6f98abc440"
        ],
        "HasNestedGroups": false,
        "Left": 5144.7039189848883,
        "Top": 2055.2090556438047,
        "Width": 994.0,
        "Height": 703.98552186831057,
        "FontSize": 36.0,
        "InitialTop": 2128.2090556438047,
        "InitialHeight": 539.98552186831057,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "f842cb02b9ef48b681d82d8d3cc44dfc",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6c6ff923ef934d8483c268a95abb4634",
          "7f20f3a30b874e4b912aea68fcba7eca",
          "994693e1e6ea414bb1828a209af55db0",
          "41773dfd9c144695aa82411d7ae3750f"
        ],
        "HasNestedGroups": false,
        "Left": 7012.60250712391,
        "Top": 2129.38781987233,
        "Width": 1274.9999999999991,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 2202.38781987233,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "11276419915047b3959f0329459cdd21",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0be974eca6f54d70b719fd2b4842925c",
          "338a4b6c6b9541bf8938bf0bdb9ae728",
          "e069b67164884eb7817be28db18cc26a",
          "ed079e2fa7c44d618750550b29c0242a",
          "126dd088d3f14498b8b9ac71f78390a1",
          "77b8f9985379472190bed896b5e34872",
          "668386d86cd14ff5a2bf0344e5827168",
          "6ea17a78033048c98576402aaaf17cad",
          "06eb3f565c1f43d182790e25d2d3fda8"
        ],
        "HasNestedGroups": false,
        "Left": 8766.0154661017259,
        "Top": 1833.1575814439948,
        "Width": 1712.0,
        "Height": 752.0,
        "FontSize": 36.0,
        "InitialTop": 1906.1575814439948,
        "InitialHeight": 658.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "7e3b6d66bb3c425580171783190d592b",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d642a6fb1aad498898d8d37010be09ea",
          "2b4e1040fa0d4f1b8e9af0f5da812815",
          "22171371b1374970b2d935d84946e7a2",
          "8e5d67586439493c99ae8c840cdb775f",
          "1bfc6fa682b8478dbbd33b5e54eb1191",
          "6ec4e113a62042129e9a091f601d1911",
          "6d032a2ec4b542cba748bbef64dd9447"
        ],
        "HasNestedGroups": false,
        "Left": 7272.0667859014156,
        "Top": 3029.3588636089526,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 3102.3588636089526,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "cc7b0a64520641568a9b2b1e706d4d57",
        "Title": "Aggregate information",
        "DescriptionText": "Combine situation infromation and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "983039f0d8df459e95216054dbb28c08",
          "7e72b87623e549b3b7f563385a05370d",
          "4c8f8c3618a740f98fabbaede4f98cc8"
        ],
        "HasNestedGroups": false,
        "Left": 10981.08550773434,
        "Top": 2680.3392320329476,
        "Width": 1183.0,
        "Height": 273.0,
        "FontSize": 36.0,
        "InitialTop": 2753.3392320329476,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "31a94232a0684b92b4211adc7249480a",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "512148583d764115b615fd46c4104645",
          "012204df6648424bbb0653bd2e1ea5fe",
          "ab66ee9f11d24836ac69436560b7caae",
          "10a48ebac913489681a81457bdbdc706",
          "87d0006bdd65454baee9ded9c2f4b406",
          "cc2776e9dc0046159fd0ba031703b4de",
          "fef8866c631946f1b4790cab73a7ea5c",
          "537e518c642843ca9da6903670400c24",
          "0acae3369f9e4c9e97b4ce60ba9e5877",
          "daf30cf01c1749b8a23724b70e9f7eb1",
          "a3ef299529894b10a38ab77927d7446c",
          "28a3bbf80d5b46dca2ef7f3c9a00d603",
          "5294e125362e4631986f81414c7bebee",
          "6bc59e3bd09346b0b56d1a44437eb395",
          "635c217eefa74831a791cc61f59dfd7b",
          "c76f2bc1347e4d00b2bf925473817c5d"
        ],
        "HasNestedGroups": false,
        "Left": 12384.87724780769,
        "Top": 851.00551961060864,
        "Width": 1900.0,
        "Height": 875.0,
        "FontSize": 36.0,
        "InitialTop": 924.00551961060864,
        "InitialHeight": 695.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "5f78b5a22e4043d4b8230c1ced05f4e7",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Front plate splice;Splice joint).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6290.4266756908219,
        "Top": 807.85718068479832,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "646164bb1207481cba7fa1b3dc4fa6b0"
      },
      {
        "Id": "726d18437ded44808767026673b44d32",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. 100x10PL;SP). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1115.3678695988071,
        "Top": 1108.5171807311513,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "1a78f74f74c04e17b411360786770751"
      }
    ],
    "X": 1596.6679177679976,
    "Y": 402.90116736934863,
    "Zoom": 0.34424526992303456
  }
}