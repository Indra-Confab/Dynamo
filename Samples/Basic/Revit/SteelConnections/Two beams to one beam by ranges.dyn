{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places double sided connections in beam to beam geometric situations. Works only on connection types with attached ranges of applicability. ",
  "Name": "Two beams to one beam by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Name": "2.1. Main beam Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Name": "2.2. Main beam Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "b3c95697e6434508865fdae8d3004ce9",
      "Name": "3.1. Secondary beams' Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "58fe1afbbe604fb2b32af81f27d247b3",
      "Name": "3.2. Secondary beams' Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "1a354d3aadb941fb9fdd9ccb8b76dee7",
      "Name": "4.1. Angle between main and secondary beams (degrees, 0-90) from",
      "Type": "number",
      "Value": "90",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "81a7a51aff0b462ab0295d1b64fcea29",
      "Name": "4.2. Angle between main and secondary beams (degrees, 0-90) to",
      "Type": "number",
      "Value": "90",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "d4aa9022c65b43829a11aebf1c816525",
      "Name": "5. Library file path",
      "Type": "string",
      "Value": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.2WB.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "72fe204d3a844a1097b09048ecf1f7df",
      "Name": "6. Connection family to place",
      "Type": "string",
      "Value": "Double side clip angle",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
      "Name": "7. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "df79766745b34d1e9cd497f983e0cbf0",
      "Name": "8. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0c73cb8d7048409194a8e265792538f7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "685769566ace4985a7b8d25dd4a91f45",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bbf13e65a8f24bc2b8891e0bb2e68721",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1,2];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6b717b7154d46b1b2d7b3c8ac5a8e9e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42b5e54d628b45e4bb1d812a1bdd3400",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "12abfb80ffa74a4c80e36ca5b6059b8c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "488a86843f5540f79ac3761cf6af27cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
      "Inputs": [
        {
          "Id": "35fe42d556bb4d2fa87f919abc4a898e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae7be74142a47fba54135b055a34926",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f96b73bb21c445a19f87f5609e3e2f67",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00992a65f91e4c27ad1f48c9992fbffc",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2edc041e63044911ac298aa3b6e87f56",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d153e5c52e14e3f87bc968a49379386",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n\"X\";",
      "Id": "90b8f7ad4af7496a960da48abc152285",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cf862167b084446e81a252c3ae814998",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "593e93fa50154f23928b095a7335af3a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4b4ad15403348828e6e635c570ad9c2",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "41563a8003714c4aa18135c3678b78ff",
      "Inputs": [
        {
          "Id": "03362dd0d0a845ec825c9f233c9a3357",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "956ce6b2f3a44fd1add03d79f6a757e5",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "9d1cec5ec9ad4df5b4536a3603d17fab",
      "Inputs": [
        {
          "Id": "4795a0d54f9048c29485d60bcc31aed7",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9666db81c3444e0da1ede81e58862eae",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d31663f1eb74331bab5ebb304405ab4",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ad960e167924ca7891c3170a99ca6d5",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d956e1915ce4526aa0bfc19c363ae90",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "db13cb72be7e4d458bc9a1e8e171c01c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff2e2e7cde194a7989a23af7aa25dd95",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b3c95697e6434508865fdae8d3004ce9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f66ee711f33948519bc9af2deeda5732",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "58fe1afbbe604fb2b32af81f27d247b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28e0124a23fe4c5bbd0611ed2b278a25",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 90.0,
      "Id": "1a354d3aadb941fb9fdd9ccb8b76dee7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2d016498d6e455d9465f12fbfa6d200",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 90.0,
      "Id": "81a7a51aff0b462ab0295d1b64fcea29",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6fbe7ea75e054bec95ab95a792baa957",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenAxes@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,string,string,double,double",
      "Id": "088b89d25d914ad7b3fcece05185975f",
      "Inputs": [
        {
          "Id": "73bd6794068e418cb98942202586e525",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79647c5d64e14d228085d34bbfba67a8",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c70e785d67694f7ab41ea9e94807d0a6",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3aa92835871840f991ceede2bcc1ef5d",
          "Name": "axisFirst",
          "Description": "The first structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48895b281e0b4056b47b91bd69e6b8a3",
          "Name": "axisSecond",
          "Description": "The second structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f4a0e3625784c7d83a9285b1409d697",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d74e4f6580ca4baebd11a64acc5187d5",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83b27f37132d4a56a4d418fcb7df1efb",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b452b086df8f420fab5fbaef4fe3feed",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. N, M, the range, and the axes are specified by the user.\n\nFilter.ByAngleBetweenAxes (node: ConnectionNode, indexFirst: int, indexSecond: int, axisFirst: string, axisSecond: string, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "76b289957dbb49ffbf62bc8588d5acac",
      "Inputs": [
        {
          "Id": "c6a0b2a8c2714ca39e493c0539c4bee2",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e040668a9ff3495aad4f93e3627e3352",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a465565e92b4c08924d3986866c8a51",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c52cb3af62f4487ab03ca30d5038a083",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d0d892cf1e5404381f6544d9ddaa0ad",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n\"Body\";",
      "Id": "53c0be61116842f2911654f7c79b6bfd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1fad24137a3f47f2a1502229fea2cce6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7941f3c917c4d5db2634d63e0bb361f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.2WB.rvt",
      "InputValue": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.2WB.rvt",
      "NodeType": "ExtensionNode",
      "Id": "d4aa9022c65b43829a11aebf1c816525",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "983c76b632f045ae83f0201e7040ba7f",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Double side clip angle",
      "Id": "72fe204d3a844a1097b09048ecf1f7df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "affa3f451d6d4d86b8021daee4224c3c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "81761ea300ba405aad83f5b8fa2e9f5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "004601c42df64065b1aa7f9a1d0efda7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "8a92947807364762874c012b8432daa7",
      "Inputs": [
        {
          "Id": "9260557c56aa427a837ff8328d6f0bc0",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6828fd3147794b02bffb36da46bd75d5",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33cc9aeaaa6d4d459fbba81765dc3769",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "91c70c5dda0243e7b4e8f92de39246b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "15748548c9864e13a26442840c368853",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "3ce9b8b19a9b469f905db02517f9d17f",
      "Inputs": [
        {
          "Id": "cbdbaa73a2514f49b02c066fd978888e",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72579d76eeee4f98b51fbfccd1fc5f5f",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd680d5226f7433d9a08c7599ab6d099",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "71ca4d37985a4d5181639a072b928286",
      "Inputs": [
        {
          "Id": "8243cd424878419e9bb4c433d6461700",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77759a599d42424bb0cc01233c3cdcdc",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eae992000a544a4a9022c5a881e42f98",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "1fc1ba03bc174352898611929e5b7761",
      "Inputs": [
        {
          "Id": "e7a87c70fe5148c59793dad56cad1085",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4d2dcc387e94a8785ae8dd899ca4ac0",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "44f717fef6ef4c4aa2310468f1d83346",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "4e121fc4004d4dfeaed4d7cb1c40d24e",
      "Inputs": [
        {
          "Id": "7341144e178140008ce175a1cc90483d",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcc785c95b1543ccba55ef006648a317",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "16a4ae907f6040939207eb105a030e63",
      "Inputs": [
        {
          "Id": "3606df721d804995b5e8a33e3def1e73",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccc5cee4da124b1e9d673ebda520358c",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "369fdb7a392b46fb804ef530bfd503ca",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03a292bf41c44239b33ba72d52a4b125",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "eb888b92c99743fcbb24631dd387cf2f",
      "Inputs": [
        {
          "Id": "9ebb1f33c3e64f33b7f31910a7ddae8e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82bc2de00c73425fbeb2ffb5ea77dd60",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00f344350f954a179085a39b3cfb98c4",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32b6878c25f241ff9acb08141dc79cb6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "352392610eef4466af95cbb801d891d8",
      "Inputs": [
        {
          "Id": "d8bfbf10b7c8424b9fac8c848d018c12",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1399236c209846da966f0b526b1d246e",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da2a0eda810f434ebc0d145fb9bf6aa7",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85c3cea6f14c4645b97378af35150373",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "de9e20a0d72642f6948bb159f1bc7377",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb28ecf59dd544ba8096108c244c66ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "783f910f186b4dd1a7e05475f1ff7d88",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe85924cdb9341319b72a7a3dd5c948c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "b224c11463074a8f84a2b5448d51cacd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b67eb3a5c57044d08b88974c90e7ddc8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "abd49926613647e28ed35eef6d8e5166",
      "Inputs": [
        {
          "Id": "187f3e7089284aa69d224d4bfad1d2e3",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9514d03072542c6ac4d84b29213d432",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09cadf62a3ad497fa250c0445722c856",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "616972644e294dddab25f53c2d889cd9",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f0d13bb5ef2d47a9b119a24296180e40",
      "Inputs": [
        {
          "Id": "faf19b56ce374c7e8706123140d4e69e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee5c79be0a6845b5991c45ca41bcbe5e",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15d55b6625c34e53ae3d163a72bab25d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbedae5d7e814564b28044712b8d21c3",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "8a9e83016d1a47379a7215ac64a279a4",
      "Inputs": [
        {
          "Id": "dd292dda75c24b01a212ebcd27758da0",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b8ef2042e45400582a83d1e6f03c6d5",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa4d70959f494cfdade0ec4670e60e76",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d68e6933e3254a2eb3c5ab0ce3ad11fe",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "e20d82ca66d348fc946d9333a6ac10eb",
      "Inputs": [
        {
          "Id": "b119f22fc08d4febbd2871349b16a6e1",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e39216c5df64fcf850dffb305e46755",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac2a6c31013544ca8b3b0c59bf65b363",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "262a66bd577648cab4d48726f4b3b690",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "a7734101dcd84f5ba62334e0edc03b7d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a16097bc2654eeebae443b5ed0ccbee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e3b26e6a784047d6aff33fd85a7d6192",
      "Inputs": [
        {
          "Id": "4e808942375249818afb0d8f72634ae6",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f86ae3748007431087e0a2c775a98862",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab8671ba22c241598a4f14670b7c8b00",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fde792d3ad2d4e7baa3d8bfa617cfca1",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "1fe67851ffbb4a079795bff6a90ed319",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "acc5268d43f4482abfda6705e7a3daa7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "e87d7cc83f3344b1b6f79db6de5c1ff2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3d3dd63e27248fe9289704ea69186e1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "4776ded489f3423ca4ab3b2e47c916af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee632e59f2224cb6a86174ec8df0cbdc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "e2c179b37dd048cf8e145790b98e093c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f046b0d7c08e40fda23047c7d9a6e9aa",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "7fb8e8e7797e4c8ea58405566c689f1b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e892284b20524d05ac2b5a1fdf6abcac",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, from {applicable_number} applicable",
      "Id": "b93a44df7d78450eb26ec38df963e5ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5ec5c3d5e7c347f3ae4964785f839f9c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "07d5b41cb10f4d1287a6b4f949a80f2f",
      "Inputs": [
        {
          "Id": "d8aeaadb26624cd7bd0ffbe2ac707da5",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e1f0202d36a4fb8a34990f78511a637",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "575c5e453e48491ca4849b3b94824018",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "816894bc3aae4a7bb0d9c1a8c1539e19",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6773675f29024074b6c7dd0276324186",
      "Inputs": [
        {
          "Id": "e2fc6d3d80c34171a0c8694f20956430",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fbf7723635244339684e4989501af0d",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "fa9e126e6b604ec0868b4f83cec7ca36",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e0fba2e937d4a08bf8f7e7f97090cc9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "7307549c111a48bb933541f1410524d2",
      "Inputs": [
        {
          "Id": "941d1b369d82419e945c713c0989c2c9",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caa246d10e054cf9a3fc049da93b5817",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aea129e877d84944b5bc93add3f36aa5",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "adcd5aca8efc43cb8f198c5049189c01",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f620fb1fe2041d88167996f7f420a98",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c2e01f29f1f441abbf4883ae6efcc2be",
      "Inputs": [
        {
          "Id": "6bf73b0241bf41b59e70282678d71128",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f72c5cf556349e19af952862d645344",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41342d6221a34c9289c040872ba58e8f",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f442c2e083f24b9784c828e62564cf68",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9eac2467414c416e949276361d8073c1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b39ac2ba3cad4761a51afe5992f2c0f5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f13acedcaa93452eaa5511159e827cec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "94b5c9ddcc3b453aa71aa87cba3d8dea",
      "Inputs": [
        {
          "Id": "1a4a00b24589460cadffa49954a4c0df",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf8eea0542404bdfa0279287b2de1eb2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed60dabd9980412e942723925b431333",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0ca716511615489a94498944fa33025f",
      "Inputs": [
        {
          "Id": "b4ba48d41b084aefaef22ec1656d92f8",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10f53b4fd6ea473ba16bb4a1f67a392a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "56dc77dc760b4654941114614e1a1a9e",
      "Inputs": [
        {
          "Id": "9420a650e03b4c338e300b2cfa07531f",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6443aa3d38c64403a94655133b74967c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "fb52f919084343e78739ebcb2f929bdb",
      "Inputs": [
        {
          "Id": "873f0d411c3e4fcba23e4a60705fbdf8",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09c733e99e24497a9d5d035ab95cd913",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff4f1d049fff4bb184afe92a43d4c058",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "874243ae20314320a4be3a056459108a",
      "Inputs": [
        {
          "Id": "e91bdee91703429b9988ae1a258a1a6b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "792176cbeae74359a57aa7c45373cfe8",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b65bf3fdd104773a7077d4e94ac26b5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7603807ecae2403b919bcea0308d5e61",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "b8702b8cbbb3479aa85880aa02d60c9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d991fb07fef486bbc333631cdc94b1f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "4c3e5449548c43d5969f569cfbfdef61",
      "Inputs": [
        {
          "Id": "f3a45e5f16c74008962aa0e4229c5d04",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "558f9279578b4f76898e86fb0da740ed",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "75f2eed080404f728ce905cdd642fa03",
      "Inputs": [
        {
          "Id": "6dd92879669c4d3eb0200a895493b9d7",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "371a45db50b8415ba5561374ec8bc5d4",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca30ff53d84c46778e2ea142e9ee7a8e",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d50dda3cd5034b60b54c75e08563f485",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f335c2c14bed4874b36a15cdbdcae725",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "e3bbf2e4ee93414fa45f87529c7a31af",
      "Inputs": [
        {
          "Id": "a860925db0c242eabac911f5ce7e7ade",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a09788801aa9465fa88268d7a23c4cc7",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1680185e68c54ebe9b2794d69b547710",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d31210d478434c8d928a8fbf0a696c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "df79766745b34d1e9cd497f983e0cbf0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "daae3d5ef27c42e28299f9b22c6d48ac",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "93b5b4f65e7743f09b97eaea66310a4f",
      "Inputs": [
        {
          "Id": "d88d2c7964bb4855b1678adffe1a4cbc",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32760aa9a36c486aa0e34ba9f31b3c85",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af3f86d9fafb41d2ba4f1340183924d3",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "70db52313bda4962a79fd557505303fd",
      "Inputs": [
        {
          "Id": "02073fc4bc6c440e9ee7a88342953fb2",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac2ed70c911e4a888969fbcdec17e938",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenBeams@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,double,double",
      "Id": "ffea298b559b45b5b891d3711b92f444",
      "Inputs": [
        {
          "Id": "c97e3ff4611145f99f4b7716da748ee1",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e54d1d7865f84dc99aafe65cbe94eb64",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "584fc104ba684e1a90c534eb518f53e3",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9746973406c04e65a20d4a8fda2c1bc9",
          "Name": "rangeStart",
          "Description": "A value between 0 and 180 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24adccf95a284f9284a5aef8ad889879",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 180 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7646fba6fba744b68b34f8ebf1cee743",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0313c26628a6412aa6c9b6202ceae3ba",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. This is similar to ByAngleBetweenAxes except it only measures the angle using the X axis, and for the case where the structural elements meet end to end the angle can be between 0-180 degrees instead of 0-90 degrees.\n\nFilter.ByAngleBetweenBeams (node: ConnectionNode, indexFirst: int, indexSecond: int, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "cd651e1078eb4ee5a0e33305359bfcb8",
      "Inputs": [
        {
          "Id": "03afa7254a6c4b8f8b079fcb18062a03",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "185ddf524db74900a471459d72e2a9fe",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81277a92308347dc89c7e5260d81812a",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa19000a95e34e43ad014f4209033961",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44832ae379dd4a34823eecb92dc0dd11",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95e30aa2d08f4728a93cc9e1437e3e20",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "dcba63f083c14e14b15f20ddd0bb7062",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ef2a7cbc61e24a7a99f054a60f7d0dc2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;\n2;\n180-x;\n180;",
      "Id": "7364303920dc48808abe3290a081ca78",
      "Inputs": [
        {
          "Id": "f219b2c60ccc4af08e25644c22640f00",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c10a4fe012140d4a126073d7d2b3952",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e79dcf4abea745808142d7be3c4b8b30",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d33441890fe047da9eb0bd3ad7bc8f69",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e559670cd2054a3f82c7d888b34d8034",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "00bcb51bd99c4af2a9f3d3ac7523e72b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f462089322bf45a0bcf99caac737bb83",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "c93d5239aa174115ae99a19b9dab6faa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "77d3328759e54764b1cd2a243d4c125b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "75b0827f8c064a85a6e89f61cd55ebc5",
      "Inputs": [
        {
          "Id": "cbd1de1b62364a80bee873b7433af374",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ac0be22523941df83619fb2b8b48297",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7e36ccf607b43c1872d393cdeb5c67c",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf3567d5c1fb4c6c8872caecf1c75857",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "efe5d40a4adf47e6b1a00e3c1f39036f",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "f2c92006d1a54c3f8ac76874a6e9aad2",
      "Inputs": [
        {
          "Id": "9f265333b7184a00b97c970afc67838f",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7647d79ca1c743e19b0235fdaea8d07f",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cc0cf5f0e0cb4dc68b11c0907aeadf4b",
      "Inputs": [
        {
          "Id": "49aaf744f77c4dab96c4f60a47bd963e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b92e52322894e87a156fc3e99703180",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "554f328d11b946f09c2e8592c62a388b",
      "Inputs": [
        {
          "Id": "10f308fe2dd844a283db83bac79f9ac3",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9dbdbd1f440847d6a47041081d2dd196",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bff4893b39624d8ab2ea70bab22e83d0",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "a39084fe91754c6f8f1ed53a30c99ada",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d0fac5b99f048a4b3d4e7bb98244cfa",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "87182a0c8d7c4eaba684289656372dc8",
      "Inputs": [
        {
          "Id": "9de21be3b880435f8de95fbba6b5f2d2",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "684d903c6a754d4a98dd57d50facb55c",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72a4a3aea0c94b12aecf7162db16c52e",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23f28c5997b9491b86b2fef327c285cb",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c8921300d1ed445a88ebd659e9779b28",
      "Inputs": [
        {
          "Id": "c1537b391ef54984913390ad00174106",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "010d365bf6b64477bf027afe4993a57e",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "481da6ac9adf440cb4db8a6cfbb86ff4",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "7d05c66880c545328c033da4f49ab007",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "92ce7033f62d4fd997ba14d870acecae",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "92265cc6662f447e8c6a9c75d7d10c52",
      "Inputs": [
        {
          "Id": "6e8785eab66f4da981e872f3692bc6dc",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a128f3950e94289a3bf861d979f41ee",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84b6992bf02b4f81873ca085398d8368",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14c0d326b991438d8a6a8dae851f9c1c",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb68bd9a63f344b6b287e1bdbdc63e57",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e890ef0eb3294396b4d340a75e6609be",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "fd40760fdd8a4066b9f8d4fe84d4a322",
      "Inputs": [
        {
          "Id": "332ebc443c494938b934548afbe786c9",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52b7d2e6afb04c7b9297a23beb9a146c",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "29d26e7eae6f44c6b26cd55882a3946d",
      "Inputs": [
        {
          "Id": "7f443056aaf74388a3a34c9b0c82bd67",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c20ec963a9540f28a77959990b79abe",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "e22d012467e94a4a8460e3b4c01351c4",
      "Inputs": [
        {
          "Id": "856480cad1554a769c3318af7b7916dc",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f5562d5cb9a4f819ad9b33a0b34b6db",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "6e1a1030c10d4717838624da172fa798",
      "Inputs": [
        {
          "Id": "4b0e5f93736548669c6d3d4a82bd2629",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04fa4b9b5b374a58969c72bfcb9589c4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "5b14c3009c264425988d15ccdfd2e890",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7cf90bffd6f44ed7bfe8690ee57fdd1f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "981cd2e767524e61abec378a0bbc00d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c8c617017f5c4a208462acbc49444843",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "81a8e9d2ec554a0085f3b6cf873ec66b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2a7947fa85848469144ce5cd964af17",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "e510101d953644caa6606142d2747c37",
      "Inputs": [
        {
          "Id": "73b3f5a7cae445c493555d3c1a52c253",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "01aed4b57af6447ab9fa7f60cba0a307",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2342c798af5a46fd8187c564d4e9853f",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10aedfed252041e2a6a260833a0ba22c",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "4eb6bdca6f2b48f4bab7e03ee44fa3b9",
      "Inputs": [
        {
          "Id": "33abf7b4bb4a44d89a56b8587ae3b882",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ce2adbabdf645e182a2e77a0accebd1",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51960e9af4354f43b5366fde1a512848",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6d6fd0444ee47e0b7860722cd4189f4",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c821d4a378424adf8b56dee556a38e75",
      "Inputs": [
        {
          "Id": "d620603bf4f3418c8886ac2b29f4eaa5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81d9da09b1674e9d96fc6ad5d9044d01",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37b93cc9eb544f5fa51a8c4712419c71",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "7aa59d99ab194c129540cf614bbda9bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "70a31cc91bb2483fb7015da392c1d18f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "2806c1c4887149a2aa7623e01daaa7c5",
      "Inputs": [
        {
          "Id": "39cc940ab6384147967a43fc3cbffeef",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9aa1a3b51c8846bc833a6fb98666b5ef",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbdb98d1b0f143f4b96d4e5ef42f1fe2",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "883b6573918f4346894c854dffa7bd38",
      "Inputs": [
        {
          "Id": "425e39aa237a4efa8f1debea4740d957",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7b52c6f158184efaa81dce9188998c77",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c13f41d57c144e0956495ac1e57d629",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "b8ce8df731f34551b200209a3f898743",
      "Inputs": [
        {
          "Id": "eb48e93de24e491996bd251be7dce2bc",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c86589c547d24dadbfc0afcf1f46222c",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d94b2bc6053944fb87e7ef442cc3e7b7",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "0db3468738ab4e0e90455eb8e3014f2c",
      "Inputs": [
        {
          "Id": "6edd29ca5a0940a095337491f5f72794",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "544d6f5dfdda4c4fa76bd48d03ac4fb0",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3d356c4a6404e93be08f2f0e4b7abca",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "1e553f398fad497ba539804b19b3efd2",
      "Inputs": [
        {
          "Id": "89cf767b617b444ab624c84d31c0d3c1",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1e5f4c05b17d438891a0f000af1dc911",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fae8997ba0448a4878c305d88b2b320",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "66892c07d79e4290a4e133c160703107",
      "Inputs": [
        {
          "Id": "92607d9b639c4765b68b190febb2a264",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "84ded21f882b4bca83f09acc3581df5d",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e40ca48dc89c41baae750d059eadbb22",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "f44df23aef7247c1b1f813f295f2a21c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f10a554332dd4618ad10559ad1290145",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "5eadbfe128984eb6bca97006260bc316",
      "Inputs": [
        {
          "Id": "61f89ccffb884899bb25b8a84cd76029",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1c055b525ff43639153b92fdc25077f",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a3fd6d18559498ebc89aa072253e8ad",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fe1147e14ca45cea1dddae783e3786b",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "05fb34b1b97940c3872ec4e791642070",
      "Inputs": [
        {
          "Id": "9e50d1395ece4d70bb66b9a0c8ac77ee",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc30c3fa4a0c4da39fa51cc3f690cf29",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d3edc932faa4f1bac270960f0fff4c7",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51cecf78bd104d20be1251a10bdb58a5",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "aadde6d2a0c345d0902a08e805e82268",
      "Inputs": [
        {
          "Id": "d9a6a83a59ce4d30baf210e0102775e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4d3039cc4124452abb3c0f620a7f601",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "233743e91d93413bad27ac5e603ba319",
      "Inputs": [
        {
          "Id": "a4600f5dd6b1469c82f44ae82ced6f54",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78b68623245449bb9c0b59b5b0791076",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a75ae0a946df402fae82276a772403f3",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "1e04519f45654ad3b17af59f841c7abf",
      "Inputs": [
        {
          "Id": "6c75aac64c9840448d4f6c8e3508b423",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d55833c704694257a0e22d792186d729",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38fd5b81c80644ab8f76c5ea521ece57",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "c7e670531f0740d491c226c4bcacd0b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "485266c330ef4c318c367e9aacd3d805",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "274b13a84a0a422ebd5c1264c00fb1b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b6a3fd122a3a4ae5859d9305efd641a3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "38622acd940042d987aec0cf72ab8331",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4ce33425a1f44deba16e275119109ab",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "2026761989b9439eb5001e9a250df68c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c96e25e1efa45919e1964fbda0c6015",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "39baf1a9b47d4490971f463f622f5ca4",
      "Inputs": [
        {
          "Id": "4ea6c1c1275d4035837a910cbb40a2ab",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4cf570a90924142b659d500b0f450a0",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f87ffbc147214c56844b8355b782b4c0",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd71af2fe3644b0d9c1a62b8e166d122",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d099472c8e4241d0871c83979e67f4fc",
      "Inputs": [
        {
          "Id": "d3b052e1bd8b4d74b7c8c10b446105ad",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1808a240406548a6a5e8ead6993866c9",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62820fc6020545549c8a2c71cd84e4d3",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4639e10fc1354eeca8d33bab96d3432d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6086995fc8be48dea41d373e123f8bb3",
      "Inputs": [
        {
          "Id": "ecefeb89430443499837bb56399bb0af",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5b56d8d9df84ba282a1117172d57a0a",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4a8d235b17c4cdeb82afe2ee999c2d7",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e24856a330848e482ef27f017d98c49",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "3846d6bfb7e548fa85f45e704c1d33ad",
      "Inputs": [
        {
          "Id": "d010e73a28b842e3a52c7fd7cebc4585",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03463e4b17674d26b367d948f0c426dd",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e60186c964fe48d98ff047f40f97d484",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "9ae5e83c03cc4f3486a3be5da126ae93",
      "Inputs": [
        {
          "Id": "3dd5f83221d84d10917b4a92797a9291",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "150ed9a532b447a69ae4ddb5a0558a71",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9cdbf83042634adc896b25c35e59920c",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "c99cd7f99eb2421e91359d58833d232a",
      "Inputs": [
        {
          "Id": "0f51a341e9344767a30bcee0faa5c018",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fc83dab8cea42e186137fc796c3a1e9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7790b2a64b1417188950d5172666ccc",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "73da70387991409eb4bcf8bd17ec4f4e",
      "Inputs": [
        {
          "Id": "c6db248d209a418db2169a1516b30ab6",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ded9476b1ee45329b1f8786ef77d174",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8ece1d4d315348ada064fd7a62c9483a",
      "Inputs": [
        {
          "Id": "3775d880e9d34df3b6c84e5a4ba10590",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a07a4dc3567421fa5711b127abca18b",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "c6a0b2a8c2714ca39e493c0539c4bee2",
      "Id": "93e86e32f1bd4186bad28b47c53b26d2",
      "IsHidden": "False"
    },
    {
      "Start": "0c73cb8d7048409194a8e265792538f7",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "6003d41aa7fe48f3a348d52385d16fb2",
      "IsHidden": "False"
    },
    {
      "Start": "685769566ace4985a7b8d25dd4a91f45",
      "End": "6ae7be74142a47fba54135b055a34926",
      "Id": "3b0c384d6a3946f38b2db725ea0f9d3c",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "f96b73bb21c445a19f87f5609e3e2f67",
      "Id": "70fd202a19ff4348933af5eee5ff6366",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "00992a65f91e4c27ad1f48c9992fbffc",
      "Id": "6ba4f1548de545e79356b840cd5ff72a",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "03afa7254a6c4b8f8b079fcb18062a03",
      "Id": "eb5b9c19d1a04eb58087595f69bd2fb2",
      "IsHidden": "False"
    },
    {
      "Start": "bbf13e65a8f24bc2b8891e0bb2e68721",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c052f00c89dc4165bbd99e33b7dbfb30",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "873f0d411c3e4fcba23e4a60705fbdf8",
      "Id": "2b2f5d2127af4175ab4526d30de555da",
      "IsHidden": "False"
    },
    {
      "Start": "d6b717b7154d46b1b2d7b3c8ac5a8e9e",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "02e80be3073444ae9fc4e61ed8c88a25",
      "IsHidden": "False"
    },
    {
      "Start": "d6b717b7154d46b1b2d7b3c8ac5a8e9e",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "d8d733f0b7164ba3af9414b175d52e62",
      "IsHidden": "False"
    },
    {
      "Start": "d6b717b7154d46b1b2d7b3c8ac5a8e9e",
      "End": "1a128f3950e94289a3bf861d979f41ee",
      "Id": "fe4e36e08a7a4f7c91941c95546a4b4e",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "c1537b391ef54984913390ad00174106",
      "Id": "aa06c75d06a146e3a24f29e2a464c034",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "4829426565a8404888a989bc69af587b",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "17061815ca91449883befa22d7ef3c73",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "6bf73b0241bf41b59e70282678d71128",
      "Id": "02b157f4081f4c38a9b300e57e4540af",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "0f51a341e9344767a30bcee0faa5c018",
      "Id": "071e343d8f974d7aaa0efd2142906ebd",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "da2a0eda810f434ebc0d145fb9bf6aa7",
      "Id": "898139b3cbb84ab792fe59c821ddea9e",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "00f344350f954a179085a39b3cfb98c4",
      "Id": "847e020970424143a3d3a0e91fe34007",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "369fdb7a392b46fb804ef530bfd503ca",
      "Id": "ca6cbc6660d44fe2af0d8ffb69abf9f0",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "e7a87c70fe5148c59793dad56cad1085",
      "Id": "4182e559623b4aff858b0fdabd3c3e15",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "15d55b6625c34e53ae3d163a72bab25d",
      "Id": "c3908f31583e45008a85eeb338a8b854",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "d8aeaadb26624cd7bd0ffbe2ac707da5",
      "Id": "33b8820781244f2cbe2d3ee0f7eb6f66",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "c4d2dcc387e94a8785ae8dd899ca4ac0",
      "Id": "07f3d16e7bbd4c069bd119d18fd0114a",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "09cadf62a3ad497fa250c0445722c856",
      "Id": "713fbd268eaa4504a99d7243b4f0228c",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "e2fc6d3d80c34171a0c8694f20956430",
      "Id": "17b082b5db5c4ffa8cc3f9898ff4ae07",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "1b688ef88f2849cea8586b891ae4fbce",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "aa4d70959f494cfdade0ec4670e60e76",
      "Id": "905cd00264394cb9870e7e91d60ab025",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "42b5e54d628b45e4bb1d812a1bdd3400",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "f3a45e5f16c74008962aa0e4229c5d04",
      "Id": "30d303cc4898409dab9a7a28b829e8f2",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "a860925db0c242eabac911f5ce7e7ade",
      "Id": "96ec6bdf156845db9bb2ccb179acd326",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "9f265333b7184a00b97c970afc67838f",
      "Id": "3cd33eb3a24a41ee8a5cf42bea24cba1",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "3775d880e9d34df3b6c84e5a4ba10590",
      "Id": "f0e7afe539db4a6f9519b4366ea12e1a",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "2edc041e63044911ac298aa3b6e87f56",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "716dbdfff7b34f21a2d70e7df269914b",
      "IsHidden": "False"
    },
    {
      "Start": "cf862167b084446e81a252c3ae814998",
      "End": "79647c5d64e14d228085d34bbfba67a8",
      "Id": "2bb98103e2a2469c85b8d857631638dd",
      "IsHidden": "False"
    },
    {
      "Start": "593e93fa50154f23928b095a7335af3a",
      "End": "c70e785d67694f7ab41ea9e94807d0a6",
      "Id": "fe01c3ebfc37461393a9aa85b7f994f3",
      "IsHidden": "False"
    },
    {
      "Start": "c4b4ad15403348828e6e635c570ad9c2",
      "End": "3aa92835871840f991ceede2bcc1ef5d",
      "Id": "223f866f37474deb9407e98afb50ba74",
      "IsHidden": "False"
    },
    {
      "Start": "c4b4ad15403348828e6e635c570ad9c2",
      "End": "48895b281e0b4056b47b91bd69e6b8a3",
      "Id": "35ffd564f53d401eb4f891502e70cf84",
      "IsHidden": "False"
    },
    {
      "Start": "956ce6b2f3a44fd1add03d79f6a757e5",
      "End": "9260557c56aa427a837ff8328d6f0bc0",
      "Id": "38c3bb0d5beb407fa6554487dc0f5bad",
      "IsHidden": "False"
    },
    {
      "Start": "2ad960e167924ca7891c3170a99ca6d5",
      "End": "cbd1de1b62364a80bee873b7433af374",
      "Id": "95bc0d689b2d4962931925ef6916ec31",
      "IsHidden": "False"
    },
    {
      "Start": "ff2e2e7cde194a7989a23af7aa25dd95",
      "End": "9666db81c3444e0da1ede81e58862eae",
      "Id": "c3eb6ece86d84a4db669cde35e5dba7e",
      "IsHidden": "False"
    },
    {
      "Start": "f66ee711f33948519bc9af2deeda5732",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "3ee81dfc65fb4aacae1331737a8f5827",
      "IsHidden": "False"
    },
    {
      "Start": "f66ee711f33948519bc9af2deeda5732",
      "End": "81277a92308347dc89c7e5260d81812a",
      "Id": "38fd388bb042486d8cd077808519c3b4",
      "IsHidden": "False"
    },
    {
      "Start": "28e0124a23fe4c5bbd0611ed2b278a25",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "9f138766ae194e95b6817db66cc608c6",
      "IsHidden": "False"
    },
    {
      "Start": "28e0124a23fe4c5bbd0611ed2b278a25",
      "End": "aa19000a95e34e43ad014f4209033961",
      "Id": "ff85565fe2d94445a9fca6b38d350079",
      "IsHidden": "False"
    },
    {
      "Start": "b2d016498d6e455d9465f12fbfa6d200",
      "End": "6f4a0e3625784c7d83a9285b1409d697",
      "Id": "faee602ac58c48b6b126b2532a536142",
      "IsHidden": "False"
    },
    {
      "Start": "6fbe7ea75e054bec95ab95a792baa957",
      "End": "d74e4f6580ca4baebd11a64acc5187d5",
      "Id": "12e083a93f934cb582d30e0b5a7c17ee",
      "IsHidden": "False"
    },
    {
      "Start": "83b27f37132d4a56a4d418fcb7df1efb",
      "End": "c97e3ff4611145f99f4b7716da748ee1",
      "Id": "11d1514f74024903a00dabbf23e6b73a",
      "IsHidden": "False"
    },
    {
      "Start": "c52cb3af62f4487ab03ca30d5038a083",
      "End": "4795a0d54f9048c29485d60bcc31aed7",
      "Id": "4197d3b963924fd4b9b1f38ea5883956",
      "IsHidden": "False"
    },
    {
      "Start": "1fad24137a3f47f2a1502229fea2cce6",
      "End": "e040668a9ff3495aad4f93e3627e3352",
      "Id": "1bd48e9759d744ea84fa3f8073cad97e",
      "IsHidden": "False"
    },
    {
      "Start": "d7941f3c917c4d5db2634d63e0bb361f",
      "End": "1a465565e92b4c08924d3986866c8a51",
      "Id": "eb34447721c849b6a63adb260fe36205",
      "IsHidden": "False"
    },
    {
      "Start": "983c76b632f045ae83f0201e7040ba7f",
      "End": "77759a599d42424bb0cc01233c3cdcdc",
      "Id": "9f8f0f09828a446db3ed30c9499afa23",
      "IsHidden": "False"
    },
    {
      "Start": "affa3f451d6d4d86b8021daee4224c3c",
      "End": "10f308fe2dd844a283db83bac79f9ac3",
      "Id": "b430c87c3c2c4bceaf25712e8730de46",
      "IsHidden": "False"
    },
    {
      "Start": "004601c42df64065b1aa7f9a1d0efda7",
      "End": "72579d76eeee4f98b51fbfccd1fc5f5f",
      "Id": "95ba0d45ca9640c7b4726e7003a1df6f",
      "IsHidden": "False"
    },
    {
      "Start": "33cc9aeaaa6d4d459fbba81765dc3769",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "64761318efe64cd08aef40d91751a856",
      "IsHidden": "False"
    },
    {
      "Start": "33cc9aeaaa6d4d459fbba81765dc3769",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "ffe3d8a3f8854e8ab5cc1c153431c2bc",
      "IsHidden": "False"
    },
    {
      "Start": "15748548c9864e13a26442840c368853",
      "End": "6828fd3147794b02bffb36da46bd75d5",
      "Id": "139d0137d7dd456dbc23cb6ecb9a7020",
      "IsHidden": "False"
    },
    {
      "Start": "bd680d5226f7433d9a08c7599ab6d099",
      "End": "12abfb80ffa74a4c80e36ca5b6059b8c",
      "Id": "4c41fb4cef2b4b278d87e70f3d34ead9",
      "IsHidden": "False"
    },
    {
      "Start": "eae992000a544a4a9022c5a881e42f98",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "52a5ef4200754895a9253f3179514a83",
      "IsHidden": "False"
    },
    {
      "Start": "44f717fef6ef4c4aa2310468f1d83346",
      "End": "7341144e178140008ce175a1cc90483d",
      "Id": "ec2ba4ed744b462785bc8b2bf9e97d96",
      "IsHidden": "False"
    },
    {
      "Start": "dcc785c95b1543ccba55ef006648a317",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "560ca6e02da14801b9f91715bac4d864",
      "IsHidden": "False"
    },
    {
      "Start": "03a292bf41c44239b33ba72d52a4b125",
      "End": "e91bdee91703429b9988ae1a258a1a6b",
      "Id": "7e1e4fbaa2494eb6b968da3337eec19d",
      "IsHidden": "False"
    },
    {
      "Start": "32b6878c25f241ff9acb08141dc79cb6",
      "End": "d8bfbf10b7c8424b9fac8c848d018c12",
      "Id": "96330d94c73b4129bb7d1eaaaf243112",
      "IsHidden": "False"
    },
    {
      "Start": "85c3cea6f14c4645b97378af35150373",
      "End": "575c5e453e48491ca4849b3b94824018",
      "Id": "52c17ee2e8094d508ae9151cb8d88d40",
      "IsHidden": "False"
    },
    {
      "Start": "bb28ecf59dd544ba8096108c244c66ed",
      "End": "ccc5cee4da124b1e9d673ebda520358c",
      "Id": "0b5a964125f6478ea0ddbd82e875c68a",
      "IsHidden": "False"
    },
    {
      "Start": "fe85924cdb9341319b72a7a3dd5c948c",
      "End": "82bc2de00c73425fbeb2ffb5ea77dd60",
      "Id": "7c419594735242cea11cbb29eaa7cdcb",
      "IsHidden": "False"
    },
    {
      "Start": "b67eb3a5c57044d08b88974c90e7ddc8",
      "End": "1399236c209846da966f0b526b1d246e",
      "Id": "6919a4dfd4544a68a665ec8a797e52df",
      "IsHidden": "False"
    },
    {
      "Start": "616972644e294dddab25f53c2d889cd9",
      "End": "ab8671ba22c241598a4f14670b7c8b00",
      "Id": "36005e9b5566469faebcc58d60277f05",
      "IsHidden": "False"
    },
    {
      "Start": "cbedae5d7e814564b28044712b8d21c3",
      "End": "dd292dda75c24b01a212ebcd27758da0",
      "Id": "0565d3842a6b4877a5597b7fb4c296ba",
      "IsHidden": "False"
    },
    {
      "Start": "d68e6933e3254a2eb3c5ab0ce3ad11fe",
      "End": "187f3e7089284aa69d224d4bfad1d2e3",
      "Id": "c428460df8ae4152909526dc3875cc6c",
      "IsHidden": "False"
    },
    {
      "Start": "262a66bd577648cab4d48726f4b3b690",
      "End": "4e808942375249818afb0d8f72634ae6",
      "Id": "72d7674c9a8f4d71816ec92a9995a84a",
      "IsHidden": "False"
    },
    {
      "Start": "6a16097bc2654eeebae443b5ed0ccbee",
      "End": "b119f22fc08d4febbd2871349b16a6e1",
      "Id": "b4e0b1f05fb24a76ad6abe4776dd47b8",
      "IsHidden": "False"
    },
    {
      "Start": "fde792d3ad2d4e7baa3d8bfa617cfca1",
      "End": "684d903c6a754d4a98dd57d50facb55c",
      "Id": "b6671617d7344046b0e5a6a029bd9df0",
      "IsHidden": "False"
    },
    {
      "Start": "acc5268d43f4482abfda6705e7a3daa7",
      "End": "f86ae3748007431087e0a2c775a98862",
      "Id": "fc87f53a3a404055b39ca6f70c231646",
      "IsHidden": "False"
    },
    {
      "Start": "f3d3dd63e27248fe9289704ea69186e1",
      "End": "3606df721d804995b5e8a33e3def1e73",
      "Id": "4a1af41f75ed446691ea7ec5a02dd774",
      "IsHidden": "False"
    },
    {
      "Start": "ee632e59f2224cb6a86174ec8df0cbdc",
      "End": "ee5c79be0a6845b5991c45ca41bcbe5e",
      "Id": "a209dc5d47c34a61a78de6dec39d1984",
      "IsHidden": "False"
    },
    {
      "Start": "f046b0d7c08e40fda23047c7d9a6e9aa",
      "End": "f9514d03072542c6ac4d84b29213d432",
      "Id": "80fe898665ce442485fb658410a00f1a",
      "IsHidden": "False"
    },
    {
      "Start": "e892284b20524d05ac2b5a1fdf6abcac",
      "End": "1b8ef2042e45400582a83d1e6f03c6d5",
      "Id": "6abef4851e1f493a839c145330e8b739",
      "IsHidden": "False"
    },
    {
      "Start": "5ec5c3d5e7c347f3ae4964785f839f9c",
      "End": "faf19b56ce374c7e8706123140d4e69e",
      "Id": "a702adb1e34247a592ab172f81d061e3",
      "IsHidden": "False"
    },
    {
      "Start": "816894bc3aae4a7bb0d9c1a8c1539e19",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "88fa090d8fb2483db87b85bc2c45e478",
      "IsHidden": "False"
    },
    {
      "Start": "6fbf7723635244339684e4989501af0d",
      "End": "941d1b369d82419e945c713c0989c2c9",
      "Id": "cf46e982ee824f6da80e52cb48bbd1e0",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "caa246d10e054cf9a3fc049da93b5817",
      "Id": "79174663dc5643c88e8132ef3dac978a",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "03463e4b17674d26b367d948f0c426dd",
      "Id": "793da7c1d0ad4a35851a43623c4b0003",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "150ed9a532b447a69ae4ddb5a0558a71",
      "Id": "9512fee576ab4db986775700fec00f3d",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "4fc83dab8cea42e186137fc796c3a1e9",
      "Id": "d923505363e349ec812e77fd6d14825a",
      "IsHidden": "False"
    },
    {
      "Start": "aea129e877d84944b5bc93add3f36aa5",
      "End": "9de21be3b880435f8de95fbba6b5f2d2",
      "Id": "36cc5324544d4f049a666be4de193e63",
      "IsHidden": "False"
    },
    {
      "Start": "7f620fb1fe2041d88167996f7f420a98",
      "End": "72a4a3aea0c94b12aecf7162db16c52e",
      "Id": "c84792b913b1403cb5abd17017b22d19",
      "IsHidden": "False"
    },
    {
      "Start": "41342d6221a34c9289c040872ba58e8f",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "b7d8e9bb516344aaa45078e17f8d55b6",
      "IsHidden": "False"
    },
    {
      "Start": "9eac2467414c416e949276361d8073c1",
      "End": "9f72c5cf556349e19af952862d645344",
      "Id": "141022cec3e1487596e28e4387868aea",
      "IsHidden": "False"
    },
    {
      "Start": "f13acedcaa93452eaa5511159e827cec",
      "End": "09c733e99e24497a9d5d035ab95cd913",
      "Id": "f2548bc24cd24012a1bce6f5abb096c3",
      "IsHidden": "False"
    },
    {
      "Start": "ed60dabd9980412e942723925b431333",
      "End": "b4ba48d41b084aefaef22ec1656d92f8",
      "Id": "c0e857b4894d4220bb389c1af3f464fb",
      "IsHidden": "False"
    },
    {
      "Start": "10f53b4fd6ea473ba16bb4a1f67a392a",
      "End": "9420a650e03b4c338e300b2cfa07531f",
      "Id": "661a56c3b0144a349ff3f15217053741",
      "IsHidden": "False"
    },
    {
      "Start": "6443aa3d38c64403a94655133b74967c",
      "End": "1b65bf3fdd104773a7077d4e94ac26b5",
      "Id": "22bc815fe911425aae27a813563cae38",
      "IsHidden": "False"
    },
    {
      "Start": "ff4f1d049fff4bb184afe92a43d4c058",
      "End": "1a4a00b24589460cadffa49954a4c0df",
      "Id": "73f0340abbbb4e10b3ec930860a08726",
      "IsHidden": "False"
    },
    {
      "Start": "7603807ecae2403b919bcea0308d5e61",
      "End": "9ebb1f33c3e64f33b7f31910a7ddae8e",
      "Id": "da0e920bea3146bfa138439e93271b3e",
      "IsHidden": "False"
    },
    {
      "Start": "8d991fb07fef486bbc333631cdc94b1f",
      "End": "792176cbeae74359a57aa7c45373cfe8",
      "Id": "c368e90960e54d5695c1b4f2083b8956",
      "IsHidden": "False"
    },
    {
      "Start": "558f9279578b4f76898e86fb0da740ed",
      "End": "6dd92879669c4d3eb0200a895493b9d7",
      "Id": "8bcef543870f420188108fdb39acfb46",
      "IsHidden": "False"
    },
    {
      "Start": "d50dda3cd5034b60b54c75e08563f485",
      "End": "02073fc4bc6c440e9ee7a88342953fb2",
      "Id": "7950d204d4f1415187346fea4e181f32",
      "IsHidden": "False"
    },
    {
      "Start": "f335c2c14bed4874b36a15cdbdcae725",
      "End": "d88d2c7964bb4855b1678adffe1a4cbc",
      "Id": "adf81ed2060e4f4388cabcbbd1d57213",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "35bd536b69e64c298380cb7b5a9f00dc",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "84b6992bf02b4f81873ca085398d8368",
      "Id": "bb8d06cbd5fa4b51afdee1a385c3f534",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "d9a6a83a59ce4d30baf210e0102775e3",
      "Id": "6f236afb60b34149b9f13fd15853d545",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "c6db248d209a418db2169a1516b30ab6",
      "Id": "21f164860aa549d59085a14d2a0e532b",
      "IsHidden": "False"
    },
    {
      "Start": "daae3d5ef27c42e28299f9b22c6d48ac",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "c594e08bdc624413ad9052390db5bb33",
      "IsHidden": "False"
    },
    {
      "Start": "daae3d5ef27c42e28299f9b22c6d48ac",
      "End": "14c0d326b991438d8a6a8dae851f9c1c",
      "Id": "ec355d41b40f4aad8ae7010d5c8dd3e1",
      "IsHidden": "False"
    },
    {
      "Start": "af3f86d9fafb41d2ba4f1340183924d3",
      "End": "371a45db50b8415ba5561374ec8bc5d4",
      "Id": "7ea8b71664214b08b7b2d83b2bc25b23",
      "IsHidden": "False"
    },
    {
      "Start": "ac2ed70c911e4a888969fbcdec17e938",
      "End": "a09788801aa9465fa88268d7a23c4cc7",
      "Id": "4296b835dd5847d1abd3a6480440db88",
      "IsHidden": "False"
    },
    {
      "Start": "7646fba6fba744b68b34f8ebf1cee743",
      "End": "03362dd0d0a845ec825c9f233c9a3357",
      "Id": "02bd92b1d64749fa9de2da2042cd0fee",
      "IsHidden": "False"
    },
    {
      "Start": "44832ae379dd4a34823eecb92dc0dd11",
      "End": "73bd6794068e418cb98942202586e525",
      "Id": "70fd2676ae4d41b1a079350c119f82a0",
      "IsHidden": "False"
    },
    {
      "Start": "ef2a7cbc61e24a7a99f054a60f7d0dc2",
      "End": "185ddf524db74900a471459d72e2a9fe",
      "Id": "0041162ad5ff40e0800ce0f055b01e7c",
      "IsHidden": "False"
    },
    {
      "Start": "8c10a4fe012140d4a126073d7d2b3952",
      "End": "e54d1d7865f84dc99aafe65cbe94eb64",
      "Id": "a411039c85584bd7b9e6139b59cf8dec",
      "IsHidden": "False"
    },
    {
      "Start": "e79dcf4abea745808142d7be3c4b8b30",
      "End": "584fc104ba684e1a90c534eb518f53e3",
      "Id": "927fad1985b243f5b0b749a7c6afec26",
      "IsHidden": "False"
    },
    {
      "Start": "d33441890fe047da9eb0bd3ad7bc8f69",
      "End": "9746973406c04e65a20d4a8fda2c1bc9",
      "Id": "cdb6b1acbc88429fb8e5dd61b02a7ef3",
      "IsHidden": "False"
    },
    {
      "Start": "e559670cd2054a3f82c7d888b34d8034",
      "End": "24adccf95a284f9284a5aef8ad889879",
      "Id": "cc417e0145944486ab90ee56baf8897e",
      "IsHidden": "False"
    },
    {
      "Start": "f462089322bf45a0bcf99caac737bb83",
      "End": "f219b2c60ccc4af08e25644c22640f00",
      "Id": "65c71eb1eb124e06a993ec0dcdedb92c",
      "IsHidden": "False"
    },
    {
      "Start": "77d3328759e54764b1cd2a243d4c125b",
      "End": "1ac0be22523941df83619fb2b8b48297",
      "Id": "12b02bcd84d1444ab4ae43ebd1005834",
      "IsHidden": "False"
    },
    {
      "Start": "bf3567d5c1fb4c6c8872caecf1c75857",
      "End": "35fe42d556bb4d2fa87f919abc4a898e",
      "Id": "850dfc6bc7d44efa927a990f658ff7f5",
      "IsHidden": "False"
    },
    {
      "Start": "7647d79ca1c743e19b0235fdaea8d07f",
      "End": "49aaf744f77c4dab96c4f60a47bd963e",
      "Id": "a4e4687e1aa94aa2a3e3dba245f077b4",
      "IsHidden": "False"
    },
    {
      "Start": "3b92e52322894e87a156fc3e99703180",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "01e42e616c2241fca6ced230a399b882",
      "IsHidden": "False"
    },
    {
      "Start": "bff4893b39624d8ab2ea70bab22e83d0",
      "End": "cbdbaa73a2514f49b02c066fd978888e",
      "Id": "b82deb8d42184aeabdd32439aa8546b6",
      "IsHidden": "False"
    },
    {
      "Start": "bff4893b39624d8ab2ea70bab22e83d0",
      "End": "8243cd424878419e9bb4c433d6461700",
      "Id": "f8a21da39f6e4b1b8cbb9928596c60eb",
      "IsHidden": "False"
    },
    {
      "Start": "8d0fac5b99f048a4b3d4e7bb98244cfa",
      "End": "32760aa9a36c486aa0e34ba9f31b3c85",
      "Id": "61bcc47ed62445c087c3f86346f826e1",
      "IsHidden": "False"
    },
    {
      "Start": "23f28c5997b9491b86b2fef327c285cb",
      "End": "f4cf570a90924142b659d500b0f450a0",
      "Id": "7335423334dc4f4c9caa2276f3e54baa",
      "IsHidden": "False"
    },
    {
      "Start": "481da6ac9adf440cb4db8a6cfbb86ff4",
      "End": "6e8785eab66f4da981e872f3692bc6dc",
      "Id": "8f0b77395416451791af1940f857bae5",
      "IsHidden": "False"
    },
    {
      "Start": "481da6ac9adf440cb4db8a6cfbb86ff4",
      "End": "332ebc443c494938b934548afbe786c9",
      "Id": "b7a701436e5449b78e0f524cf5692311",
      "IsHidden": "False"
    },
    {
      "Start": "92ce7033f62d4fd997ba14d870acecae",
      "End": "010d365bf6b64477bf027afe4993a57e",
      "Id": "a030d9f1f4c949fdb051dcd44eca8961",
      "IsHidden": "False"
    },
    {
      "Start": "e890ef0eb3294396b4d340a75e6609be",
      "End": "eb48e93de24e491996bd251be7dce2bc",
      "Id": "276fb7c57503491d97202e5189199a07",
      "IsHidden": "False"
    },
    {
      "Start": "52b7d2e6afb04c7b9297a23beb9a146c",
      "End": "7f443056aaf74388a3a34c9b0c82bd67",
      "Id": "5577f8bb624a4186a8f9f213d91a7bd0",
      "IsHidden": "False"
    },
    {
      "Start": "1c20ec963a9540f28a77959990b79abe",
      "End": "856480cad1554a769c3318af7b7916dc",
      "Id": "5e82bda2da434ae38c176907ac2e5c44",
      "IsHidden": "False"
    },
    {
      "Start": "1c20ec963a9540f28a77959990b79abe",
      "End": "4b0e5f93736548669c6d3d4a82bd2629",
      "Id": "3fbb43000fcb49218ae9479c41777b02",
      "IsHidden": "False"
    },
    {
      "Start": "5f5562d5cb9a4f819ad9b33a0b34b6db",
      "End": "7b52c6f158184efaa81dce9188998c77",
      "Id": "bf96868a370e4cff998dbc4b97e8545a",
      "IsHidden": "False"
    },
    {
      "Start": "04fa4b9b5b374a58969c72bfcb9589c4",
      "End": "9aa1a3b51c8846bc833a6fb98666b5ef",
      "Id": "b1409d5a74474900b6219399162d844f",
      "IsHidden": "False"
    },
    {
      "Start": "7cf90bffd6f44ed7bfe8690ee57fdd1f",
      "End": "73b3f5a7cae445c493555d3c1a52c253",
      "Id": "85b10750e74845a88d03f53ff8b71d2a",
      "IsHidden": "False"
    },
    {
      "Start": "c8c617017f5c4a208462acbc49444843",
      "End": "01aed4b57af6447ab9fa7f60cba0a307",
      "Id": "5ec0e37660464e37afe3356c6dd63647",
      "IsHidden": "False"
    },
    {
      "Start": "b2a7947fa85848469144ce5cd964af17",
      "End": "2ce2adbabdf645e182a2e77a0accebd1",
      "Id": "cdc1c1a064ea433bba385d4d89ad6860",
      "IsHidden": "False"
    },
    {
      "Start": "10aedfed252041e2a6a260833a0ba22c",
      "End": "33abf7b4bb4a44d89a56b8587ae3b882",
      "Id": "865102aa6e1c408d842dc1329487f6f8",
      "IsHidden": "False"
    },
    {
      "Start": "c6d6fd0444ee47e0b7860722cd4189f4",
      "End": "d620603bf4f3418c8886ac2b29f4eaa5",
      "Id": "61792a24ae0e4191a406332bf6c205fa",
      "IsHidden": "False"
    },
    {
      "Start": "37b93cc9eb544f5fa51a8c4712419c71",
      "End": "6c75aac64c9840448d4f6c8e3508b423",
      "Id": "f869df7f84eb48a2b3b917fb9591cc4f",
      "IsHidden": "False"
    },
    {
      "Start": "70a31cc91bb2483fb7015da392c1d18f",
      "End": "39cc940ab6384147967a43fc3cbffeef",
      "Id": "cd5bafb26e774129bf7fbe54fe1fcdb0",
      "IsHidden": "False"
    },
    {
      "Start": "70a31cc91bb2483fb7015da392c1d18f",
      "End": "425e39aa237a4efa8f1debea4740d957",
      "Id": "d1cb7e86fe0b4ba190e6b6b38d0f7954",
      "IsHidden": "False"
    },
    {
      "Start": "cbdb98d1b0f143f4b96d4e5ef42f1fe2",
      "End": "2342c798af5a46fd8187c564d4e9853f",
      "Id": "ce5a49dfeddb489cbf6558e53f90e881",
      "IsHidden": "False"
    },
    {
      "Start": "6c13f41d57c144e0956495ac1e57d629",
      "End": "51960e9af4354f43b5366fde1a512848",
      "Id": "e741cd41c8104353a2046d49956dd4d3",
      "IsHidden": "False"
    },
    {
      "Start": "c86589c547d24dadbfc0afcf1f46222c",
      "End": "89cf767b617b444ab624c84d31c0d3c1",
      "Id": "3ab9c0726cd44b13875fb4ab2be6ef1f",
      "IsHidden": "False"
    },
    {
      "Start": "d94b2bc6053944fb87e7ef442cc3e7b7",
      "End": "6edd29ca5a0940a095337491f5f72794",
      "Id": "b83cec2434614e879ca3d4652dc42b03",
      "IsHidden": "False"
    },
    {
      "Start": "544d6f5dfdda4c4fa76bd48d03ac4fb0",
      "End": "92607d9b639c4765b68b190febb2a264",
      "Id": "130b73860dca4b7598a8eb9dc2eaa333",
      "IsHidden": "False"
    },
    {
      "Start": "e3d356c4a6404e93be08f2f0e4b7abca",
      "End": "61f89ccffb884899bb25b8a84cd76029",
      "Id": "45713c5c106345e9b0f5178b46d09434",
      "IsHidden": "False"
    },
    {
      "Start": "e3d356c4a6404e93be08f2f0e4b7abca",
      "End": "9e50d1395ece4d70bb66b9a0c8ac77ee",
      "Id": "4cd247cec3d04d9aad41ca79449b3030",
      "IsHidden": "False"
    },
    {
      "Start": "1fae8997ba0448a4878c305d88b2b320",
      "End": "78b68623245449bb9c0b59b5b0791076",
      "Id": "30f843a504a04e61aa1bb4143ea719f0",
      "IsHidden": "False"
    },
    {
      "Start": "e40ca48dc89c41baae750d059eadbb22",
      "End": "1e5f4c05b17d438891a0f000af1dc911",
      "Id": "507c5918ea954981b404b8292281e34f",
      "IsHidden": "False"
    },
    {
      "Start": "f10a554332dd4618ad10559ad1290145",
      "End": "b1c055b525ff43639153b92fdc25077f",
      "Id": "840c0d40ecbd493f9fc983cef25ec40b",
      "IsHidden": "False"
    },
    {
      "Start": "5fe1147e14ca45cea1dddae783e3786b",
      "End": "bc30c3fa4a0c4da39fa51cc3f690cf29",
      "Id": "d3afe17fa23043b6b5c52c8d0a8557be",
      "IsHidden": "False"
    },
    {
      "Start": "6d3edc932faa4f1bac270960f0fff4c7",
      "End": "84ded21f882b4bca83f09acc3581df5d",
      "Id": "3daa87bb4c8d46de9f7c0bee4a9497b0",
      "IsHidden": "False"
    },
    {
      "Start": "f4d3039cc4124452abb3c0f620a7f601",
      "End": "a4600f5dd6b1469c82f44ae82ced6f54",
      "Id": "d05ee9d238714016aa8c5994672e048a",
      "IsHidden": "False"
    },
    {
      "Start": "a75ae0a946df402fae82276a772403f3",
      "End": "d55833c704694257a0e22d792186d729",
      "Id": "3b50cdf9b16c4158b0616623007220f6",
      "IsHidden": "False"
    },
    {
      "Start": "485266c330ef4c318c367e9aacd3d805",
      "End": "9dbdbd1f440847d6a47041081d2dd196",
      "Id": "dfd4806b047f4967bb464983f6f154a4",
      "IsHidden": "False"
    },
    {
      "Start": "b6a3fd122a3a4ae5859d9305efd641a3",
      "End": "f87ffbc147214c56844b8355b782b4c0",
      "Id": "3e8f6c120729413fb9f02985e328b859",
      "IsHidden": "False"
    },
    {
      "Start": "d4ce33425a1f44deba16e275119109ab",
      "End": "62820fc6020545549c8a2c71cd84e4d3",
      "Id": "9882d7a144ba42e88a01517719fa1a90",
      "IsHidden": "False"
    },
    {
      "Start": "2c96e25e1efa45919e1964fbda0c6015",
      "End": "d4a8d235b17c4cdeb82afe2ee999c2d7",
      "Id": "ca95e07fc7624ae085a12d3018f2e2e1",
      "IsHidden": "False"
    },
    {
      "Start": "dd71af2fe3644b0d9c1a62b8e166d122",
      "End": "1808a240406548a6a5e8ead6993866c9",
      "Id": "be3ba652784843b681b555a90f4bd8c8",
      "IsHidden": "False"
    },
    {
      "Start": "4639e10fc1354eeca8d33bab96d3432d",
      "End": "f5b56d8d9df84ba282a1117172d57a0a",
      "Id": "f8df3362734a4fb8ba75b3ae122f1958",
      "IsHidden": "False"
    },
    {
      "Start": "1e24856a330848e482ef27f017d98c49",
      "End": "7e1f0202d36a4fb8a34990f78511a637",
      "Id": "47959f0e30994d499e7ed5fcae16d74c",
      "IsHidden": "False"
    },
    {
      "Start": "e60186c964fe48d98ff047f40f97d484",
      "End": "4ea6c1c1275d4035837a910cbb40a2ab",
      "Id": "3dbec4ebf21d49ca88437c07c1932597",
      "IsHidden": "False"
    },
    {
      "Start": "9cdbf83042634adc896b25c35e59920c",
      "End": "d3b052e1bd8b4d74b7c8c10b446105ad",
      "Id": "b9b9567426324726b6596699d0075dae",
      "IsHidden": "False"
    },
    {
      "Start": "e7790b2a64b1417188950d5172666ccc",
      "End": "ecefeb89430443499837bb56399bb0af",
      "Id": "67813c62a79e4f82965509ceb09461b8",
      "IsHidden": "False"
    },
    {
      "Start": "5ded9476b1ee45329b1f8786ef77d174",
      "End": "d010e73a28b842e3a52c7fd7cebc4585",
      "Id": "27b85a6463e849378b29b0f04c051c4f",
      "IsHidden": "False"
    },
    {
      "Start": "8a07a4dc3567421fa5711b127abca18b",
      "End": "3dd5f83221d84d10917b4a92797a9291",
      "Id": "c11e5e6e013a45bd84c8b7f95d64fd12",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9Td/vRv8Aeot3uKN3uKsCXf70b/eot3uKN3uKAJd/vRv96i3e4o3e4oAl3+9G/wB6i3e4o3e4oAl3+9G/3qLd7ijd7igCXf70b/eot3uKN3uKAJd/vRUW73FFAEW6jdUWfajPtVCJd1G6os+1GfagCXdRuqLPtRn2oAl3Ubqiz7UZ9qAJd1G6os+1GfagCXdRuqLPtRn2oAl3UVFn2ooAj3UbqiLYyTwByTVJte01eDqFsT/dWZWJ+gBzTA0two3Vl/8ACQWHadm/3YnP8lpV1qGT/VxzSDsdoX9GINMRp7qN1Uku5JuEtnU+srqB+hP8qq6hrQ09mjKxTXI/5YxzElf947fl/n6A0gNYsFBJ4AGST2qr9uNw222AK/8APZh8v4D+L68Dnqelc9eauqx/aNRnSKAHhOiA9gB1Y/meOAK5+5+IK30e2weW3hbpKIj5jfQkbV/U/Q0utg6XPQpbh4WMSSpcTqAfJCfNg9CzZwucHkjnBwD0qyG4GevfFeY2PiE2u/a92S+NxXYpOM8nBGTyeTzzWlF4mZ+i3h/66XLL/wCgsaAO9/A0hYL147c1x0OvL1/s2CQ+skmSfx2Gp7e8N1qtq80UMdvvCrDFGAqtj5WJ6s27GOgGQcZGaVxnV7qKi3fWiqA5zxhp91faXcvDdbI4YmkNrsysrLk/MQQTwOB0zg/TzmG+uT/y22/7qjH6g17Bv+bt16V5Dc2X9m6hc2naCVo191B+U/iMH8abuibFyG9uj1uZCMdBtX9VANWxdSohZrm4AH92Zx/I1nQ/0rQhrNsojMktwrPIhggHUn72PVm7dO3p1NLDqixRiKxjQIOkhXCD/dUYz+g5zzWbrCq+pZKgkIo5HvmpbeqvpoTbXUyPGrTfavD7iW+aRtQjWSS2jSTKdSsm4HZFkDJTBB246msHw3JcSeKteE7XjItwyw/ardIlEflwHERXmSPcW+dudxcdFFdjrWgQ602mzXE7W0Vlci4R1kkXLr0G1CPMGN2UOR0JHAIwtD8MR2GrX17DJAr3zma4H2h3JlKxpkAkhRtjUYXA4zjJNfL1sHXnmUcRGHu6a6dvW59RRxlCOXSw8p+9rpr/AJWOgt+1aFvUdrpcjY/ex/gSf6Vq2+iy8Z80f9u0n+FfT2Z8zcIKvxqzIdhw45Qnsw5B/A4qSDRQv3pZh/27PV+PTUjUkrcsQOAojGfzep5WO5sQ3C3EUcqZ2yKHGfQjIoqpYW7WkeGcsWOdu4lV5JwM/XrgdBwKK2JJc/N+NcdfeF9R1bUpryWO0gMhHyecxOAABnC8nA68fSusJ5PFJn2qrCOag8Guv33hU+oLP+nH86vxeHUgUs0sJCjJJhwAPfLVrZ9qZcQR3ULRTwpNE33kkAIPOen1osgPNdcaK616UWjrcJhQGjXCngZx7e/61p6Po7TSbdhnkHVFOFX/AHj2/r2zXSt4X00uWWBomJy3lysN3sef1GD71pQxJbxLHFGsca9FUYApcqArQ6NF5ai6SO4C8iLaPLX8D1+p/IVpeY3qcfWoc+1GfanYCbefX9aTd/nNRZ9qM+1AEuaM1Fn2oz7UASg8iioweRxRQBFu5PFG72NRbuT1oyPerAl3exo3exqLI96Mj3oAl3exo3exqLI96Mj3oAl3exo3exqLI96Mj3oAl3exo3exqLI96Mj3oAl3exo3exqLI96Mj3oAl3cjiiot3I60UgI9x96Td9aKKoA3fWjd9aKKADd9aN31oooAN31o3fWiigA3fWjd9aKKADd9aN31oooAXcfeiiigD//Z",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3818.1878950064579,
        "Y": -1348.2827950073352
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3460.1878950064579,
        "Y": -1348.2827950073352
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2482.8106380722884,
        "Y": -1303.7854420738549
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2736.8106380722884,
        "Y": -1269.6454420738548
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1173.8106380722884,
        "Y": -836.64544207385484
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Main beam Slope Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1173.8106380722884,
        "Y": -684.78544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Main beam Slope Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1173.8106380722884,
        "Y": -532.78544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -76.810638072288384,
        "Y": -603.78544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -651.81063807228838,
        "Y": -576.64544207385484
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5919.6607475714136,
        "Y": 654.28346842220537
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3453.0669915373578,
        "Y": 698.94694237582814
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3900.0669915373578,
        "Y": 729.56438778424683
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4761.419185018909,
        "Y": 752.2561111165719
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4507.419185018909,
        "Y": 786.39611111657189
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5176.419185018909,
        "Y": 509.14236614416632
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5176.419185018909,
        "Y": 995.36985608897771
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5578.99423979041,
        "Y": 835.0406041570468
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15420.392898620057,
        "Y": 402.39449867596318
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6899.69952554168,
        "Y": 415.43642262656113
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6645.69952554168,
        "Y": 449.57642262656111
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7314.69952554168,
        "Y": 415.43642262656113
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7662.69952554168,
        "Y": 415.43642262656113
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7305.5902403253285,
        "Y": 89.533712424162843
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6890.5902403253285,
        "Y": 89.533712424162843
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7653.5902403253285,
        "Y": 89.533712424162843
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6636.5902403253285,
        "Y": 123.67371242416283
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7970.69952554168,
        "Y": 415.43642262656113
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7961.5902403253285,
        "Y": 89.533712424162843
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6879.4904978336217,
        "Y": -564.28262219348778
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6625.4904978336217,
        "Y": -530.1426221934878
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7294.4904978336217,
        "Y": -564.28262219348778
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7642.4904978336217,
        "Y": -564.28262219348778
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7950.4904978336217,
        "Y": -564.28262219348778
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7173.6871628034805,
        "Y": 950.60149991217133
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7651.6871628034805,
        "Y": 950.60149991217133
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8700.68716280348,
        "Y": 950.60149991217133
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14770.392898620057,
        "Y": 402.39449867596318
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7168.8573936761868,
        "Y": 1365.1629811924415
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7604.8573936761868,
        "Y": 1348.1629811924415
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7994.8573936761868,
        "Y": 1360.9771582533135
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8302.8573936761877,
        "Y": 1360.9771582533135
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6758.6871628034805,
        "Y": 950.60149991217133
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6504.6871628034805,
        "Y": 984.74149991217121
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 375.18852808160136,
        "Y": 1020.3975217418904
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2210.9935470189394,
        "Y": 968.1264223642354
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1699.9935470189394,
        "Y": 1042.1264223642352
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1276.9935470189394,
        "Y": 1042.1264223642352
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2721.9935470189394,
        "Y": 968.26642236423538
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2723.2811576369159,
        "Y": 1136.4740636168283
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3539.425242640918,
        "Y": 958.90893246988333
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3546.3214334225008,
        "Y": 1277.3736862272592
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -651.81063807228838,
        "Y": -827.78544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "90b8f7ad4af7496a960da48abc152285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 342.18936192771162,
        "Y": -243.225442073855
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "41563a8003714c4aa18135c3678b78ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2369.4802272515312,
        "Y": 206.21586389672717
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "9d1cec5ec9ad4df5b4536a3603d17fab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1581.8106380722884,
        "Y": -1143.7854420738549
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db13cb72be7e4d458bc9a1e8e171c01c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1989.8106380722884,
        "Y": -1018.6454420738548
      },
      {
        "ShowGeometry": true,
        "Name": "3.1. Secondary beams' Slope Angle (degrees) from",
        "Id": "b3c95697e6434508865fdae8d3004ce9",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -651.81063807228838,
        "Y": -425.28544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "3.2. Secondary beams' Slope Angle (degrees) to",
        "Id": "58fe1afbbe604fb2b32af81f27d247b3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -651.81063807228838,
        "Y": -272.28544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "4.1. Angle between main and secondary beams (degrees, 0-90) from",
        "Id": "1a354d3aadb941fb9fdd9ccb8b76dee7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 342.18936192771162,
        "Y": -63.785442073854938
      },
      {
        "ShowGeometry": true,
        "Name": "4.2. Angle between main and secondary beams (degrees, 0-90) to",
        "Id": "81a7a51aff0b462ab0295d1b64fcea29",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 342.18936192771162,
        "Y": 87.214557926145062
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenAxes",
        "Id": "088b89d25d914ad7b3fcece05185975f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1019.1893619277116,
        "Y": -253.78544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "76b289957dbb49ffbf62bc8588d5acac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1989.8106380722884,
        "Y": -1234.7854420738549
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "53c0be61116842f2911654f7c79b6bfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2482.8106380722884,
        "Y": -1122.5054420738547
      },
      {
        "ShowGeometry": true,
        "Name": "5. Library file path",
        "Id": "d4aa9022c65b43829a11aebf1c816525",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4606.3214334225013,
        "Y": 1311.3736862272592
      },
      {
        "ShowGeometry": true,
        "Name": "6. Connection family to place",
        "Id": "72fe204d3a844a1097b09048ecf1f7df",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6034.7274719394409,
        "Y": 759.41582169616152
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "81761ea300ba405aad83f5b8fa2e9f5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4326.4252426409184,
        "Y": 993.04893246988343
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "8a92947807364762874c012b8432daa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2825.4802272515312,
        "Y": 265.21586389672717
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91c70c5dda0243e7b4e8f92de39246b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2369.4802272515312,
        "Y": 358.35586389672716
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "3ce9b8b19a9b469f905db02517f9d17f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4072.425242640918,
        "Y": 958.90893246988333
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "71ca4d37985a4d5181639a072b928286",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4079.3214334225008,
        "Y": 1277.3736862272592
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "1fc1ba03bc174352898611929e5b7761",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8087.6871628034805,
        "Y": 950.60149991217133
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "4e121fc4004d4dfeaed4d7cb1c40d24e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8392.68716280348,
        "Y": 950.60149991217133
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "16a4ae907f6040939207eb105a030e63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10004.766088591465,
        "Y": -136.31658302629614
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "eb888b92c99743fcbb24631dd387cf2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10812.766088591465,
        "Y": 45.683416973703856
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "352392610eef4466af95cbb801d891d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11216.766088591465,
        "Y": 136.68341697370386
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "de9e20a0d72642f6948bb159f1bc7377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9659.7660885914647,
        "Y": 55.683416973703856
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "783f910f186b4dd1a7e05475f1ff7d88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10408.766088591465,
        "Y": 170.68341697370386
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b224c11463074a8f84a2b5448d51cacd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10812.766088591465,
        "Y": 261.68341697370386
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "abd49926613647e28ed35eef6d8e5166",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10452.733608123432,
        "Y": 1005.0145688583374
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f0d13bb5ef2d47a9b119a24296180e40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9644.7336081234316,
        "Y": 823.01456885833738
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "8a9e83016d1a47379a7215ac64a279a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10048.733608123432,
        "Y": 914.01456885833738
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "e20d82ca66d348fc946d9333a6ac10eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11537.628863477854,
        "Y": 1093.0801007638272
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a7734101dcd84f5ba62334e0edc03b7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11283.628863477854,
        "Y": 1093.2201007638271
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "e3b26e6a784047d6aff33fd85a7d6192",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11959.628863477854,
        "Y": 1108.0801007638272
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1fe67851ffbb4a079795bff6a90ed319",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11537.628863477854,
        "Y": 1310.0801007638272
      },
      {
        "ShowGeometry": true,
        "Name": "Template for totals",
        "Id": "e87d7cc83f3344b1b6f79db6de5c1ff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9659.7660885914647,
        "Y": -294.31658302629614
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4776ded489f3423ca4ab3b2e47c916af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9284.7336081234316,
        "Y": 959.01456885833738
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e2c179b37dd048cf8e145790b98e093c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10048.733608123432,
        "Y": 1130.0145688583375
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7fb8e8e7797e4c8ea58405566c689f1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9644.7336081234316,
        "Y": 1039.0145688583375
      },
      {
        "ShowGeometry": true,
        "Name": "Template for each row",
        "Id": "b93a44df7d78450eb26ec38df963e5ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9284.7336081234316,
        "Y": 721.0145688583375
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "07d5b41cb10f4d1287a6b4f949a80f2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15017.392898620057,
        "Y": 402.39449867596318
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6773675f29024074b6c7dd0276324186",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12604.28802918277,
        "Y": 1345.465607885676
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fa9e126e6b604ec0868b4f83cec7ca36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12604.28802918277,
        "Y": 1192.6056078856759
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "7307549c111a48bb933541f1410524d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12912.28802918277,
        "Y": 1332.465607885676
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "adcd5aca8efc43cb8f198c5049189c01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12912.28802918277,
        "Y": 1514.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c2e01f29f1f441abbf4883ae6efcc2be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6753.8573936761868,
        "Y": 1365.1629811924415
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f442c2e083f24b9784c828e62564cf68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6499.8573936761868,
        "Y": 1399.3029811924416
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b39ac2ba3cad4761a51afe5992f2c0f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6626.142612951011,
        "Y": -201.07434345107959
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "94b5c9ddcc3b453aa71aa87cba3d8dea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7295.142612951011,
        "Y": -235.21434345107957
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "0ca716511615489a94498944fa33025f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7643.142612951011,
        "Y": -235.21434345107957
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "56dc77dc760b4654941114614e1a1a9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7951.142612951011,
        "Y": -235.21434345107957
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "fb52f919084343e78739ebcb2f929bdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6880.142612951011,
        "Y": -235.21434345107957
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "874243ae20314320a4be3a056459108a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10408.766088591465,
        "Y": -45.316583026296144
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b8702b8cbbb3479aa85880aa02d60c9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10004.766088591465,
        "Y": 79.683416973703856
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "4c3e5449548c43d5969f569cfbfdef61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1796.3967138200442,
        "Y": 1065.9786203743367
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "75f2eed080404f728ce905cdd642fa03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2172.3967138200442,
        "Y": 1124.9786203743367
      },
      {
        "ShowGeometry": true,
        "Name": "7. Filter connection type name",
        "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1399.3967138200442,
        "Y": 1158.9786203743367
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "e3bbf2e4ee93414fa45f87529c7a31af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2759.3967138200442,
        "Y": 1090.9786203743367
      },
      {
        "ShowGeometry": true,
        "Name": "8. Select analysis results",
        "Id": "df79766745b34d1e9cd497f983e0cbf0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3453.0669915373578,
        "Y": 851.56438778424683
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "93b5b4f65e7743f09b97eaea66310a4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1796.3967138200442,
        "Y": 1217.9786203743367
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "70db52313bda4962a79fd557505303fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2488.3967138200442,
        "Y": 1124.9786203743367
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenBeams",
        "Id": "ffea298b559b45b5b891d3711b92f444",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1454.1893619277116,
        "Y": -105.78544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "cd651e1078eb4ee5a0e33305359bfcb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 342.18936192771162,
        "Y": -494.78544207385494
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "dcba63f083c14e14b15f20ddd0bb7062",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -76.810638072288384,
        "Y": -351.64544207385484
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7364303920dc48808abe3290a081ca78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1019.1893619277116,
        "Y": 103.77455792614501
      },
      {
        "ShowGeometry": true,
        "Name": "Secondary beams colinearity tolerance (degrees)",
        "Id": "00bcb51bd99c4af2a9f3d3ac7523e72b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 342.18936192771162,
        "Y": 238.774557926145
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c93d5239aa174115ae99a19b9dab6faa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1581.8106380722884,
        "Y": -927.64544207385484
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "75b0827f8c064a85a6e89f61cd55ebc5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1173.8106380722884,
        "Y": -1052.7854420738549
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "f2c92006d1a54c3f8ac76874a6e9aad2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -575.81147191839864,
        "Y": 1054.3975217418904
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "cc0cf5f0e0cb4dc68b11c0907aeadf4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -139.81147191839864,
        "Y": 1054.3975217418904
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "554f328d11b946f09c2e8592c62a388b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5641.7274719394409,
        "Y": 818.41582169616152
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a39084fe91754c6f8f1ed53a30c99ada",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1399.3967138200442,
        "Y": 1310.9786203743367
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "87182a0c8d7c4eaba684289656372dc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13255.28802918277,
        "Y": 1380.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c8921300d1ed445a88ebd659e9779b28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4511.4389328246289,
        "Y": 2163.9637894989182
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7d05c66880c545328c033da4f49ab007",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4257.4389328246289,
        "Y": 2198.1037894989186
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "92265cc6662f447e8c6a9c75d7d10c52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4926.4389328246289,
        "Y": 2585.1034528217551
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "fd40760fdd8a4066b9f8d4fe84d4a322",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5883.3588837893494,
        "Y": 1988.0375616483971
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "29d26e7eae6f44c6b26cd55882a3946d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6328.3588837893494,
        "Y": 1988.0375616483971
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "e22d012467e94a4a8460e3b4c01351c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6727.3588837893494,
        "Y": 2064.0375616483971
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6e1a1030c10d4717838624da172fa798",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6727.3588837893494,
        "Y": 1912.0375616483971
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5b14c3009c264425988d15ccdfd2e890",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7828.3934915965747,
        "Y": 1775.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "981cd2e767524e61abec378a0bbc00d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7828.3934915965747,
        "Y": 1968.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "81a8e9d2ec554a0085f3b6cf873ec66b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8250.3934915965747,
        "Y": 2137.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "e510101d953644caa6606142d2747c37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8250.3934915965747,
        "Y": 1920.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "4eb6bdca6f2b48f4bab7e03ee44fa3b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8672.3934915965747,
        "Y": 2081.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "c821d4a378424adf8b56dee556a38e75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9076.3934915965747,
        "Y": 2081.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7aa59d99ab194c129540cf614bbda9bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7574.3934915965747,
        "Y": 2203.6722962345375
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "2806c1c4887149a2aa7623e01daaa7c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7828.3934915965747,
        "Y": 2119.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "883b6573918f4346894c854dffa7bd38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8250.3934915965747,
        "Y": 2288.0322962345376
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "b8ce8df731f34551b200209a3f898743",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6765.4875649249188,
        "Y": 2864.3168882940708
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "0db3468738ab4e0e90455eb8e3014f2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7159.4875649249188,
        "Y": 2877.3168882940708
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "1e553f398fad497ba539804b19b3efd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8667.4875649249188,
        "Y": 2885.3168882940708
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "66892c07d79e4290a4e133c160703107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8273.4875649249188,
        "Y": 2919.3168882940708
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f44df23aef7247c1b1f813f295f2a21c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7159.4875649249188,
        "Y": 3063.4568882940707
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "5eadbfe128984eb6bca97006260bc316",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7553.4875649249188,
        "Y": 2987.3168882940708
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "05fb34b1b97940c3872ec4e791642070",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7938.4875649249188,
        "Y": 2953.3168882940708
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "aadde6d2a0c345d0902a08e805e82268",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9430.0,
        "Y": 2677.0
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "233743e91d93413bad27ac5e603ba319",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10057.182556596812,
        "Y": 2660.8566646918307
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "1e04519f45654ad3b17af59f841c7abf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10572.964301989303,
        "Y": 2586.6806946186621
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c7e670531f0740d491c226c4bcacd0b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6034.7274719394409,
        "Y": 911.41582169616152
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "274b13a84a0a422ebd5c1264c00fb1b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13255.28802918277,
        "Y": 1596.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "38622acd940042d987aec0cf72ab8331",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13602.28802918277,
        "Y": 1542.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2026761989b9439eb5001e9a250df68c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13949.28802918277,
        "Y": 1520.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "39baf1a9b47d4490971f463f622f5ca4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13602.28802918277,
        "Y": 1325.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "d099472c8e4241d0871c83979e67f4fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13949.28802918277,
        "Y": 1303.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "6086995fc8be48dea41d373e123f8bb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14296.28802918277,
        "Y": 1281.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "3846d6bfb7e548fa85f45e704c1d33ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13255.28802918277,
        "Y": 1198.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "9ae5e83c03cc4f3486a3be5da126ae93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13602.28802918277,
        "Y": 1144.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "c99cd7f99eb2421e91359d58833d232a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13949.28802918277,
        "Y": 1122.4656078856758
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "73da70387991409eb4bcf8bd17ec4f4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12912.28802918277,
        "Y": 1180.465607885676
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "8ece1d4d315348ada064fd7a62c9483a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13255.28802918277,
        "Y": 1047.4656078856758
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "62536ed7d8f64353aa7e5bd504d6f54d",
          "90b8f7ad4af7496a960da48abc152285",
          "9d1cec5ec9ad4df5b4536a3603d17fab",
          "db13cb72be7e4d458bc9a1e8e171c01c",
          "b3c95697e6434508865fdae8d3004ce9",
          "58fe1afbbe604fb2b32af81f27d247b3",
          "1a354d3aadb941fb9fdd9ccb8b76dee7",
          "81a7a51aff0b462ab0295d1b64fcea29",
          "088b89d25d914ad7b3fcece05185975f",
          "76b289957dbb49ffbf62bc8588d5acac",
          "53c0be61116842f2911654f7c79b6bfd",
          "cd651e1078eb4ee5a0e33305359bfcb8",
          "dcba63f083c14e14b15f20ddd0bb7062",
          "00bcb51bd99c4af2a9f3d3ac7523e72b",
          "ffea298b559b45b5b891d3711b92f444",
          "7364303920dc48808abe3290a081ca78",
          "c93d5239aa174115ae99a19b9dab6faa",
          "75b0827f8c064a85a6e89f61cd55ebc5",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -2746.8106380722884,
        "Top": -1376.7854420738549,
        "Width": 4504.0,
        "Height": 1751.56,
        "FontSize": 36.0,
        "InitialTop": -1303.7854420738549,
        "InitialHeight": 1687.56,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "81761ea300ba405aad83f5b8fa2e9f5a",
          "3ce9b8b19a9b469f905db02517f9d17f"
        ],
        "HasNestedGroups": false,
        "Left": -4336.4252426409184,
        "Top": 885.90893246988333,
        "Width": 1203.0000000000005,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 958.90893246988333,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "46ec41b71daf42dca401a9dc8eb59e77",
          "d4aa9022c65b43829a11aebf1c816525",
          "71ca4d37985a4d5181639a072b928286"
        ],
        "HasNestedGroups": false,
        "Left": -4616.3214334225013,
        "Top": 1204.3736862272592,
        "Width": 1476.0000000000005,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1277.3736862272592,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4497.419185018909,
        "Top": 393.14236614416632,
        "Width": 861.0,
        "Height": 738.2274899448114,
        "FontSize": 36.0,
        "InitialTop": 509.14236614416632,
        "InitialHeight": 631.2274899448114,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (beams to beam)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6635.69952554168,
        "Top": 342.43642262656113,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 415.43642262656113,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6615.4904978336217,
        "Top": -637.28262219348778,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -564.28262219348778,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6626.5902403253285,
        "Top": 16.533712424162843,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 89.533712424162843,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "809e0ab45e464576aa8783e69d0af647",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "4e121fc4004d4dfeaed4d7cb1c40d24e",
          "1fc1ba03bc174352898611929e5b7761"
        ],
        "HasNestedGroups": false,
        "Left": 6494.6871628034805,
        "Top": 877.60149991217133,
        "Width": 2427.0,
        "Height": 243.13999999999976,
        "FontSize": 36.0,
        "InitialTop": 950.60149991217133,
        "InitialHeight": 179.13999999999976,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "c2e01f29f1f441abbf4883ae6efcc2be",
          "f442c2e083f24b9784c828e62564cf68"
        ],
        "HasNestedGroups": false,
        "Left": 6489.8573936761868,
        "Top": 1275.1629811924415,
        "Width": 2034.0000000000009,
        "Height": 260.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 1348.1629811924415,
        "InitialHeight": 196.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "cc0cf5f0e0cb4dc68b11c0907aeadf4b",
          "f2c92006d1a54c3f8ac76874a6e9aad2"
        ],
        "HasNestedGroups": false,
        "Left": -585.81147191839864,
        "Top": 947.39752174189039,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 1020.3975217418904,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -2733.2811576369159,
        "Top": 895.1264223642354,
        "Width": 1688.2876106179765,
        "Height": 377.34764125259289,
        "FontSize": 36.0,
        "InitialTop": 968.1264223642354,
        "InitialHeight": 313.34764125259289,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "4359ce10bfcb4091b8d1e1f48fd4139a",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e20d82ca66d348fc946d9333a6ac10eb",
          "a7734101dcd84f5ba62334e0edc03b7d",
          "e3b26e6a784047d6aff33fd85a7d6192",
          "1fe67851ffbb4a079795bff6a90ed319"
        ],
        "HasNestedGroups": false,
        "Left": 11273.628863477854,
        "Top": 1020.0801007638272,
        "Width": 894.0,
        "Height": 426.0,
        "FontSize": 36.0,
        "InitialTop": 1093.0801007638272,
        "InitialHeight": 362.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "780accb67af74e2495fb3817953f6dee",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b39ac2ba3cad4761a51afe5992f2c0f5",
          "94b5c9ddcc3b453aa71aa87cba3d8dea",
          "0ca716511615489a94498944fa33025f",
          "56dc77dc760b4654941114614e1a1a9e",
          "fb52f919084343e78739ebcb2f929bdb"
        ],
        "HasNestedGroups": false,
        "Left": 6616.142612951011,
        "Top": -308.21434345107957,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -235.21434345107957,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "852191142e9346fdad10bf40668c6fe2",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c3e5449548c43d5969f569cfbfdef61",
          "75f2eed080404f728ce905cdd642fa03",
          "e3bbf2e4ee93414fa45f87529c7a31af",
          "93b5b4f65e7743f09b97eaea66310a4f",
          "70db52313bda4962a79fd557505303fd",
          "a39084fe91754c6f8f1ed53a30c99ada",
          "6463f6560f0a4c589f1f739e2f9cbe29",
          "4a3beef3b09f4b25ba20bacc3627e8da"
        ],
        "HasNestedGroups": false,
        "Left": 1389.3967138200442,
        "Top": 992.97862037433674,
        "Width": 1615.0,
        "Height": 454.0,
        "FontSize": 36.0,
        "InitialTop": 1065.9786203743367,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "8008175398754dec8691b155ee36a2fe",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -3828.1878950064579,
        "Top": -1421.2827950073352,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -1348.2827950073352,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e84fce58400e439792ca63bbffe1cab9",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72fe204d3a844a1097b09048ecf1f7df",
          "554f328d11b946f09c2e8592c62a388b",
          "c7e670531f0740d491c226c4bcacd0b3",
          "be42cd6d88894a9a929d4e13c754c44c"
        ],
        "HasNestedGroups": false,
        "Left": -6055.2274719394409,
        "Top": 621.41582169616152,
        "Width": 699.5,
        "Height": 425.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 694.41582169616152,
        "InitialHeight": 360.54735037642035,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c9f349058a444abd8c54a0e96b25e11b",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "41563a8003714c4aa18135c3678b78ff",
          "8a92947807364762874c012b8432daa7",
          "91c70c5dda0243e7b4e8f92de39246b2"
        ],
        "HasNestedGroups": false,
        "Left": 2359.4802272515312,
        "Top": 133.21586389672717,
        "Width": 713.0,
        "Height": 361.14,
        "FontSize": 36.0,
        "InitialTop": 206.21586389672717,
        "InitialHeight": 297.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4e5d7a6c8d6d4584b18ae1528d893cf5",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "df79766745b34d1e9cd497f983e0cbf0"
        ],
        "HasNestedGroups": false,
        "Left": 3443.0669915373578,
        "Top": 625.94694237582814,
        "Width": 824.00000000000045,
        "Height": 361.61744540841869,
        "FontSize": 36.0,
        "InitialTop": 698.94694237582814,
        "InitialHeight": 297.61744540841869,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "69f49ad48e214789b14f350034745733",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "16a4ae907f6040939207eb105a030e63",
          "eb888b92c99743fcbb24631dd387cf2f",
          "352392610eef4466af95cbb801d891d8",
          "de9e20a0d72642f6948bb159f1bc7377",
          "783f910f186b4dd1a7e05475f1ff7d88",
          "b224c11463074a8f84a2b5448d51cacd",
          "e87d7cc83f3344b1b6f79db6de5c1ff2",
          "874243ae20314320a4be3a056459108a",
          "b8702b8cbbb3479aa85880aa02d60c9a"
        ],
        "HasNestedGroups": false,
        "Left": 9649.7660885914647,
        "Top": -367.31658302629614,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -294.31658302629614,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "e0b36b8003de4a60ad4b0a296dc7427c",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "abd49926613647e28ed35eef6d8e5166",
          "f0d13bb5ef2d47a9b119a24296180e40",
          "8a9e83016d1a47379a7215ac64a279a4",
          "4776ded489f3423ca4ab3b2e47c916af",
          "e2c179b37dd048cf8e145790b98e093c",
          "7fb8e8e7797e4c8ea58405566c689f1b",
          "b93a44df7d78450eb26ec38df963e5ef"
        ],
        "HasNestedGroups": false,
        "Left": 9274.7336081234316,
        "Top": 648.0145688583375,
        "Width": 1417.0,
        "Height": 618.0,
        "FontSize": 36.0,
        "InitialTop": 721.0145688583375,
        "InitialHeight": 554.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "d516056ddf0245d881f07889f17aa765",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "07d5b41cb10f4d1287a6b4f949a80f2f"
        ],
        "HasNestedGroups": false,
        "Left": 14760.392898620057,
        "Top": 329.39449867596318,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 402.39449867596318,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "4fca67d22e5e4b8c81a2f6327358f6c6",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c8921300d1ed445a88ebd659e9779b28",
          "7d05c66880c545328c033da4f49ab007",
          "92265cc6662f447e8c6a9c75d7d10c52"
        ],
        "HasNestedGroups": false,
        "Left": 4247.4389328246289,
        "Top": 2090.9637894989182,
        "Width": 994.0,
        "Height": 730.1396633228369,
        "FontSize": 36.0,
        "InitialTop": 2163.9637894989182,
        "InitialHeight": 566.1396633228369,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "49737683111f446c849c2b597efd7ed4",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fd40760fdd8a4066b9f8d4fe84d4a322",
          "29d26e7eae6f44c6b26cd55882a3946d",
          "e22d012467e94a4a8460e3b4c01351c4",
          "6e1a1030c10d4717838624da172fa798"
        ],
        "HasNestedGroups": false,
        "Left": 5873.3588837893494,
        "Top": 1839.0375616483971,
        "Width": 1275.0,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 1912.0375616483971,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "5ff0ec1c97ea49ecae1ae831694eb5ec",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5b14c3009c264425988d15ccdfd2e890",
          "981cd2e767524e61abec378a0bbc00d4",
          "81a8e9d2ec554a0085f3b6cf873ec66b",
          "e510101d953644caa6606142d2747c37",
          "4eb6bdca6f2b48f4bab7e03ee44fa3b9",
          "c821d4a378424adf8b56dee556a38e75",
          "7aa59d99ab194c129540cf614bbda9bb",
          "2806c1c4887149a2aa7623e01daaa7c5",
          "883b6573918f4346894c854dffa7bd38"
        ],
        "HasNestedGroups": false,
        "Left": 7564.3934915965747,
        "Top": 1702.0322962345376,
        "Width": 1712.0,
        "Height": 752.0,
        "FontSize": 36.0,
        "InitialTop": 1775.0322962345376,
        "InitialHeight": 658.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "af278828ea4d401fbe1496dcab8b52bf",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b8ce8df731f34551b200209a3f898743",
          "0db3468738ab4e0e90455eb8e3014f2c",
          "1e553f398fad497ba539804b19b3efd2",
          "66892c07d79e4290a4e133c160703107",
          "f44df23aef7247c1b1f813f295f2a21c",
          "5eadbfe128984eb6bca97006260bc316",
          "05fb34b1b97940c3872ec4e791642070"
        ],
        "HasNestedGroups": false,
        "Left": 6755.4875649249188,
        "Top": 2791.3168882940708,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 2864.3168882940708,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "8e4acba957b545b6869073228a34e49d",
        "Title": "Aggregate information",
        "DescriptionText": "Combine situation information and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "aadde6d2a0c345d0902a08e805e82268",
          "233743e91d93413bad27ac5e603ba319",
          "1e04519f45654ad3b17af59f841c7abf"
        ],
        "HasNestedGroups": false,
        "Left": 9420.0,
        "Top": 2513.6806946186621,
        "Width": 1420.9643019893028,
        "Height": 313.17597007316863,
        "FontSize": 36.0,
        "InitialTop": 2586.6806946186621,
        "InitialHeight": 235.31930538133793,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "45661c0d469d426f8613cbf5899201af",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6773675f29024074b6c7dd0276324186",
          "fa9e126e6b604ec0868b4f83cec7ca36",
          "7307549c111a48bb933541f1410524d2",
          "adcd5aca8efc43cb8f198c5049189c01",
          "87182a0c8d7c4eaba684289656372dc8",
          "274b13a84a0a422ebd5c1264c00fb1b7",
          "38622acd940042d987aec0cf72ab8331",
          "2026761989b9439eb5001e9a250df68c",
          "39baf1a9b47d4490971f463f622f5ca4",
          "d099472c8e4241d0871c83979e67f4fc",
          "6086995fc8be48dea41d373e123f8bb3",
          "3846d6bfb7e548fa85f45e704c1d33ad",
          "9ae5e83c03cc4f3486a3be5da126ae93",
          "c99cd7f99eb2421e91359d58833d232a",
          "73da70387991409eb4bcf8bd17ec4f4e",
          "8ece1d4d315348ada064fd7a62c9483a"
        ],
        "HasNestedGroups": false,
        "Left": 12594.28802918277,
        "Top": 974.46560788567581,
        "Width": 1900.0,
        "Height": 874.0,
        "FontSize": 36.0,
        "InitialTop": 1047.4656078856758,
        "InitialHeight": 694.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "be42cd6d88894a9a929d4e13c754c44c",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Double side clip angle;Double side clip angle custom).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6045.2274719394409,
        "Top": 694.41582169616152,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "72fe204d3a844a1097b09048ecf1f7df"
      },
      {
        "Id": "4a3beef3b09f4b25ba20bacc3627e8da",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. B to B;Web). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1399.3967138200442,
        "Top": 1075.9786203743367,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "6463f6560f0a4c589f1f739e2f9cbe29"
      }
    ],
    "X": 2244.6126017386432,
    "Y": 910.33190377991059,
    "Zoom": 0.5691595784138278
  }
}