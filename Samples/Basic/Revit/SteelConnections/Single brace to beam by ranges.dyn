{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places connections on beam single bracing situations. Works only on connection types with attached ranges of applicability. ",
  "Name": "Single brace to beam by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Name": "2.1. Main beam Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Name": "2.2. Main beam Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "b3c95697e6434508865fdae8d3004ce9",
      "Name": "3.1. Diagonal beam Slope Angle (degrees) from",
      "Type": "number",
      "Value": "20",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "58fe1afbbe604fb2b32af81f27d247b3",
      "Name": "3.2. Diagonal beam Slope Angle (degrees) to",
      "Type": "number",
      "Value": "70",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "d4aa9022c65b43829a11aebf1c816525",
      "Name": "4. Library file path",
      "Type": "string",
      "Value": ".\\Connection library with ranges of applicability.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "72fe204d3a844a1097b09048ecf1f7df",
      "Name": "5. Connection family to place",
      "Type": "string",
      "Value": "Gusset plate at one diagonal",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
      "Name": "6. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "df79766745b34d1e9cd497f983e0cbf0",
      "Name": "7. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00365d5f6f75422f8c6283350f8b70c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd2d123c3d94abca7e9992dcda22716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "374e1ff6640649faa07f47bcccb7bd7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b23a70c2bc1c4e5cb776ee65c63f7b46",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42b5e54d628b45e4bb1d812a1bdd3400",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "12abfb80ffa74a4c80e36ca5b6059b8c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "488a86843f5540f79ac3761cf6af27cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
      "Inputs": [
        {
          "Id": "35fe42d556bb4d2fa87f919abc4a898e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae7be74142a47fba54135b055a34926",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f96b73bb21c445a19f87f5609e3e2f67",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00992a65f91e4c27ad1f48c9992fbffc",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2edc041e63044911ac298aa3b6e87f56",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d153e5c52e14e3f87bc968a49379386",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "41563a8003714c4aa18135c3678b78ff",
      "Inputs": [
        {
          "Id": "03362dd0d0a845ec825c9f233c9a3357",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "956ce6b2f3a44fd1add03d79f6a757e5",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "9d1cec5ec9ad4df5b4536a3603d17fab",
      "Inputs": [
        {
          "Id": "4795a0d54f9048c29485d60bcc31aed7",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9666db81c3444e0da1ede81e58862eae",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d31663f1eb74331bab5ebb304405ab4",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ad960e167924ca7891c3170a99ca6d5",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d956e1915ce4526aa0bfc19c363ae90",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "db13cb72be7e4d458bc9a1e8e171c01c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65d77ae3e25247f2a91982d24ca4e5e5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 20.0,
      "Id": "b3c95697e6434508865fdae8d3004ce9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f66ee711f33948519bc9af2deeda5732",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 70.0,
      "Id": "58fe1afbbe604fb2b32af81f27d247b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28e0124a23fe4c5bbd0611ed2b278a25",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\Connection library with ranges of applicability.rvt",
      "InputValue": ".\\Connection library with ranges of applicability.rvt",
      "NodeType": "ExtensionNode",
      "Id": "d4aa9022c65b43829a11aebf1c816525",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "983c76b632f045ae83f0201e7040ba7f",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Gusset plate at one diagonal",
      "Id": "72fe204d3a844a1097b09048ecf1f7df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "affa3f451d6d4d86b8021daee4224c3c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "81761ea300ba405aad83f5b8fa2e9f5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "004601c42df64065b1aa7f9a1d0efda7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "8a92947807364762874c012b8432daa7",
      "Inputs": [
        {
          "Id": "9260557c56aa427a837ff8328d6f0bc0",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6828fd3147794b02bffb36da46bd75d5",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33cc9aeaaa6d4d459fbba81765dc3769",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "91c70c5dda0243e7b4e8f92de39246b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "15748548c9864e13a26442840c368853",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "3ce9b8b19a9b469f905db02517f9d17f",
      "Inputs": [
        {
          "Id": "cbdbaa73a2514f49b02c066fd978888e",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72579d76eeee4f98b51fbfccd1fc5f5f",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd680d5226f7433d9a08c7599ab6d099",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "71ca4d37985a4d5181639a072b928286",
      "Inputs": [
        {
          "Id": "8243cd424878419e9bb4c433d6461700",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77759a599d42424bb0cc01233c3cdcdc",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eae992000a544a4a9022c5a881e42f98",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "1fc1ba03bc174352898611929e5b7761",
      "Inputs": [
        {
          "Id": "e7a87c70fe5148c59793dad56cad1085",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4d2dcc387e94a8785ae8dd899ca4ac0",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "44f717fef6ef4c4aa2310468f1d83346",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "4e121fc4004d4dfeaed4d7cb1c40d24e",
      "Inputs": [
        {
          "Id": "7341144e178140008ce175a1cc90483d",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcc785c95b1543ccba55ef006648a317",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "16a4ae907f6040939207eb105a030e63",
      "Inputs": [
        {
          "Id": "3606df721d804995b5e8a33e3def1e73",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccc5cee4da124b1e9d673ebda520358c",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "369fdb7a392b46fb804ef530bfd503ca",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03a292bf41c44239b33ba72d52a4b125",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "eb888b92c99743fcbb24631dd387cf2f",
      "Inputs": [
        {
          "Id": "9ebb1f33c3e64f33b7f31910a7ddae8e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82bc2de00c73425fbeb2ffb5ea77dd60",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00f344350f954a179085a39b3cfb98c4",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32b6878c25f241ff9acb08141dc79cb6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "352392610eef4466af95cbb801d891d8",
      "Inputs": [
        {
          "Id": "d8bfbf10b7c8424b9fac8c848d018c12",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1399236c209846da966f0b526b1d246e",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da2a0eda810f434ebc0d145fb9bf6aa7",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85c3cea6f14c4645b97378af35150373",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "de9e20a0d72642f6948bb159f1bc7377",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb28ecf59dd544ba8096108c244c66ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "783f910f186b4dd1a7e05475f1ff7d88",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe85924cdb9341319b72a7a3dd5c948c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "b224c11463074a8f84a2b5448d51cacd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b67eb3a5c57044d08b88974c90e7ddc8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "abd49926613647e28ed35eef6d8e5166",
      "Inputs": [
        {
          "Id": "187f3e7089284aa69d224d4bfad1d2e3",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9514d03072542c6ac4d84b29213d432",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09cadf62a3ad497fa250c0445722c856",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "616972644e294dddab25f53c2d889cd9",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f0d13bb5ef2d47a9b119a24296180e40",
      "Inputs": [
        {
          "Id": "faf19b56ce374c7e8706123140d4e69e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee5c79be0a6845b5991c45ca41bcbe5e",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15d55b6625c34e53ae3d163a72bab25d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbedae5d7e814564b28044712b8d21c3",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "8a9e83016d1a47379a7215ac64a279a4",
      "Inputs": [
        {
          "Id": "dd292dda75c24b01a212ebcd27758da0",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b8ef2042e45400582a83d1e6f03c6d5",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa4d70959f494cfdade0ec4670e60e76",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d68e6933e3254a2eb3c5ab0ce3ad11fe",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "e20d82ca66d348fc946d9333a6ac10eb",
      "Inputs": [
        {
          "Id": "b119f22fc08d4febbd2871349b16a6e1",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e39216c5df64fcf850dffb305e46755",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac2a6c31013544ca8b3b0c59bf65b363",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "262a66bd577648cab4d48726f4b3b690",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "a7734101dcd84f5ba62334e0edc03b7d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a16097bc2654eeebae443b5ed0ccbee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e3b26e6a784047d6aff33fd85a7d6192",
      "Inputs": [
        {
          "Id": "4e808942375249818afb0d8f72634ae6",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f86ae3748007431087e0a2c775a98862",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab8671ba22c241598a4f14670b7c8b00",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fde792d3ad2d4e7baa3d8bfa617cfca1",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "1fe67851ffbb4a079795bff6a90ed319",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "acc5268d43f4482abfda6705e7a3daa7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "e87d7cc83f3344b1b6f79db6de5c1ff2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3d3dd63e27248fe9289704ea69186e1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "4776ded489f3423ca4ab3b2e47c916af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee632e59f2224cb6a86174ec8df0cbdc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "e2c179b37dd048cf8e145790b98e093c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f046b0d7c08e40fda23047c7d9a6e9aa",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "7fb8e8e7797e4c8ea58405566c689f1b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e892284b20524d05ac2b5a1fdf6abcac",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, from {applicable_number} applicable",
      "Id": "b93a44df7d78450eb26ec38df963e5ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5ec5c3d5e7c347f3ae4964785f839f9c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "07d5b41cb10f4d1287a6b4f949a80f2f",
      "Inputs": [
        {
          "Id": "d8aeaadb26624cd7bd0ffbe2ac707da5",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e1f0202d36a4fb8a34990f78511a637",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "575c5e453e48491ca4849b3b94824018",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "816894bc3aae4a7bb0d9c1a8c1539e19",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6773675f29024074b6c7dd0276324186",
      "Inputs": [
        {
          "Id": "e2fc6d3d80c34171a0c8694f20956430",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fbf7723635244339684e4989501af0d",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "fa9e126e6b604ec0868b4f83cec7ca36",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e0fba2e937d4a08bf8f7e7f97090cc9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "7307549c111a48bb933541f1410524d2",
      "Inputs": [
        {
          "Id": "941d1b369d82419e945c713c0989c2c9",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caa246d10e054cf9a3fc049da93b5817",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aea129e877d84944b5bc93add3f36aa5",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "adcd5aca8efc43cb8f198c5049189c01",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f620fb1fe2041d88167996f7f420a98",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c2e01f29f1f441abbf4883ae6efcc2be",
      "Inputs": [
        {
          "Id": "6bf73b0241bf41b59e70282678d71128",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f72c5cf556349e19af952862d645344",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41342d6221a34c9289c040872ba58e8f",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f442c2e083f24b9784c828e62564cf68",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9eac2467414c416e949276361d8073c1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b39ac2ba3cad4761a51afe5992f2c0f5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f13acedcaa93452eaa5511159e827cec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "94b5c9ddcc3b453aa71aa87cba3d8dea",
      "Inputs": [
        {
          "Id": "1a4a00b24589460cadffa49954a4c0df",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf8eea0542404bdfa0279287b2de1eb2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed60dabd9980412e942723925b431333",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0ca716511615489a94498944fa33025f",
      "Inputs": [
        {
          "Id": "b4ba48d41b084aefaef22ec1656d92f8",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10f53b4fd6ea473ba16bb4a1f67a392a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "56dc77dc760b4654941114614e1a1a9e",
      "Inputs": [
        {
          "Id": "9420a650e03b4c338e300b2cfa07531f",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6443aa3d38c64403a94655133b74967c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "fb52f919084343e78739ebcb2f929bdb",
      "Inputs": [
        {
          "Id": "873f0d411c3e4fcba23e4a60705fbdf8",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09c733e99e24497a9d5d035ab95cd913",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff4f1d049fff4bb184afe92a43d4c058",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "874243ae20314320a4be3a056459108a",
      "Inputs": [
        {
          "Id": "e91bdee91703429b9988ae1a258a1a6b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "792176cbeae74359a57aa7c45373cfe8",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b65bf3fdd104773a7077d4e94ac26b5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7603807ecae2403b919bcea0308d5e61",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "b8702b8cbbb3479aa85880aa02d60c9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d991fb07fef486bbc333631cdc94b1f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "4c3e5449548c43d5969f569cfbfdef61",
      "Inputs": [
        {
          "Id": "f3a45e5f16c74008962aa0e4229c5d04",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "558f9279578b4f76898e86fb0da740ed",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "75f2eed080404f728ce905cdd642fa03",
      "Inputs": [
        {
          "Id": "6dd92879669c4d3eb0200a895493b9d7",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "371a45db50b8415ba5561374ec8bc5d4",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca30ff53d84c46778e2ea142e9ee7a8e",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d50dda3cd5034b60b54c75e08563f485",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f335c2c14bed4874b36a15cdbdcae725",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "e3bbf2e4ee93414fa45f87529c7a31af",
      "Inputs": [
        {
          "Id": "a860925db0c242eabac911f5ce7e7ade",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a09788801aa9465fa88268d7a23c4cc7",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1680185e68c54ebe9b2794d69b547710",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d31210d478434c8d928a8fbf0a696c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "df79766745b34d1e9cd497f983e0cbf0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "daae3d5ef27c42e28299f9b22c6d48ac",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "93b5b4f65e7743f09b97eaea66310a4f",
      "Inputs": [
        {
          "Id": "d88d2c7964bb4855b1678adffe1a4cbc",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32760aa9a36c486aa0e34ba9f31b3c85",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af3f86d9fafb41d2ba4f1340183924d3",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "70db52313bda4962a79fd557505303fd",
      "Inputs": [
        {
          "Id": "02073fc4bc6c440e9ee7a88342953fb2",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac2ed70c911e4a888969fbcdec17e938",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenBeams@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,double,double",
      "Id": "a8f8ba08b6ab411ca499a39198645eda",
      "Inputs": [
        {
          "Id": "0dee1010ba38482cad30f4e8524d4f45",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44111bdf57c84068a986c4b6039cabd9",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70c2134bf0454c96aa3df06bdfa570b9",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e156d5f2040e434a95c2171f30f448b8",
          "Name": "rangeStart",
          "Description": "A value between 0 and 180 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42d71a5ab50c422595f7ddacd591d61f",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 180 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd1ee8c3852a45389c2fb13b11315484",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5b4390f8bea46a0aa065a33f5d2f332",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. This is similar to ByAngleBetweenAxes except it only measures the angle using the X axis, and for the case where the structural elements meet end to end the angle can be between 0-180 degrees instead of 0-90 degrees.\n\nFilter.ByAngleBetweenBeams (node: ConnectionNode, indexFirst: int, indexSecond: int, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n0;\n90;",
      "Id": "de1ec3ab5688432499ac4a2ba6a62423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cce3e0a0194d444bb75227354989c384",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4609d12dfcb4c2c8bc559ee08265e2f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf90d0937cff4694a918b0bd87f7058d",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd379f901d3145229a8896af8e659f39",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenAxes@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,string,string,double,double",
      "Id": "bbd6b649fa3540a99a0323de113ca23b",
      "Inputs": [
        {
          "Id": "86269713d10d47ef9e14d9b3a635614f",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a94cc13416394dbda31e75a708bd36dc",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6511af2b502466884a14c5855394bde",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16c18040e72340c1a2badbca97f4b36e",
          "Name": "axisFirst",
          "Description": "The first structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baeb1788523441cdb2c032eb490bdaf3",
          "Name": "axisSecond",
          "Description": "The second structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a09a9bf0ea524089979d5c0445447ceb",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "561de7a62c5d4b698e562d75921d5150",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74d0194c97164d2d8589660bb89f6831",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb10404967e4493da56b5ecd838db57e",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. N, M, the range, and the axes are specified by the user.\n\nFilter.ByAngleBetweenAxes (node: ConnectionNode, indexFirst: int, indexSecond: int, axisFirst: string, axisSecond: string, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenAxes@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,string,string,double,double",
      "Id": "202114e964734a85baa39c93749c7841",
      "Inputs": [
        {
          "Id": "e239eb28de41475eb319aa2269af89e8",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83750f871115424fa7def38136a4c63b",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "198b1e7a7f5c4ca09ded4e82c9b9e8c3",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c50feeb52d84081bab3a957807e103f",
          "Name": "axisFirst",
          "Description": "The first structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a59a997eb8a84d2d99b3fa341c8b442a",
          "Name": "axisSecond",
          "Description": "The second structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c25430918faf4ca8bd659473945ded04",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfce46dc5abc4a79a33399e8b8205509",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c71ddd72789b4196bf505565319c6e6d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7516cb860e64427b85c00cc3a55b0d7",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. N, M, the range, and the axes are specified by the user.\n\nFilter.ByAngleBetweenAxes (node: ConnectionNode, indexFirst: int, indexSecond: int, axisFirst: string, axisSecond: string, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n\"Y\";\n0;\n0;",
      "Id": "c070ce67325942558c952470738463c7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e52045d5302446ff903091edf23d02f9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfc85cbe14564ed6bed6a0e789313bcc",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45638181496847459f9ff8b6f2cbe3ba",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9e80daf9fe64059869caf47ff332807",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1578aceccb524d5ab8f08431accc97d2",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Y\";\n\"Z\";",
      "Id": "5b32b9d6c6be400581317c8470fd3296",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d0de146cebf4a958078ff4dd43a3f5c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b21480f6ea14285b6579efd94e87d32",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "bb7aaad814d44d86b6891b36a727c9ee",
      "Inputs": [
        {
          "Id": "f2adfac348e345cdb6f3b485948d0646",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d306e99971445948957abc4e94f8721",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5eb3b6f24fb948b5976f0b6e94084dfe",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "eab79953ace84195b27f18dc34e473ea",
      "Inputs": [
        {
          "Id": "040a0c24ab4f4968887a10af8ca9a276",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32e63081b18b40ad8aa2e298ea09bcaf",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62f1fc9f7cae44398ade19fa07d63fbc",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c2d0647d5c7141268742ced6f27c026e",
      "Inputs": [
        {
          "Id": "1b3ebbe1f0674ad5adef22083287fd16",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd1aad2401384d08be36f03194f5ef92",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "f93a9da94ce5442f87b63b3d099cf1af",
      "Inputs": [
        {
          "Id": "32c5ef28abc04026b8cce414f48ae392",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b98d3932284c42deae34bbbbcdffea9e",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "462a2b93e3064d7ca8c892056f98b95b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d438ff0f6b34dbd976c71ac82066015",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "97f5b817abab4350b9a29a5ac40cb59d",
      "Inputs": [
        {
          "Id": "a64bb6eeb150413d9e64a94c131cd932",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d9b941a517d4c67930dc03707b92f37",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c656ca990e64443a27becdc22266b33",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b851152de00432685a4368396124109",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "62c3464bb5aa485fad8394b2c00945a6",
      "Inputs": [
        {
          "Id": "e54af31a53cc42c199d1a271ef505107",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "463693733fee4f5a819e55724facd484",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a19481acf2664d5ca90f061b7baab66c",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7f967300199470a84d8de507304869d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8ed901cb6fd4e0fbc649f1b3aa1eaf9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "4babc348b6154a619ddbcd706129eea2",
      "Inputs": [
        {
          "Id": "0ca8d39b95c04abdb5646f0538bb3927",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07a779c0eb8b4310a7aea72cada13ae0",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcb23b4b6989451a950b7cf5318cc5d4",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31d398f4d5154e1cab320f0b9308b4a7",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e9dbf0942f94dcba20a6f051ed60e83",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "808e93a01f1c46e5b8cc93d560be58c6",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "d7ff4a28f776431884b4d9535c90c094",
      "Inputs": [
        {
          "Id": "f561c6d1258045f39a6191e88ff60750",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b2b47ad040c42549da564973a7968e0",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "19fa778201044a299a8bea40a4df12cb",
      "Inputs": [
        {
          "Id": "cde3b15449db4cf9a70997ee94916a3c",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44b86de2b8634ba9ab0397bdd8ef94b5",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "ac2ff7dd212a46afa105907bb6648f0b",
      "Inputs": [
        {
          "Id": "c5b5b2d7ac2f4373a6f8462a6d6e2654",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "097bcd1a1af54a788316b332f6e9bbc3",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "d93c27cef9e24e54b0f850a3677076d4",
      "Inputs": [
        {
          "Id": "a41f0501a55c450da7e91e0f76683d61",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8bcf8ff406e448e9346da686d75cc09",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "71e237181d96459cb9f358a86b6a4689",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5752ec9567234f489c91b0ccb2460d30",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "6c7308914a184045b12678eeaeec6f58",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4516d2e2a8a48c6aee14b2d9735b126",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "ee6e09f9d92e4c18a05bcd623310d3a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "188fc378add1479fa63773c01988bc23",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "9f4fecc415514b2fb909d32e3ee6de5c",
      "Inputs": [
        {
          "Id": "43b9b2f3558c42319ef8e4515273cb64",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56705caccb0e41a0bd37f051edaae3a1",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcea08de164e4597aa903a82117a7f7b",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd17765028fc459da27347f9b0313b6b",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "3d8252d31b6943249f69cad340bc5c55",
      "Inputs": [
        {
          "Id": "ed25caafe2ca4feaac341651a55aed2e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20bf414958544dcf8e700bbdd66e9d25",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13a9353fee124ed0ac31d36b187cd18d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "340e20ef8573457796af264ebe3f2d1c",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a25d304666e14704a6f76b9251f184f2",
      "Inputs": [
        {
          "Id": "c3756bdc4bd24d99b9f6d918ff21c703",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25bd557e986348ea83af5b327f60c067",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "348f538b7d9d48bebc5279ca33cd91c6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "47934d5b9a774da5ae66494b89a9b9ca",
      "Inputs": [
        {
          "Id": "a7a26310d50c4207a0a2335de12645c5",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2f2b96aee2d94627a38a22be6526da59",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15e534f0c42f4945b545399f32c97916",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c81534cfce5c436092191dc5272f03e8",
      "Inputs": [
        {
          "Id": "37de4ff8272a4664a0e3f49da1def8c6",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "af22b5e47bf14045b41dd0701cd16e5c",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a77f787daee0476ba9abcc92deb71598",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "eac34a76cc5b4584972c74c55c9a0542",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0e257502c59b4043a57b629472e7a6ec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "417ac0e4e12a45289ce4c3e05f38e324",
      "Inputs": [
        {
          "Id": "ec8d914e35ef4b249f663a899dde3d34",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "669e789d1f2e4a0c9f2580d8260708a6",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "904885c623b94ab3aaaccd3005e7ecb9",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "a7456f09296a4efda916c88a65f6814e",
      "Inputs": [
        {
          "Id": "e778fe05512a4f8b80385a65c24396e5",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da13b2125cdd46559b98d98388dae1ee",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb944a6838574f9e862e9bd1082e32f6",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "e5f0035dde104391bca858d7d31896d7",
      "Inputs": [
        {
          "Id": "88f76431bd424c7c8d23052078a921e3",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d9375e4fa63d497aa0901ff96f07d0b6",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8097cf3511e34a62a4f6cf2d13d9c57f",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "d1a91f7deb6740fab0f662eee50a207e",
      "Inputs": [
        {
          "Id": "2c5e08fec4704e96ac49defd717ff126",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "231c98e0ac824a87b30bdfb1e31a1b86",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79d9e08cd3ac4d819ca6d5e013a41a8a",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "c81e3a602d86409498606ebef284e57d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b32a6a9c99be4f0a9e92a86c2d999cf0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "6a400653a9894e30887bc08cf3fb3c3a",
      "Inputs": [
        {
          "Id": "353b988ff364412182e8d1e47b52d4f1",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc4e876a51a747259c9cb1a13d49737b",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee575ea0adba4f3d8e42852d9060f3ca",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2db37825b27e4b38ad0edebecb3a6cfb",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "b75d252d730041618e2e5bd365400a60",
      "Inputs": [
        {
          "Id": "c17a777339de45f5825000ab6559e62b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec55213613ac438e8414f58b962640d0",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f395a840d9c242f1b57d6c6471949c6c",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f300d3497bf4547b896e98056981033",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "276f28a9ec4846dc98d5fa7b5dc28026",
      "Inputs": [
        {
          "Id": "ce32c275ad4749dfa72429b341e48844",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea580cdd26444f8891f1a5237c7f0aff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "76f9db691f334df1b24835d631e9727f",
      "Inputs": [
        {
          "Id": "7f30cb9fec3c4e19b694b63257e0c66f",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d99e86647cb481c9d3f76f696f04adc",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b41d3eb5602e4275b674dbf36d539831",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "9c6ebf6200a2430d95b4d175063645d2",
      "Inputs": [
        {
          "Id": "26b40e17c6414f8fae7fc39c43aa5fbe",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1e1fccdf84c45cab760c1409785d13a",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0021cc1190b4a7687db622660684003",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "beb66cf6843f494983968c3c10289dc4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa5f1269b27d4a31a680a7784a4b98df",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "86bad39e2cb646738363f7204e7106d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "82add18468fe4fc89e5a6af5c90fa8b2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "c260b008a3d342b4a63693f58bf90d5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ac0b5b851d34657a83fb895595b13e1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "ca9db87951fc4053ba679f1245488274",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b26f59e891de48389ae6481b73d97e05",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5be9996e7df6411a9cb202060bc94e33",
      "Inputs": [
        {
          "Id": "25156a3fe9a94e7aa8d962fb6b992dbb",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a194946737b5422fb001ce2638e4b5cf",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "990908cbedc44fcd89ed97c86ec1f344",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "113f622b3fac4680a40b16f15f502325",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3c906670df2b4869b7df6c19dbe932b5",
      "Inputs": [
        {
          "Id": "fcaa7dadd2af4f29823807ac86e84319",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70b87c72d0f944af99de8f4e39c4931b",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec9cdfe9c47f450091c66c4b94bcff1a",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "facac51bf33c4a2392caa74d6dd9158d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4f0c622343bd4025b024c520ed93fb89",
      "Inputs": [
        {
          "Id": "e0bf75bfdf324e099930f76e2b0efca0",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "791ab184383e4c35b7f28bd4903728f2",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74cd58e485394c85ba447ee1aa0bda7a",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0f3e9ed46504be49ec403bedf6f3e3a",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "256dc8dbe96d4c80adfebd19794c2db6",
      "Inputs": [
        {
          "Id": "1d0ef269181c4959bba9ea06bcc07fd3",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d5a3e746cc342b4920916d69b971e2c",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b647b597fccd449a9e80b63cdb609f42",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "78b16759928c456c90d61790ade4712f",
      "Inputs": [
        {
          "Id": "ed1935ae7fda4a68916be84bd1d999ea",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90190671b18a435cb1c26addd3686572",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "100e2cd700264d02a33e7531bc384696",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "d515b1586b744542a207667667668c3e",
      "Inputs": [
        {
          "Id": "f017e58d45c7417d9314038a812255ef",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53057fcfcd20432aa39f0e53b07efbf6",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d4cfb2ba1934c25adc6fed8c96fec5b",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "a48da78d4cb84f179241b2a6d5764335",
      "Inputs": [
        {
          "Id": "d452ca7f49204130b5e4c9cf101964a4",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eef0145eea9841ca8ed8a3eff281dd1b",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "3402ecf2c7944d649301e9890b2e7761",
      "Inputs": [
        {
          "Id": "73fd56bb08454a5fbd6a5a853b2bf964",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf92bc018baa4f938094945a3391a1b4",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "4795a0d54f9048c29485d60bcc31aed7",
      "Id": "3dfaee1036474788860a88a2a74fe780",
      "IsHidden": "False"
    },
    {
      "Start": "00365d5f6f75422f8c6283350f8b70c6",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "90a0a503e9814ac0bc9a4134e5988c48",
      "IsHidden": "False"
    },
    {
      "Start": "1bd2d123c3d94abca7e9992dcda22716",
      "End": "6ae7be74142a47fba54135b055a34926",
      "Id": "3b0c384d6a3946f38b2db725ea0f9d3c",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "f96b73bb21c445a19f87f5609e3e2f67",
      "Id": "70fd202a19ff4348933af5eee5ff6366",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "00992a65f91e4c27ad1f48c9992fbffc",
      "Id": "6ba4f1548de545e79356b840cd5ff72a",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "0dee1010ba38482cad30f4e8524d4f45",
      "Id": "aebd98d2b3fb4ad68403037b75ce9112",
      "IsHidden": "False"
    },
    {
      "Start": "374e1ff6640649faa07f47bcccb7bd7f",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c052f00c89dc4165bbd99e33b7dbfb30",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "873f0d411c3e4fcba23e4a60705fbdf8",
      "Id": "2b2f5d2127af4175ab4526d30de555da",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "eb9f6beadc4f4d60901712fb5b246bc9",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "e5f1d801fbcf40d882f2b21972a4f09b",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "07a779c0eb8b4310a7aea72cada13ae0",
      "Id": "a5868107e5074e52be8e6ffd5a532ed4",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "e54af31a53cc42c199d1a271ef505107",
      "Id": "a8974501d7134715ab1c0cfa0c8f58c6",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "4829426565a8404888a989bc69af587b",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "17061815ca91449883befa22d7ef3c73",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "6bf73b0241bf41b59e70282678d71128",
      "Id": "02b157f4081f4c38a9b300e57e4540af",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "f017e58d45c7417d9314038a812255ef",
      "Id": "9f33451b055944d79cee4665fbf147e0",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "da2a0eda810f434ebc0d145fb9bf6aa7",
      "Id": "898139b3cbb84ab792fe59c821ddea9e",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "00f344350f954a179085a39b3cfb98c4",
      "Id": "847e020970424143a3d3a0e91fe34007",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "369fdb7a392b46fb804ef530bfd503ca",
      "Id": "ca6cbc6660d44fe2af0d8ffb69abf9f0",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "e7a87c70fe5148c59793dad56cad1085",
      "Id": "4182e559623b4aff858b0fdabd3c3e15",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "15d55b6625c34e53ae3d163a72bab25d",
      "Id": "c3908f31583e45008a85eeb338a8b854",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "d8aeaadb26624cd7bd0ffbe2ac707da5",
      "Id": "33b8820781244f2cbe2d3ee0f7eb6f66",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "c4d2dcc387e94a8785ae8dd899ca4ac0",
      "Id": "07f3d16e7bbd4c069bd119d18fd0114a",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "09cadf62a3ad497fa250c0445722c856",
      "Id": "713fbd268eaa4504a99d7243b4f0228c",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "e2fc6d3d80c34171a0c8694f20956430",
      "Id": "17b082b5db5c4ffa8cc3f9898ff4ae07",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "1b688ef88f2849cea8586b891ae4fbce",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "aa4d70959f494cfdade0ec4670e60e76",
      "Id": "905cd00264394cb9870e7e91d60ab025",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "42b5e54d628b45e4bb1d812a1bdd3400",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "f3a45e5f16c74008962aa0e4229c5d04",
      "Id": "30d303cc4898409dab9a7a28b829e8f2",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "a860925db0c242eabac911f5ce7e7ade",
      "Id": "96ec6bdf156845db9bb2ccb179acd326",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "32c5ef28abc04026b8cce414f48ae392",
      "Id": "513ed22f2d59440db9f48a9bb69bc775",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "73fd56bb08454a5fbd6a5a853b2bf964",
      "Id": "d0a31b01d1804cc283e17f082c769084",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "2edc041e63044911ac298aa3b6e87f56",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "716dbdfff7b34f21a2d70e7df269914b",
      "IsHidden": "False"
    },
    {
      "Start": "956ce6b2f3a44fd1add03d79f6a757e5",
      "End": "9260557c56aa427a837ff8328d6f0bc0",
      "Id": "38c3bb0d5beb407fa6554487dc0f5bad",
      "IsHidden": "False"
    },
    {
      "Start": "2ad960e167924ca7891c3170a99ca6d5",
      "End": "35fe42d556bb4d2fa87f919abc4a898e",
      "Id": "7830a00dd05a4d35b00861052c3650a5",
      "IsHidden": "False"
    },
    {
      "Start": "65d77ae3e25247f2a91982d24ca4e5e5",
      "End": "9666db81c3444e0da1ede81e58862eae",
      "Id": "c3eb6ece86d84a4db669cde35e5dba7e",
      "IsHidden": "False"
    },
    {
      "Start": "f66ee711f33948519bc9af2deeda5732",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "3ee81dfc65fb4aacae1331737a8f5827",
      "IsHidden": "False"
    },
    {
      "Start": "28e0124a23fe4c5bbd0611ed2b278a25",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "9f138766ae194e95b6817db66cc608c6",
      "IsHidden": "False"
    },
    {
      "Start": "983c76b632f045ae83f0201e7040ba7f",
      "End": "77759a599d42424bb0cc01233c3cdcdc",
      "Id": "9f8f0f09828a446db3ed30c9499afa23",
      "IsHidden": "False"
    },
    {
      "Start": "affa3f451d6d4d86b8021daee4224c3c",
      "End": "040a0c24ab4f4968887a10af8ca9a276",
      "Id": "441b864925dc4dba824af5e0656e992c",
      "IsHidden": "False"
    },
    {
      "Start": "004601c42df64065b1aa7f9a1d0efda7",
      "End": "72579d76eeee4f98b51fbfccd1fc5f5f",
      "Id": "95ba0d45ca9640c7b4726e7003a1df6f",
      "IsHidden": "False"
    },
    {
      "Start": "33cc9aeaaa6d4d459fbba81765dc3769",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "64761318efe64cd08aef40d91751a856",
      "IsHidden": "False"
    },
    {
      "Start": "33cc9aeaaa6d4d459fbba81765dc3769",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "ffe3d8a3f8854e8ab5cc1c153431c2bc",
      "IsHidden": "False"
    },
    {
      "Start": "15748548c9864e13a26442840c368853",
      "End": "6828fd3147794b02bffb36da46bd75d5",
      "Id": "139d0137d7dd456dbc23cb6ecb9a7020",
      "IsHidden": "False"
    },
    {
      "Start": "bd680d5226f7433d9a08c7599ab6d099",
      "End": "12abfb80ffa74a4c80e36ca5b6059b8c",
      "Id": "4c41fb4cef2b4b278d87e70f3d34ead9",
      "IsHidden": "False"
    },
    {
      "Start": "eae992000a544a4a9022c5a881e42f98",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "52a5ef4200754895a9253f3179514a83",
      "IsHidden": "False"
    },
    {
      "Start": "44f717fef6ef4c4aa2310468f1d83346",
      "End": "7341144e178140008ce175a1cc90483d",
      "Id": "ec2ba4ed744b462785bc8b2bf9e97d96",
      "IsHidden": "False"
    },
    {
      "Start": "dcc785c95b1543ccba55ef006648a317",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "560ca6e02da14801b9f91715bac4d864",
      "IsHidden": "False"
    },
    {
      "Start": "03a292bf41c44239b33ba72d52a4b125",
      "End": "e91bdee91703429b9988ae1a258a1a6b",
      "Id": "7e1e4fbaa2494eb6b968da3337eec19d",
      "IsHidden": "False"
    },
    {
      "Start": "32b6878c25f241ff9acb08141dc79cb6",
      "End": "d8bfbf10b7c8424b9fac8c848d018c12",
      "Id": "96330d94c73b4129bb7d1eaaaf243112",
      "IsHidden": "False"
    },
    {
      "Start": "85c3cea6f14c4645b97378af35150373",
      "End": "575c5e453e48491ca4849b3b94824018",
      "Id": "52c17ee2e8094d508ae9151cb8d88d40",
      "IsHidden": "False"
    },
    {
      "Start": "bb28ecf59dd544ba8096108c244c66ed",
      "End": "ccc5cee4da124b1e9d673ebda520358c",
      "Id": "0b5a964125f6478ea0ddbd82e875c68a",
      "IsHidden": "False"
    },
    {
      "Start": "fe85924cdb9341319b72a7a3dd5c948c",
      "End": "82bc2de00c73425fbeb2ffb5ea77dd60",
      "Id": "7c419594735242cea11cbb29eaa7cdcb",
      "IsHidden": "False"
    },
    {
      "Start": "b67eb3a5c57044d08b88974c90e7ddc8",
      "End": "1399236c209846da966f0b526b1d246e",
      "Id": "6919a4dfd4544a68a665ec8a797e52df",
      "IsHidden": "False"
    },
    {
      "Start": "616972644e294dddab25f53c2d889cd9",
      "End": "ab8671ba22c241598a4f14670b7c8b00",
      "Id": "36005e9b5566469faebcc58d60277f05",
      "IsHidden": "False"
    },
    {
      "Start": "cbedae5d7e814564b28044712b8d21c3",
      "End": "dd292dda75c24b01a212ebcd27758da0",
      "Id": "0565d3842a6b4877a5597b7fb4c296ba",
      "IsHidden": "False"
    },
    {
      "Start": "d68e6933e3254a2eb3c5ab0ce3ad11fe",
      "End": "187f3e7089284aa69d224d4bfad1d2e3",
      "Id": "71b0cdd8bce54e7a96f0e93481cd9b0b",
      "IsHidden": "False"
    },
    {
      "Start": "262a66bd577648cab4d48726f4b3b690",
      "End": "4e808942375249818afb0d8f72634ae6",
      "Id": "72d7674c9a8f4d71816ec92a9995a84a",
      "IsHidden": "False"
    },
    {
      "Start": "6a16097bc2654eeebae443b5ed0ccbee",
      "End": "b119f22fc08d4febbd2871349b16a6e1",
      "Id": "b4e0b1f05fb24a76ad6abe4776dd47b8",
      "IsHidden": "False"
    },
    {
      "Start": "fde792d3ad2d4e7baa3d8bfa617cfca1",
      "End": "5d9b941a517d4c67930dc03707b92f37",
      "Id": "8029614079fc460996f4d1b030e33aa1",
      "IsHidden": "False"
    },
    {
      "Start": "acc5268d43f4482abfda6705e7a3daa7",
      "End": "f86ae3748007431087e0a2c775a98862",
      "Id": "fc87f53a3a404055b39ca6f70c231646",
      "IsHidden": "False"
    },
    {
      "Start": "f3d3dd63e27248fe9289704ea69186e1",
      "End": "3606df721d804995b5e8a33e3def1e73",
      "Id": "4a1af41f75ed446691ea7ec5a02dd774",
      "IsHidden": "False"
    },
    {
      "Start": "ee632e59f2224cb6a86174ec8df0cbdc",
      "End": "ee5c79be0a6845b5991c45ca41bcbe5e",
      "Id": "a209dc5d47c34a61a78de6dec39d1984",
      "IsHidden": "False"
    },
    {
      "Start": "f046b0d7c08e40fda23047c7d9a6e9aa",
      "End": "f9514d03072542c6ac4d84b29213d432",
      "Id": "80fe898665ce442485fb658410a00f1a",
      "IsHidden": "False"
    },
    {
      "Start": "e892284b20524d05ac2b5a1fdf6abcac",
      "End": "1b8ef2042e45400582a83d1e6f03c6d5",
      "Id": "6abef4851e1f493a839c145330e8b739",
      "IsHidden": "False"
    },
    {
      "Start": "5ec5c3d5e7c347f3ae4964785f839f9c",
      "End": "faf19b56ce374c7e8706123140d4e69e",
      "Id": "a702adb1e34247a592ab172f81d061e3",
      "IsHidden": "False"
    },
    {
      "Start": "816894bc3aae4a7bb0d9c1a8c1539e19",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "88fa090d8fb2483db87b85bc2c45e478",
      "IsHidden": "False"
    },
    {
      "Start": "6fbf7723635244339684e4989501af0d",
      "End": "941d1b369d82419e945c713c0989c2c9",
      "Id": "cf46e982ee824f6da80e52cb48bbd1e0",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "caa246d10e054cf9a3fc049da93b5817",
      "Id": "79174663dc5643c88e8132ef3dac978a",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "4d5a3e746cc342b4920916d69b971e2c",
      "Id": "b96a6404eba44c338ace3dbfb32a0ba1",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "90190671b18a435cb1c26addd3686572",
      "Id": "6fc3d6184fb740a2b9d6a7035b0b62cb",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "53057fcfcd20432aa39f0e53b07efbf6",
      "Id": "56df0fa16e2b4b39978ec8d7e8a9bd8e",
      "IsHidden": "False"
    },
    {
      "Start": "aea129e877d84944b5bc93add3f36aa5",
      "End": "a64bb6eeb150413d9e64a94c131cd932",
      "Id": "0e92d995d0dc4af2a50a0ea91c9def23",
      "IsHidden": "False"
    },
    {
      "Start": "7f620fb1fe2041d88167996f7f420a98",
      "End": "9c656ca990e64443a27becdc22266b33",
      "Id": "db72eeec1518442299e56bd9bbd0460b",
      "IsHidden": "False"
    },
    {
      "Start": "41342d6221a34c9289c040872ba58e8f",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "b7d8e9bb516344aaa45078e17f8d55b6",
      "IsHidden": "False"
    },
    {
      "Start": "9eac2467414c416e949276361d8073c1",
      "End": "9f72c5cf556349e19af952862d645344",
      "Id": "141022cec3e1487596e28e4387868aea",
      "IsHidden": "False"
    },
    {
      "Start": "f13acedcaa93452eaa5511159e827cec",
      "End": "09c733e99e24497a9d5d035ab95cd913",
      "Id": "f2548bc24cd24012a1bce6f5abb096c3",
      "IsHidden": "False"
    },
    {
      "Start": "ed60dabd9980412e942723925b431333",
      "End": "b4ba48d41b084aefaef22ec1656d92f8",
      "Id": "c0e857b4894d4220bb389c1af3f464fb",
      "IsHidden": "False"
    },
    {
      "Start": "10f53b4fd6ea473ba16bb4a1f67a392a",
      "End": "9420a650e03b4c338e300b2cfa07531f",
      "Id": "661a56c3b0144a349ff3f15217053741",
      "IsHidden": "False"
    },
    {
      "Start": "6443aa3d38c64403a94655133b74967c",
      "End": "1b65bf3fdd104773a7077d4e94ac26b5",
      "Id": "22bc815fe911425aae27a813563cae38",
      "IsHidden": "False"
    },
    {
      "Start": "ff4f1d049fff4bb184afe92a43d4c058",
      "End": "1a4a00b24589460cadffa49954a4c0df",
      "Id": "73f0340abbbb4e10b3ec930860a08726",
      "IsHidden": "False"
    },
    {
      "Start": "7603807ecae2403b919bcea0308d5e61",
      "End": "9ebb1f33c3e64f33b7f31910a7ddae8e",
      "Id": "da0e920bea3146bfa138439e93271b3e",
      "IsHidden": "False"
    },
    {
      "Start": "8d991fb07fef486bbc333631cdc94b1f",
      "End": "792176cbeae74359a57aa7c45373cfe8",
      "Id": "c368e90960e54d5695c1b4f2083b8956",
      "IsHidden": "False"
    },
    {
      "Start": "558f9279578b4f76898e86fb0da740ed",
      "End": "6dd92879669c4d3eb0200a895493b9d7",
      "Id": "8bcef543870f420188108fdb39acfb46",
      "IsHidden": "False"
    },
    {
      "Start": "d50dda3cd5034b60b54c75e08563f485",
      "End": "02073fc4bc6c440e9ee7a88342953fb2",
      "Id": "7950d204d4f1415187346fea4e181f32",
      "IsHidden": "False"
    },
    {
      "Start": "f335c2c14bed4874b36a15cdbdcae725",
      "End": "d88d2c7964bb4855b1678adffe1a4cbc",
      "Id": "adf81ed2060e4f4388cabcbbd1d57213",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "35bd536b69e64c298380cb7b5a9f00dc",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "bcb23b4b6989451a950b7cf5318cc5d4",
      "Id": "1e6621a8c17b49148152fe6a7b8e33b7",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "ce32c275ad4749dfa72429b341e48844",
      "Id": "bb04793ea45449fe84f11f740cb81a60",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "d452ca7f49204130b5e4c9cf101964a4",
      "Id": "db96b4c6d89c4924bf1433a04706a191",
      "IsHidden": "False"
    },
    {
      "Start": "daae3d5ef27c42e28299f9b22c6d48ac",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "c594e08bdc624413ad9052390db5bb33",
      "IsHidden": "False"
    },
    {
      "Start": "daae3d5ef27c42e28299f9b22c6d48ac",
      "End": "31d398f4d5154e1cab320f0b9308b4a7",
      "Id": "0063719bf86b4de895aaa5d4c3f09e09",
      "IsHidden": "False"
    },
    {
      "Start": "af3f86d9fafb41d2ba4f1340183924d3",
      "End": "371a45db50b8415ba5561374ec8bc5d4",
      "Id": "7ea8b71664214b08b7b2d83b2bc25b23",
      "IsHidden": "False"
    },
    {
      "Start": "ac2ed70c911e4a888969fbcdec17e938",
      "End": "a09788801aa9465fa88268d7a23c4cc7",
      "Id": "4296b835dd5847d1abd3a6480440db88",
      "IsHidden": "False"
    },
    {
      "Start": "bd1ee8c3852a45389c2fb13b11315484",
      "End": "86269713d10d47ef9e14d9b3a635614f",
      "Id": "bee2226669644c02910bede7880c6844",
      "IsHidden": "False"
    },
    {
      "Start": "bd1ee8c3852a45389c2fb13b11315484",
      "End": "e239eb28de41475eb319aa2269af89e8",
      "Id": "e3ac92ecc9e3484dbcab13641e432aa9",
      "IsHidden": "False"
    },
    {
      "Start": "cce3e0a0194d444bb75227354989c384",
      "End": "44111bdf57c84068a986c4b6039cabd9",
      "Id": "819e6c3febc84a3b9905157c1fa91bf3",
      "IsHidden": "False"
    },
    {
      "Start": "e4609d12dfcb4c2c8bc559ee08265e2f",
      "End": "70c2134bf0454c96aa3df06bdfa570b9",
      "Id": "28d50661776b4040889569c2d169d47c",
      "IsHidden": "False"
    },
    {
      "Start": "bf90d0937cff4694a918b0bd87f7058d",
      "End": "e156d5f2040e434a95c2171f30f448b8",
      "Id": "b40c8b99a8374cb2adbc4664bc5802e4",
      "IsHidden": "False"
    },
    {
      "Start": "fd379f901d3145229a8896af8e659f39",
      "End": "42d71a5ab50c422595f7ddacd591d61f",
      "Id": "4ef139f89c34487f945b9576ac13df53",
      "IsHidden": "False"
    },
    {
      "Start": "74d0194c97164d2d8589660bb89f6831",
      "End": "f2adfac348e345cdb6f3b485948d0646",
      "Id": "16422268c25f4f7cbdb2c7d6d69105fc",
      "IsHidden": "False"
    },
    {
      "Start": "c71ddd72789b4196bf505565319c6e6d",
      "End": "9d306e99971445948957abc4e94f8721",
      "Id": "8d095105fb2d462dbea8d5fb8841444f",
      "IsHidden": "False"
    },
    {
      "Start": "e52045d5302446ff903091edf23d02f9",
      "End": "a94cc13416394dbda31e75a708bd36dc",
      "Id": "278048aedc9541e299c871d6b9d0778c",
      "IsHidden": "False"
    },
    {
      "Start": "e52045d5302446ff903091edf23d02f9",
      "End": "83750f871115424fa7def38136a4c63b",
      "Id": "96be2a94236f43cb92a72e459aee7a69",
      "IsHidden": "False"
    },
    {
      "Start": "bfc85cbe14564ed6bed6a0e789313bcc",
      "End": "d6511af2b502466884a14c5855394bde",
      "Id": "e02f6b8c6ab14051afb1ded1dd3ba036",
      "IsHidden": "False"
    },
    {
      "Start": "bfc85cbe14564ed6bed6a0e789313bcc",
      "End": "198b1e7a7f5c4ca09ded4e82c9b9e8c3",
      "Id": "07f4cbce3bc748558a4eccf4d0de353c",
      "IsHidden": "False"
    },
    {
      "Start": "45638181496847459f9ff8b6f2cbe3ba",
      "End": "16c18040e72340c1a2badbca97f4b36e",
      "Id": "47c729b09dea48ea9ab216ec51938733",
      "IsHidden": "False"
    },
    {
      "Start": "45638181496847459f9ff8b6f2cbe3ba",
      "End": "9c50feeb52d84081bab3a957807e103f",
      "Id": "cb32770100934ec881eeb5664a145f4f",
      "IsHidden": "False"
    },
    {
      "Start": "a9e80daf9fe64059869caf47ff332807",
      "End": "a09a9bf0ea524089979d5c0445447ceb",
      "Id": "9068ad71345441e49eabe32a82a55006",
      "IsHidden": "False"
    },
    {
      "Start": "a9e80daf9fe64059869caf47ff332807",
      "End": "c25430918faf4ca8bd659473945ded04",
      "Id": "5432f0139c644be5af0917e407c4a500",
      "IsHidden": "False"
    },
    {
      "Start": "1578aceccb524d5ab8f08431accc97d2",
      "End": "561de7a62c5d4b698e562d75921d5150",
      "Id": "28032cd2b9524e6ea8b6f7a9b005a6b5",
      "IsHidden": "False"
    },
    {
      "Start": "1578aceccb524d5ab8f08431accc97d2",
      "End": "cfce46dc5abc4a79a33399e8b8205509",
      "Id": "898395d384c541abbad856443255e731",
      "IsHidden": "False"
    },
    {
      "Start": "2d0de146cebf4a958078ff4dd43a3f5c",
      "End": "baeb1788523441cdb2c032eb490bdaf3",
      "Id": "1ab3b43ca3ed4da58d25f8f7ea4e0e3f",
      "IsHidden": "False"
    },
    {
      "Start": "0b21480f6ea14285b6579efd94e87d32",
      "End": "a59a997eb8a84d2d99b3fa341c8b442a",
      "Id": "97f73904ff574ed1b4fc0992c4cd4647",
      "IsHidden": "False"
    },
    {
      "Start": "5eb3b6f24fb948b5976f0b6e94084dfe",
      "End": "03362dd0d0a845ec825c9f233c9a3357",
      "Id": "aab2551b2ce74c3d9b8aa3a4f474dc53",
      "IsHidden": "False"
    },
    {
      "Start": "62f1fc9f7cae44398ade19fa07d63fbc",
      "End": "cbdbaa73a2514f49b02c066fd978888e",
      "Id": "3a3f5fc2e9894be1a00abb1768cb08aa",
      "IsHidden": "False"
    },
    {
      "Start": "62f1fc9f7cae44398ade19fa07d63fbc",
      "End": "8243cd424878419e9bb4c433d6461700",
      "Id": "8d2dcbd78e9249e59eba6edeae5d9a60",
      "IsHidden": "False"
    },
    {
      "Start": "dd1aad2401384d08be36f03194f5ef92",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "f1bb147cbfc245afbd1388df307eb017",
      "IsHidden": "False"
    },
    {
      "Start": "b98d3932284c42deae34bbbbcdffea9e",
      "End": "1b3ebbe1f0674ad5adef22083287fd16",
      "Id": "4c7a2ae9576047b2b58223d2f1cd2892",
      "IsHidden": "False"
    },
    {
      "Start": "3d438ff0f6b34dbd976c71ac82066015",
      "End": "32760aa9a36c486aa0e34ba9f31b3c85",
      "Id": "dbbe71d6c29e40d99a8b9fb906fb6e23",
      "IsHidden": "False"
    },
    {
      "Start": "0b851152de00432685a4368396124109",
      "End": "a194946737b5422fb001ce2638e4b5cf",
      "Id": "3b7bfb7688154ab28e978800d48d5e85",
      "IsHidden": "False"
    },
    {
      "Start": "a19481acf2664d5ca90f061b7baab66c",
      "End": "0ca8d39b95c04abdb5646f0538bb3927",
      "Id": "0dcc2beb88244263bc17912fa0b4b97d",
      "IsHidden": "False"
    },
    {
      "Start": "a19481acf2664d5ca90f061b7baab66c",
      "End": "f561c6d1258045f39a6191e88ff60750",
      "Id": "834b5b89e77c447a9804986e7752ca45",
      "IsHidden": "False"
    },
    {
      "Start": "a8ed901cb6fd4e0fbc649f1b3aa1eaf9",
      "End": "463693733fee4f5a819e55724facd484",
      "Id": "eb9290cd3f1b45a8b5d09ee4d0a28219",
      "IsHidden": "False"
    },
    {
      "Start": "808e93a01f1c46e5b8cc93d560be58c6",
      "End": "ec8d914e35ef4b249f663a899dde3d34",
      "Id": "93728b77c32f464383bf8029f90ddbc4",
      "IsHidden": "False"
    },
    {
      "Start": "4b2b47ad040c42549da564973a7968e0",
      "End": "cde3b15449db4cf9a70997ee94916a3c",
      "Id": "b3d516779afb4fe1ba8ce44fd77622e9",
      "IsHidden": "False"
    },
    {
      "Start": "44b86de2b8634ba9ab0397bdd8ef94b5",
      "End": "c5b5b2d7ac2f4373a6f8462a6d6e2654",
      "Id": "1adef8146e69454abc8dbaded1f78573",
      "IsHidden": "False"
    },
    {
      "Start": "44b86de2b8634ba9ab0397bdd8ef94b5",
      "End": "a41f0501a55c450da7e91e0f76683d61",
      "Id": "b5061abfc0dc495e963672e8850ccfc0",
      "IsHidden": "False"
    },
    {
      "Start": "097bcd1a1af54a788316b332f6e9bbc3",
      "End": "af22b5e47bf14045b41dd0701cd16e5c",
      "Id": "60c69dd3dfb84cfcace50703acaff508",
      "IsHidden": "False"
    },
    {
      "Start": "d8bcf8ff406e448e9346da686d75cc09",
      "End": "2f2b96aee2d94627a38a22be6526da59",
      "Id": "3c299c6742204d5f8c72b253a1618d27",
      "IsHidden": "False"
    },
    {
      "Start": "5752ec9567234f489c91b0ccb2460d30",
      "End": "43b9b2f3558c42319ef8e4515273cb64",
      "Id": "b31ef37897194ed29316b9617247884b",
      "IsHidden": "False"
    },
    {
      "Start": "d4516d2e2a8a48c6aee14b2d9735b126",
      "End": "56705caccb0e41a0bd37f051edaae3a1",
      "Id": "9649a10ee8894690ad6cd462868609d6",
      "IsHidden": "False"
    },
    {
      "Start": "188fc378add1479fa63773c01988bc23",
      "End": "20bf414958544dcf8e700bbdd66e9d25",
      "Id": "e31aa78e31474808aed00efaba47f45b",
      "IsHidden": "False"
    },
    {
      "Start": "dd17765028fc459da27347f9b0313b6b",
      "End": "ed25caafe2ca4feaac341651a55aed2e",
      "Id": "43926dcc64db4e238a981e91095ec257",
      "IsHidden": "False"
    },
    {
      "Start": "340e20ef8573457796af264ebe3f2d1c",
      "End": "c3756bdc4bd24d99b9f6d918ff21c703",
      "Id": "1c7f1a80bebb407db02c87a53c6fa2cd",
      "IsHidden": "False"
    },
    {
      "Start": "348f538b7d9d48bebc5279ca33cd91c6",
      "End": "26b40e17c6414f8fae7fc39c43aa5fbe",
      "Id": "ae77a73a73974bb6bd8074dc623b9977",
      "IsHidden": "False"
    },
    {
      "Start": "15e534f0c42f4945b545399f32c97916",
      "End": "fcea08de164e4597aa903a82117a7f7b",
      "Id": "01cc2f0773c64b04908c11201e93d981",
      "IsHidden": "False"
    },
    {
      "Start": "a77f787daee0476ba9abcc92deb71598",
      "End": "13a9353fee124ed0ac31d36b187cd18d",
      "Id": "e720508418744ed7b57514be0da6b200",
      "IsHidden": "False"
    },
    {
      "Start": "0e257502c59b4043a57b629472e7a6ec",
      "End": "37de4ff8272a4664a0e3f49da1def8c6",
      "Id": "c11baeef2d884482881d9cd6a409fcbb",
      "IsHidden": "False"
    },
    {
      "Start": "0e257502c59b4043a57b629472e7a6ec",
      "End": "a7a26310d50c4207a0a2335de12645c5",
      "Id": "cabaa09f176b47d18f279fcc634b3226",
      "IsHidden": "False"
    },
    {
      "Start": "669e789d1f2e4a0c9f2580d8260708a6",
      "End": "88f76431bd424c7c8d23052078a921e3",
      "Id": "7f19eb3df45c4c33977c537011c7ed15",
      "IsHidden": "False"
    },
    {
      "Start": "904885c623b94ab3aaaccd3005e7ecb9",
      "End": "e778fe05512a4f8b80385a65c24396e5",
      "Id": "8b993607c5234281bbee4b416b9036f6",
      "IsHidden": "False"
    },
    {
      "Start": "da13b2125cdd46559b98d98388dae1ee",
      "End": "2c5e08fec4704e96ac49defd717ff126",
      "Id": "75ea478d2c8446a8a8cae61bc5f5da59",
      "IsHidden": "False"
    },
    {
      "Start": "eb944a6838574f9e862e9bd1082e32f6",
      "End": "353b988ff364412182e8d1e47b52d4f1",
      "Id": "e332077e5bc64e1aacbbcaadca26e9f2",
      "IsHidden": "False"
    },
    {
      "Start": "eb944a6838574f9e862e9bd1082e32f6",
      "End": "c17a777339de45f5825000ab6559e62b",
      "Id": "8f1b2b9bc08f49fb867830161d387f67",
      "IsHidden": "False"
    },
    {
      "Start": "8097cf3511e34a62a4f6cf2d13d9c57f",
      "End": "6d99e86647cb481c9d3f76f696f04adc",
      "Id": "c907f2f075574cd2880e120a14903e53",
      "IsHidden": "False"
    },
    {
      "Start": "79d9e08cd3ac4d819ca6d5e013a41a8a",
      "End": "d9375e4fa63d497aa0901ff96f07d0b6",
      "Id": "494d945b2f2e40db836a89ec8db8c648",
      "IsHidden": "False"
    },
    {
      "Start": "b32a6a9c99be4f0a9e92a86c2d999cf0",
      "End": "fc4e876a51a747259c9cb1a13d49737b",
      "Id": "2209541e43b14f8f8ae04b9796e2cfeb",
      "IsHidden": "False"
    },
    {
      "Start": "2db37825b27e4b38ad0edebecb3a6cfb",
      "End": "ec55213613ac438e8414f58b962640d0",
      "Id": "e8d455c0766b42e2bd9f67de0e271664",
      "IsHidden": "False"
    },
    {
      "Start": "f395a840d9c242f1b57d6c6471949c6c",
      "End": "231c98e0ac824a87b30bdfb1e31a1b86",
      "Id": "bd69b1d337c44f53a6df76e80bb439c3",
      "IsHidden": "False"
    },
    {
      "Start": "ea580cdd26444f8891f1a5237c7f0aff",
      "End": "7f30cb9fec3c4e19b694b63257e0c66f",
      "Id": "175ff3c27ec64381afab0eb977af8952",
      "IsHidden": "False"
    },
    {
      "Start": "b41d3eb5602e4275b674dbf36d539831",
      "End": "c1e1fccdf84c45cab760c1409785d13a",
      "Id": "578ff2dc061448e9b80e7420cf041779",
      "IsHidden": "False"
    },
    {
      "Start": "aa5f1269b27d4a31a680a7784a4b98df",
      "End": "32e63081b18b40ad8aa2e298ea09bcaf",
      "Id": "57519d53f62b4848823eb895195954ce",
      "IsHidden": "False"
    },
    {
      "Start": "82add18468fe4fc89e5a6af5c90fa8b2",
      "End": "990908cbedc44fcd89ed97c86ec1f344",
      "Id": "794200677ef74ab68709521fd887d6dd",
      "IsHidden": "False"
    },
    {
      "Start": "7ac0b5b851d34657a83fb895595b13e1",
      "End": "ec9cdfe9c47f450091c66c4b94bcff1a",
      "Id": "03de21242f374ddf813fb11ab5cc0391",
      "IsHidden": "False"
    },
    {
      "Start": "b26f59e891de48389ae6481b73d97e05",
      "End": "74cd58e485394c85ba447ee1aa0bda7a",
      "Id": "534e000806b34d73acb3755629dcad32",
      "IsHidden": "False"
    },
    {
      "Start": "113f622b3fac4680a40b16f15f502325",
      "End": "70b87c72d0f944af99de8f4e39c4931b",
      "Id": "ba0da01cc4ec40d1a7d69663622ffd15",
      "IsHidden": "False"
    },
    {
      "Start": "facac51bf33c4a2392caa74d6dd9158d",
      "End": "791ab184383e4c35b7f28bd4903728f2",
      "Id": "72714dff6a514a76a18b09251f14076e",
      "IsHidden": "False"
    },
    {
      "Start": "b0f3e9ed46504be49ec403bedf6f3e3a",
      "End": "7e1f0202d36a4fb8a34990f78511a637",
      "Id": "1cf63117c44f45abb8a7d9ba49480ad4",
      "IsHidden": "False"
    },
    {
      "Start": "b647b597fccd449a9e80b63cdb609f42",
      "End": "25156a3fe9a94e7aa8d962fb6b992dbb",
      "Id": "865383c5f043421696f6aa67f134afb4",
      "IsHidden": "False"
    },
    {
      "Start": "100e2cd700264d02a33e7531bc384696",
      "End": "fcaa7dadd2af4f29823807ac86e84319",
      "Id": "a47c1f9870d44108bf30f6d10bd2a4ef",
      "IsHidden": "False"
    },
    {
      "Start": "1d4cfb2ba1934c25adc6fed8c96fec5b",
      "End": "e0bf75bfdf324e099930f76e2b0efca0",
      "Id": "75c47f72c9de4dacafa98912fed7af13",
      "IsHidden": "False"
    },
    {
      "Start": "eef0145eea9841ca8ed8a3eff281dd1b",
      "End": "1d0ef269181c4959bba9ea06bcc07fd3",
      "Id": "32eb548e35174062b0002d28ecc69b0b",
      "IsHidden": "False"
    },
    {
      "Start": "bf92bc018baa4f938094945a3391a1b4",
      "End": "ed1935ae7fda4a68916be84bd1d999ea",
      "Id": "c31d7230a8974f07802d6b6b7045241c",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9Tt1G6oJZlhjaSRgiKMlj0FMtbyO8jLxlsA7SroVYH0KkAj8fWrAtbqN1RbqN1AEu6jdUW6jdQBLuo3VFuo3UAS7qN1RbqN1AEu6jdUW6jdQBLuoqLdRQBzHibU7nQ76x1OWA3WhwhhepGC0kB4KThR99Vw24ckAhh905354lvY4r+wkjlZ0VlZGBSeM8jkcHg5B9/Qmm7q5OORvhvcSTRqz+FZpC80KjJ052PLoP+eRPJUfdJJHGQG12Edbb3K3Ee5cjBwytwVPcEetSbqZeWpmIvbMq8jKMqCNsy9sH19D+B9RDBcJcRLImdp7EYII4II7EHgjsRQtRlndRuqLdRupgS7qN1RbqN1AEu6jdUW6jdQBLuo3VFuo3UAS7qKi3UUAR7vekYB1KsAysMEHkGmbqN1VYRz1ldN8ProRSMT4WmOFY8/2c5PQ+kJ9f4D6L06nULFg5vLQbnbmWJTxKMcEf7QGMHuOD2IqyKs0bI6K6MCrKwyCD1BFcXofjBPA3iGfw/fMf+Ef81YrK6dsm0ZlVhE5/555bCt/DwDxgjCpONOzk7XdvmaQpyqX5VeyudfpuqW2rW3n2sm9AxRgylWRgcFWU8gj0NW93vXnPg258aavo8/iPXfCsfhTxCbuSKXRY71J1v7dQCkispwsgG5efveWTwGAHb6ZqtvrFlHdWr+ZC49MEHuCOxHpRCd3yS3/P0/rQqUFbnjt+X9fiX93vRu96j3Ubq3sYkm73o3e9RNIEUsxCqBkkngVVj1WG44tQ98eg+yqXXPoXHyg/UigC/u96N3vUEdrqd192GGyQ/wAU7eY4+qLx/wCP/wCFTp4dEnN1e3E/fZG3koD7bMNj2LH8am6AN3vRVSRG0m8S1kYtby8W0sjlmJwSYyT1IAJB6kA55UklNagO3Ubqi3UySdIY2kkcIijLMxwAPUmqAsbq8u8YRpPrmqxyKHRnQFWGQR5SV6JFfC6x9khnvc/daFCUb1xIcJ/497deK868VmSHXdTNygt28xPlZwcZiTGSOM/Qmvms/f8Asqt/MvyZ9Dkf+8v0/VGFpuj+H/FHirwenjET3B8N3n2rQb3z2QRSHaRDNg/MoaOJlJ7oFJKkg7eg+OtVm0ufxXrHhW58EXc+qPYzaBdy+bJexrtAuowEGGBZgcAqwTIJypOZH4O1bxFGUttLuJoZB9+RfLQj1DNgH8DW5H8LdRha2vvFvii1gityiQtM+4iNcERlmKqCMHkA56nJyT5+ExuNrYfk9k3NNWk9F66/0zvxWDwVHEc/tkoO947v0su/4Ho0Zvbr/j2sJNp6SXR8lffIOXH/AHz/AI1Zj0O9m5uL1bdeuy1jBYH0LvkEf8BB6fjjal8XNCs8rbfaNRf/AKd4tqj0+Z9oI+ma5jUPi5q15lbO1ttPQ8bmJmf6g/KB9Cpr7G8mfHnpUPhvT42DPb/aXByHumMpU+q7idv4Y6D0qHUvGOi6TI0dxqMPnKcNDFmWRfqiAsPyrxm+1jUdYz9vv7i7DdY3fEZ9PkXC/pTLdFjVVRQqjgKowBU27hc9Gvfiipythpsjnp5l1IIx7EBdxP0O2sW68Xa1qOQ96LZDwY7OMRgj3JLMD7giucWZFkSMtmRvuxjlm9gOp/Ct7T/DOs6hgw6dJEh48y7PkqPqD8//AI7QBe8IRrJql/NLunnEcX76ZjJJyX/ibJ7Dv2FFXdP0ibwxqAW+ubdpb9QkUcJOVKBmI55bIJOcADGD2JK1WwF+zhN9qslpcXzWpYeZbRwKoaRAAHyWzkgnsBgMOTzjoLXw7p1rIsi2qySqcrLOTK6/RnJI/A1438XtSudJm0C9s5mt7qCaR45U6qcL+Y7EHggkGvONW8Uax4iLf2nqd1eqxyY5JD5efUIMKPwFDi31JufS2sfErwzomVuNXt3kGcxWxM7g+hCZ2/jj9K4DU/jNpiX0l3pPh5HvX63t4ER8425+XcWGABywrx6PpVyzhkurhYLeKS4nbpDChdz9FHJqXTj1GpNbHZal8UPEusFg2ofY4m6xWSCMfg3Lj/vr9OKwNzXE5nmdpp2+9NKxd2+rHk10Gj/C3xLqu1vsC2MTciS+kEf/AI6MuD9VFdTb/CnTNJZRrev4mK7ltrRVVz7AHczjg9FB4p6LYDz5WCKWYhVAySegrV0nSb/WMfYLG4vFPAkiQ+Xn03nCg/U16ZYab4f0llbS/D32iRSClzfZ4x6GTdIpz/sjp9DWlNqmqXX3rpLReoW1jBYexZ8hvqFX+lKzYHH6f8L9Xmj829uLXTIQNxLkyuoHXIGFH1DGtSz8LeGbTG+5vNcmxwLdiI93cBo9qj6Ox/ProNYwyuHnVrp1OVa5dpSp/wBncTt/DFWd1Vy9wHWl2bGNo9K0mz0mJucso3cf3kTA/Hef6U2X7Xdc3N/cP32Qv5KqfbZhsexY/wBaN1G6q5UAlvZwWe7yII4N33vLQLn64opd1FMR5x8S/DereJL3TbawhkvJGkfyow0aIo2KSCWx83ysevI6Diq+l/APUhCbjWNVs9LhUbmCAykezElVX6gkV6FNGs0ZRi2Mg5VipBByCCOQQecio/scLSrLIGnmU/LLcO0rr7BmJIHsPU0NPoBj6b8P/BOk4KxXniKYfdZnLRn1wV2RN9CT0x6101tqctjb+RpWmWOkW2dwXZn80TaAenIY9Kg3e9G73o5O4x0zXF3/AMfV9czj+4H8tfcEJjcP97NJb28NopWCJIVJ3FY1Cgn14pN3vRu96rlSES7qN1Rbvejd70WAl3Ubqi3e9G73osBLuo3VFu96N3vRYCXdRUW73oosBFu96N3vRRTAN3vRu96KKADd70bveiigA3e9G73oooAN3vRu96KKADd70bveiigA3e9FFFAH/9k=",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2428.8874997344151,
        "Y": -878.4350657603942
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2070.8874997344151,
        "Y": -878.4350657603942
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -908.19051859554088,
        "Y": -792.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1162.1905185955409,
        "Y": -758.35858560623853
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -415.19051859554088,
        "Y": -502.35858560623853
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Main beam Slope Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -415.19051859554088,
        "Y": -350.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Main beam Slope Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -415.19051859554088,
        "Y": -198.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 657.80948140445912,
        "Y": -242.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 106.80948140445912,
        "Y": -242.35858560623853
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5906.0802945209361,
        "Y": 654.28346842220537
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3389.2140542700804,
        "Y": 676.52349269306956
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3836.2140542700804,
        "Y": 700.89566448912115
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4686.1806288920925,
        "Y": 740.50681605512773
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4432.1806288920925,
        "Y": 774.6468160551276
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5101.1806288920925,
        "Y": 497.85007681315676
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5101.1806288920925,
        "Y": 983.16355529709858
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5516.3642503999536,
        "Y": 835.0406041570468
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15188.255081855054,
        "Y": 418.42627674163828
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7052.3641213040755,
        "Y": 375.5605063438594
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6798.3641213040755,
        "Y": 409.70050634385939
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7467.3641213040755,
        "Y": 375.5605063438594
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7815.3641213040755,
        "Y": 375.5605063438594
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7472.520839040586,
        "Y": 41.1903001905244
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7057.520839040586,
        "Y": 41.1903001905244
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7820.520839040586,
        "Y": 41.1903001905244
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6803.520839040586,
        "Y": 75.330300190524383
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8123.3641213040755,
        "Y": 375.5605063438594
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8128.520839040586,
        "Y": 41.1903001905244
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7068.6043858228386,
        "Y": -594.60553020447878
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6814.6043858228386,
        "Y": -560.4655302044788
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7483.6043858228386,
        "Y": -594.60553020447878
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7831.6043858228386,
        "Y": -594.60553020447878
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8139.6043858228386,
        "Y": -594.60553020447878
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7234.0172957332816,
        "Y": 953.279123380025
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7712.0172957332816,
        "Y": 953.279123380025
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8761.0172957332816,
        "Y": 953.279123380025
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14538.255081855054,
        "Y": 418.42627674163828
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7190.45163896634,
        "Y": 1442.8891610005608
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7626.45163896634,
        "Y": 1425.8891610005608
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8016.45163896634,
        "Y": 1411.7038553789923
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8324.45163896634,
        "Y": 1411.7038553789923
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6819.0172957332816,
        "Y": 953.279123380025
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6565.0172957332816,
        "Y": 987.4191233800251
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 133.35852503652325,
        "Y": 1136.0636582818879
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2362.4877458223314,
        "Y": 1113.6287032593432
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1851.4877458223314,
        "Y": 1187.6287032593432
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1428.4877458223314,
        "Y": 1187.6287032593432
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2873.4877458223314,
        "Y": 1113.7687032593433
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2870.6039274373443,
        "Y": 1266.0736017363879
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3703.3830927555209,
        "Y": 1054.1288469155588
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3725.2283242601088,
        "Y": 1395.2074349579352
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 106.80948140445912,
        "Y": -493.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "41563a8003714c4aa18135c3678b78ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2583.8830949157118,
        "Y": 157.3311297130121
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "9d1cec5ec9ad4df5b4536a3603d17fab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -415.19051859554088,
        "Y": -718.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db13cb72be7e4d458bc9a1e8e171c01c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -908.19051859554088,
        "Y": -610.35858560623853
      },
      {
        "ShowGeometry": true,
        "Name": "3.1. Diagonal beam Slope Angle (degrees) from",
        "Id": "b3c95697e6434508865fdae8d3004ce9",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 106.80948140445912,
        "Y": -90.498585606238521
      },
      {
        "ShowGeometry": true,
        "Name": "3.2. Diagonal beam Slope Angle (degrees) to",
        "Id": "58fe1afbbe604fb2b32af81f27d247b3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 106.80948140445912,
        "Y": 60.501414393761479
      },
      {
        "ShowGeometry": true,
        "Name": "4. Library file path",
        "Id": "d4aa9022c65b43829a11aebf1c816525",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4785.2283242601088,
        "Y": 1429.2074349579352
      },
      {
        "ShowGeometry": true,
        "Name": "5. Connection family to place",
        "Id": "72fe204d3a844a1097b09048ecf1f7df",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6323.0691579078511,
        "Y": 921.2213024038756
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "81761ea300ba405aad83f5b8fa2e9f5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4490.3830927555209,
        "Y": 1088.2688469155589
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "8a92947807364762874c012b8432daa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3039.8830949157118,
        "Y": 216.3311297130121
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91c70c5dda0243e7b4e8f92de39246b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2583.8830949157118,
        "Y": 309.47112971301209
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "3ce9b8b19a9b469f905db02517f9d17f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4236.3830927555209,
        "Y": 1054.1288469155588
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "71ca4d37985a4d5181639a072b928286",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4258.2283242601088,
        "Y": 1395.2074349579352
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "1fc1ba03bc174352898611929e5b7761",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8148.0172957332816,
        "Y": 953.279123380025
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "4e121fc4004d4dfeaed4d7cb1c40d24e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8453.0172957332816,
        "Y": 953.27912338002511
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "16a4ae907f6040939207eb105a030e63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9879.4202448897286,
        "Y": -54.863971371209345
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "eb888b92c99743fcbb24631dd387cf2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10687.420244889729,
        "Y": 127.13602862879065
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "352392610eef4466af95cbb801d891d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11091.420244889729,
        "Y": 218.13602862879065
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "de9e20a0d72642f6948bb159f1bc7377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9534.4202448897286,
        "Y": 137.13602862879065
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "783f910f186b4dd1a7e05475f1ff7d88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10283.420244889729,
        "Y": 252.13602862879065
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b224c11463074a8f84a2b5448d51cacd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10687.420244889729,
        "Y": 343.13602862879065
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "abd49926613647e28ed35eef6d8e5166",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10549.45475646406,
        "Y": 1184.9755309084514
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f0d13bb5ef2d47a9b119a24296180e40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9741.45475646406,
        "Y": 1001.9755309084517
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "8a9e83016d1a47379a7215ac64a279a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10145.45475646406,
        "Y": 1092.9755309084517
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "e20d82ca66d348fc946d9333a6ac10eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11355.395820732901,
        "Y": 1155.599595958118
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a7734101dcd84f5ba62334e0edc03b7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11101.395820732901,
        "Y": 1155.7395959581183
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "e3b26e6a784047d6aff33fd85a7d6192",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11777.395820732901,
        "Y": 1170.599595958118
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1fe67851ffbb4a079795bff6a90ed319",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11355.395820732901,
        "Y": 1372.599595958118
      },
      {
        "ShowGeometry": true,
        "Name": "Template for totals",
        "Id": "e87d7cc83f3344b1b6f79db6de5c1ff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9534.4202448897286,
        "Y": -212.86397137120935
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4776ded489f3423ca4ab3b2e47c916af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9381.45475646406,
        "Y": 1137.9755309084517
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e2c179b37dd048cf8e145790b98e093c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10145.45475646406,
        "Y": 1310.9755309084514
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7fb8e8e7797e4c8ea58405566c689f1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9741.45475646406,
        "Y": 1217.9755309084517
      },
      {
        "ShowGeometry": true,
        "Name": "Template for each row",
        "Id": "b93a44df7d78450eb26ec38df963e5ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9381.45475646406,
        "Y": 899.97553090845179
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "07d5b41cb10f4d1287a6b4f949a80f2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14785.255081855054,
        "Y": 418.42627674163828
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6773675f29024074b6c7dd0276324186",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12467.799956369916,
        "Y": 1371.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fa9e126e6b604ec0868b4f83cec7ca36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12467.799956369916,
        "Y": 1220.2059925389553
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "7307549c111a48bb933541f1410524d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12775.799956369916,
        "Y": 1359.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "adcd5aca8efc43cb8f198c5049189c01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12775.799956369916,
        "Y": 1540.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c2e01f29f1f441abbf4883ae6efcc2be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6775.45163896634,
        "Y": 1442.8891610005608
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f442c2e083f24b9784c828e62564cf68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6521.45163896634,
        "Y": 1477.0291610005611
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b39ac2ba3cad4761a51afe5992f2c0f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6826.5581370945547,
        "Y": -242.34070719534179
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "94b5c9ddcc3b453aa71aa87cba3d8dea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7495.5581370945547,
        "Y": -276.48070719534178
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "0ca716511615489a94498944fa33025f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7843.5581370945547,
        "Y": -276.48070719534178
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "56dc77dc760b4654941114614e1a1a9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8151.5581370945547,
        "Y": -276.48070719534178
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "fb52f919084343e78739ebcb2f929bdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7080.5581370945547,
        "Y": -276.48070719534178
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "874243ae20314320a4be3a056459108a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10283.420244889729,
        "Y": 36.136028628790655
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b8702b8cbbb3479aa85880aa02d60c9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9879.4202448897286,
        "Y": 161.13602862879065
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "4c3e5449548c43d5969f569cfbfdef61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1550.5203154976903,
        "Y": 911.71378197549984
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "75f2eed080404f728ce905cdd642fa03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1926.5203154976903,
        "Y": 970.71378197549984
      },
      {
        "ShowGeometry": true,
        "Name": "6. Filter connection type name",
        "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1153.5203154976903,
        "Y": 1004.7137819754998
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "e3bbf2e4ee93414fa45f87529c7a31af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2513.5203154976903,
        "Y": 936.71378197549984
      },
      {
        "ShowGeometry": true,
        "Name": "7. Select analysis results",
        "Id": "df79766745b34d1e9cd497f983e0cbf0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3389.2140542700804,
        "Y": 828.895664489121
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "93b5b4f65e7743f09b97eaea66310a4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1550.5203154976903,
        "Y": 1063.7137819754998
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "70db52313bda4962a79fd557505303fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2242.5203154976903,
        "Y": 970.71378197549984
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenBeams",
        "Id": "a8f8ba08b6ab411ca499a39198645eda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1076.8094814044591,
        "Y": -147.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "de1ec3ab5688432499ac4a2ba6a62423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 657.80948140445912,
        "Y": 9.0614143937615381
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenAxes",
        "Id": "bbd6b649fa3540a99a0323de113ca23b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1511.8094814044591,
        "Y": -135.49858560623852
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenAxes",
        "Id": "202114e964734a85baa39c93749c7841",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1511.8094814044591,
        "Y": 220.50141439376148
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c070ce67325942558c952470738463c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1076.8094814044591,
        "Y": 139.20141439376152
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5b32b9d6c6be400581317c8470fd3296",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1076.8094814044591,
        "Y": 351.78141439376145
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "bb7aaad814d44d86b6891b36a727c9ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1946.8094814044589,
        "Y": 25.501414393761479
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "eab79953ace84195b27f18dc34e473ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5933.0691579078511,
        "Y": 989.2213024038756
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "c2d0647d5c7141268742ced6f27c026e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -381.64147496347675,
        "Y": 1170.0636582818879
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "f93a9da94ce5442f87b63b3d099cf1af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -817.64147496347675,
        "Y": 1170.0636582818879
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "462a2b93e3064d7ca8c892056f98b95b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1153.5203154976903,
        "Y": 1156.7137819754998
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "97f5b817abab4350b9a29a5ac40cb59d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13118.799956369916,
        "Y": 1406.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "62c3464bb5aa485fad8394b2c00945a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4886.7699814016351,
        "Y": 2203.8828377625287
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7f967300199470a84d8de507304869d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4632.7699814016351,
        "Y": 2238.0228377625285
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "4babc348b6154a619ddbcd706129eea2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5301.7699814016351,
        "Y": 2203.8828377625287
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "d7ff4a28f776431884b4d9535c90c094",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6119.7100380059719,
        "Y": 2158.7680185874606
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "19fa778201044a299a8bea40a4df12cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6564.7100380059719,
        "Y": 2158.7680185874606
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "ac2ff7dd212a46afa105907bb6648f0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6963.7100380059719,
        "Y": 2234.7680185874606
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d93c27cef9e24e54b0f850a3677076d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6963.7100380059719,
        "Y": 2082.7680185874606
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "71e237181d96459cb9f358a86b6a4689",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8234.5504055626188,
        "Y": 1955.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "6c7308914a184045b12678eeaeec6f58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8234.5504055626188,
        "Y": 2148.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ee6e09f9d92e4c18a05bcd623310d3a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8656.5504055626188,
        "Y": 2317.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "9f4fecc415514b2fb909d32e3ee6de5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8656.5504055626188,
        "Y": 2100.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "3d8252d31b6943249f69cad340bc5c55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9078.5504055626188,
        "Y": 2261.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a25d304666e14704a6f76b9251f184f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9482.5504055626188,
        "Y": 2261.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "47934d5b9a774da5ae66494b89a9b9ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8234.5504055626188,
        "Y": 2299.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "c81534cfce5c436092191dc5272f03e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8656.5504055626188,
        "Y": 2468.7109719844625
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "eac34a76cc5b4584972c74c55c9a0542",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7980.5504055626188,
        "Y": 2384.3509719844624
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "417ac0e4e12a45289ce4c3e05f38e324",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6526.5721309393739,
        "Y": 3161.1187874414809
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "a7456f09296a4efda916c88a65f6814e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6920.5721309393739,
        "Y": 3174.1187874414809
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "e5f0035dde104391bca858d7d31896d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8428.5721309393739,
        "Y": 3182.1187874414809
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "d1a91f7deb6740fab0f662eee50a207e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8034.5721309393739,
        "Y": 3216.1187874414809
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c81e3a602d86409498606ebef284e57d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6920.5721309393739,
        "Y": 3360.2587874414808
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "6a400653a9894e30887bc08cf3fb3c3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7314.5721309393739,
        "Y": 3284.1187874414809
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "b75d252d730041618e2e5bd365400a60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7699.5721309393739,
        "Y": 3250.1187874414809
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "276f28a9ec4846dc98d5fa7b5dc28026",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9763.51928918469,
        "Y": 2927.5683133098241
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "76f9db691f334df1b24835d631e9727f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10274.519289184689,
        "Y": 2927.4283133098243
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "9c6ebf6200a2430d95b4d175063645d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10668.519289184689,
        "Y": 2893.4283133098243
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "beb66cf6843f494983968c3c10289dc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6323.0691579078511,
        "Y": 1091.2213024038756
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "86bad39e2cb646738363f7204e7106d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13118.799956369916,
        "Y": 1622.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c260b008a3d342b4a63693f58bf90d5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13465.799956369916,
        "Y": 1568.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ca9db87951fc4053ba679f1245488274",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13812.799956369916,
        "Y": 1546.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "5be9996e7df6411a9cb202060bc94e33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13465.799956369916,
        "Y": 1351.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "3c906670df2b4869b7df6c19dbe932b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13812.799956369916,
        "Y": 1329.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "4f0c622343bd4025b024c520ed93fb89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14159.799956369916,
        "Y": 1307.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "256dc8dbe96d4c80adfebd19794c2db6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13118.799956369916,
        "Y": 1225.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "78b16759928c456c90d61790ade4712f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13465.799956369916,
        "Y": 1170.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "d515b1586b744542a207667667668c3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13812.799956369916,
        "Y": 1148.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "a48da78d4cb84f179241b2a6d5764335",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12775.799956369916,
        "Y": 1206.5659925389555
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "3402ecf2c7944d649301e9890b2e7761",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13118.799956369916,
        "Y": 1072.5659925389555
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "62536ed7d8f64353aa7e5bd504d6f54d",
          "9d1cec5ec9ad4df5b4536a3603d17fab",
          "db13cb72be7e4d458bc9a1e8e171c01c",
          "b3c95697e6434508865fdae8d3004ce9",
          "58fe1afbbe604fb2b32af81f27d247b3",
          "a8f8ba08b6ab411ca499a39198645eda",
          "de1ec3ab5688432499ac4a2ba6a62423",
          "202114e964734a85baa39c93749c7841",
          "5b32b9d6c6be400581317c8470fd3296",
          "bb7aaad814d44d86b6891b36a727c9ee",
          "bbd6b649fa3540a99a0323de113ca23b",
          "c070ce67325942558c952470738463c7",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -1172.1905185955409,
        "Top": -865.49858560623852,
        "Width": 3284.0,
        "Height": 1427.0,
        "FontSize": 36.0,
        "InitialTop": -792.49858560623852,
        "InitialHeight": 1289.28,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "81761ea300ba405aad83f5b8fa2e9f5a",
          "3ce9b8b19a9b469f905db02517f9d17f"
        ],
        "HasNestedGroups": false,
        "Left": -4500.3830927555209,
        "Top": 981.12884691555882,
        "Width": 1203.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 1054.1288469155588,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "46ec41b71daf42dca401a9dc8eb59e77",
          "d4aa9022c65b43829a11aebf1c816525",
          "71ca4d37985a4d5181639a072b928286"
        ],
        "HasNestedGroups": false,
        "Left": -4795.2283242601088,
        "Top": 1322.2074349579352,
        "Width": 1476.0,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1395.2074349579352,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4422.1806288920925,
        "Top": 381.85007681315676,
        "Width": 861.0,
        "Height": 737.31347848394182,
        "FontSize": 36.0,
        "InitialTop": 497.85007681315676,
        "InitialHeight": 630.31347848394182,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (brace to beam)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6788.3641213040755,
        "Top": 302.5605063438594,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 375.5605063438594,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6804.6043858228386,
        "Top": -667.60553020447878,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -594.60553020447878,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6793.520839040586,
        "Top": -31.809699809475603,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 41.1903001905244,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "809e0ab45e464576aa8783e69d0af647",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "4e121fc4004d4dfeaed4d7cb1c40d24e",
          "1fc1ba03bc174352898611929e5b7761"
        ],
        "HasNestedGroups": false,
        "Left": 6555.0172957332816,
        "Top": 880.279123380025,
        "Width": 2427.0,
        "Height": 243.14000000000021,
        "FontSize": 36.0,
        "InitialTop": 953.279123380025,
        "InitialHeight": 179.14000000000021,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "c2e01f29f1f441abbf4883ae6efcc2be",
          "f442c2e083f24b9784c828e62564cf68"
        ],
        "HasNestedGroups": false,
        "Left": 6511.45163896634,
        "Top": 1338.7038553789923,
        "Width": 2034.0,
        "Height": 274.32530562156876,
        "FontSize": 36.0,
        "InitialTop": 1411.7038553789923,
        "InitialHeight": 210.32530562156876,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "c2d0647d5c7141268742ced6f27c026e",
          "f93a9da94ce5442f87b63b3d099cf1af"
        ],
        "HasNestedGroups": false,
        "Left": -827.64147496347675,
        "Top": 1063.0636582818879,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 1136.0636582818879,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -2883.4877458223314,
        "Top": 1040.6287032593432,
        "Width": 1687.0,
        "Height": 361.44489847704472,
        "FontSize": 36.0,
        "InitialTop": 1113.6287032593432,
        "InitialHeight": 297.44489847704472,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "4359ce10bfcb4091b8d1e1f48fd4139a",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e20d82ca66d348fc946d9333a6ac10eb",
          "a7734101dcd84f5ba62334e0edc03b7d",
          "e3b26e6a784047d6aff33fd85a7d6192",
          "1fe67851ffbb4a079795bff6a90ed319"
        ],
        "HasNestedGroups": false,
        "Left": 11091.395820732901,
        "Top": 1082.599595958118,
        "Width": 894.0,
        "Height": 426.0,
        "FontSize": 36.0,
        "InitialTop": 1155.599595958118,
        "InitialHeight": 362.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "780accb67af74e2495fb3817953f6dee",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b39ac2ba3cad4761a51afe5992f2c0f5",
          "94b5c9ddcc3b453aa71aa87cba3d8dea",
          "0ca716511615489a94498944fa33025f",
          "56dc77dc760b4654941114614e1a1a9e",
          "fb52f919084343e78739ebcb2f929bdb"
        ],
        "HasNestedGroups": false,
        "Left": 6816.5581370945547,
        "Top": -349.48070719534178,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -276.48070719534178,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "852191142e9346fdad10bf40668c6fe2",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c3e5449548c43d5969f569cfbfdef61",
          "75f2eed080404f728ce905cdd642fa03",
          "e3bbf2e4ee93414fa45f87529c7a31af",
          "93b5b4f65e7743f09b97eaea66310a4f",
          "70db52313bda4962a79fd557505303fd",
          "462a2b93e3064d7ca8c892056f98b95b",
          "6463f6560f0a4c589f1f739e2f9cbe29",
          "0838df5d07a34535bdd69cf4e3b0ce54"
        ],
        "HasNestedGroups": false,
        "Left": 1143.5203154976903,
        "Top": 838.71378197549984,
        "Width": 1615.0,
        "Height": 454.0,
        "FontSize": 36.0,
        "InitialTop": 911.71378197549984,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "636d15eff48b4cccba233606a9fe8176",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -2438.8874997344151,
        "Top": -951.4350657603942,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -878.4350657603942,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "923d1e935ef542a7b4f9b26f9232ab2d",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72fe204d3a844a1097b09048ecf1f7df",
          "eab79953ace84195b27f18dc34e473ea",
          "beb66cf6843f494983968c3c10289dc4",
          "0c9ae46ded594b1683a6da718d0e3f9c"
        ],
        "HasNestedGroups": false,
        "Left": -6342.0691579078511,
        "Top": 769.2213024038756,
        "Width": 695.0,
        "Height": 458.0,
        "FontSize": 36.0,
        "InitialTop": 842.2213024038756,
        "InitialHeight": 352.39908159879155,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "869a2569fd4149729f38a7e4710fadad",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "41563a8003714c4aa18135c3678b78ff",
          "8a92947807364762874c012b8432daa7",
          "91c70c5dda0243e7b4e8f92de39246b2"
        ],
        "HasNestedGroups": false,
        "Left": 2573.8830949157118,
        "Top": 84.3311297130121,
        "Width": 713.0,
        "Height": 361.14,
        "FontSize": 36.0,
        "InitialTop": 157.3311297130121,
        "InitialHeight": 297.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fbe310457ef74149a563a8d2d8dc4fcf",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "df79766745b34d1e9cd497f983e0cbf0"
        ],
        "HasNestedGroups": false,
        "Left": 3379.2140542700804,
        "Top": 603.52349269306956,
        "Width": 823.99999999999955,
        "Height": 361.37217179605148,
        "FontSize": 36.0,
        "InitialTop": 676.52349269306956,
        "InitialHeight": 297.37217179605148,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "c173177b65744889810eadd2eb97485b",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "abd49926613647e28ed35eef6d8e5166",
          "f0d13bb5ef2d47a9b119a24296180e40",
          "8a9e83016d1a47379a7215ac64a279a4",
          "4776ded489f3423ca4ab3b2e47c916af",
          "e2c179b37dd048cf8e145790b98e093c",
          "7fb8e8e7797e4c8ea58405566c689f1b",
          "b93a44df7d78450eb26ec38df963e5ef"
        ],
        "HasNestedGroups": false,
        "Left": 9371.45475646406,
        "Top": 826.97553090845179,
        "Width": 1417.0,
        "Height": 619.99999999999966,
        "FontSize": 36.0,
        "InitialTop": 899.97553090845179,
        "InitialHeight": 555.99999999999966,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "4b25334c638b4decaf49047102799665",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "16a4ae907f6040939207eb105a030e63",
          "eb888b92c99743fcbb24631dd387cf2f",
          "352392610eef4466af95cbb801d891d8",
          "de9e20a0d72642f6948bb159f1bc7377",
          "783f910f186b4dd1a7e05475f1ff7d88",
          "b224c11463074a8f84a2b5448d51cacd",
          "e87d7cc83f3344b1b6f79db6de5c1ff2",
          "874243ae20314320a4be3a056459108a",
          "b8702b8cbbb3479aa85880aa02d60c9a"
        ],
        "HasNestedGroups": false,
        "Left": 9524.4202448897286,
        "Top": -285.86397137120935,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -212.86397137120935,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "a6143fbfedd44d18b3d8a2d522104e0d",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "07d5b41cb10f4d1287a6b4f949a80f2f"
        ],
        "HasNestedGroups": false,
        "Left": 14528.255081855054,
        "Top": 345.42627674163828,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 418.42627674163828,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "4f4b15816ad24a0fa02146ca1b2361f6",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "62c3464bb5aa485fad8394b2c00945a6",
          "f7f967300199470a84d8de507304869d",
          "4babc348b6154a619ddbcd706129eea2"
        ],
        "HasNestedGroups": false,
        "Left": 4622.7699814016351,
        "Top": 2130.8828377625287,
        "Width": 994.0,
        "Height": 309.0,
        "FontSize": 36.0,
        "InitialTop": 2203.8828377625287,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "23ffdab0228d45dba3b9f840432f4bd1",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d7ff4a28f776431884b4d9535c90c094",
          "19fa778201044a299a8bea40a4df12cb",
          "ac2ff7dd212a46afa105907bb6648f0b",
          "d93c27cef9e24e54b0f850a3677076d4"
        ],
        "HasNestedGroups": false,
        "Left": 6109.7100380059719,
        "Top": 2009.7680185874606,
        "Width": 1275.0,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 2082.7680185874606,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "8c40ba543e2c46f9855213a989c9642e",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "71e237181d96459cb9f358a86b6a4689",
          "6c7308914a184045b12678eeaeec6f58",
          "ee6e09f9d92e4c18a05bcd623310d3a3",
          "9f4fecc415514b2fb909d32e3ee6de5c",
          "3d8252d31b6943249f69cad340bc5c55",
          "a25d304666e14704a6f76b9251f184f2",
          "47934d5b9a774da5ae66494b89a9b9ca",
          "c81534cfce5c436092191dc5272f03e8",
          "eac34a76cc5b4584972c74c55c9a0542"
        ],
        "HasNestedGroups": false,
        "Left": 7970.5504055626188,
        "Top": 1882.7109719844625,
        "Width": 1712.0,
        "Height": 752.0,
        "FontSize": 36.0,
        "InitialTop": 1955.7109719844625,
        "InitialHeight": 658.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "a1a2f9ae60b9432e9dbd0acd909e1b18",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "417ac0e4e12a45289ce4c3e05f38e324",
          "a7456f09296a4efda916c88a65f6814e",
          "e5f0035dde104391bca858d7d31896d7",
          "d1a91f7deb6740fab0f662eee50a207e",
          "c81e3a602d86409498606ebef284e57d",
          "6a400653a9894e30887bc08cf3fb3c3a",
          "b75d252d730041618e2e5bd365400a60"
        ],
        "HasNestedGroups": false,
        "Left": 6516.5721309393739,
        "Top": 3088.1187874414809,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 3161.1187874414809,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "f5071a9302d64a2b84e54006b2c70fb4",
        "Title": "Aggregate information\t",
        "DescriptionText": "Combine situation information and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "276f28a9ec4846dc98d5fa7b5dc28026",
          "76f9db691f334df1b24835d631e9727f",
          "9c6ebf6200a2430d95b4d175063645d2"
        ],
        "HasNestedGroups": false,
        "Left": 9753.51928918469,
        "Top": 2820.4283133098243,
        "Width": 1183.0,
        "Height": 273.0,
        "FontSize": 36.0,
        "InitialTop": 2893.4283133098243,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "f81e39d631de4b569ebec05781d86714",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6773675f29024074b6c7dd0276324186",
          "fa9e126e6b604ec0868b4f83cec7ca36",
          "7307549c111a48bb933541f1410524d2",
          "adcd5aca8efc43cb8f198c5049189c01",
          "97f5b817abab4350b9a29a5ac40cb59d",
          "86bad39e2cb646738363f7204e7106d7",
          "c260b008a3d342b4a63693f58bf90d5a",
          "ca9db87951fc4053ba679f1245488274",
          "5be9996e7df6411a9cb202060bc94e33",
          "3c906670df2b4869b7df6c19dbe932b5",
          "4f0c622343bd4025b024c520ed93fb89",
          "256dc8dbe96d4c80adfebd19794c2db6",
          "78b16759928c456c90d61790ade4712f",
          "d515b1586b744542a207667667668c3e",
          "a48da78d4cb84f179241b2a6d5764335",
          "3402ecf2c7944d649301e9890b2e7761"
        ],
        "HasNestedGroups": false,
        "Left": 12457.799956369916,
        "Top": 999.56599253895547,
        "Width": 1900.0,
        "Height": 875.0,
        "FontSize": 36.0,
        "InitialTop": 1072.5659925389555,
        "InitialHeight": 695.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "0c9ae46ded594b1683a6da718d0e3f9c",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Gusset plate at one diagonal;Gusset plate at one diagonal custom).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6332.0691579078511,
        "Top": 842.2213024038756,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "72fe204d3a844a1097b09048ecf1f7df"
      },
      {
        "Id": "0838df5d07a34535bdd69cf4e3b0ce54",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. to B;Flange). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1153.5203154976903,
        "Top": 921.71378197549984,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "6463f6560f0a4c589f1f739e2f9cbe29"
      }
    ],
    "X": 1288.06099862491,
    "Y": 529.96877247937357,
    "Zoom": 0.514024391457845
  }
}