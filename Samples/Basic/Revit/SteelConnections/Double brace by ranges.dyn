{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places connections in double brace geometric situations. Works only on connection types with attached ranges of applicability. ",
  "Name": "Double brace by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Name": "2.1. Beams Slope Angle (degrees) from",
      "Type": "number",
      "Value": "30",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Name": "2.2. Beams Slope Angle (degrees) to",
      "Type": "number",
      "Value": "35",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Name": "3. Library file path",
      "Type": "string",
      "Value": ".\\Connection library with ranges of applicability.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Name": "4. Connection family to place",
      "Type": "string",
      "Value": "Double tube brace gusset",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "20f52271089f4466a01d0df3c7a58715",
      "Name": "5. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "50bc9b460e7d422ab736778d9d892cdc",
      "Name": "6. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74bfdc13ef314c4a8c748b564f85e822",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd2d123c3d94abca7e9992dcda22716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;\n2;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "705f376e317a4408b10deabbe8200339",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e5932e770f84d87b258e4bc26c635c0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 30.0,
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6bccf5579f84a6496a53819c0d126a3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 35.0,
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8352ce7cfa8340249d4d2c77b4d94765",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "596909f5799446a7820a3e674d2f49c7",
      "Inputs": [
        {
          "Id": "31a2a03e186b41f68176345589f851fe",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e2c7e481b8f4c97b05b11b5cadf98fc",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5587e93c96a1461bbf95cde6a7300220",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "881d3b5066d2416ea41953ba13ced78d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f830726134164f5691f1c2dd7e22e7cb",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b12606021e4dbda2be3dfc4f977dc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "3db0ae870aae4d4e8fccea48976c3b33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab334ee1abe949b5ac4be2c72a8b2772",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19ef94231bb245bf9f8d0335d2470c6c",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "1ca46343c98e422eb589fa5f6c1c842d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98ebb802466d45fc88fee4b647379981",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f6d6943546347d2828ddfdfb9c156f9",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "145ece1505dd4e13b5adb581f63e7bf8",
      "Inputs": [
        {
          "Id": "1901e0d33af342ebaa77014a352c0c32",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcf786854a0f4dd3be94e87cc2b56554",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9ff16241fe7408d97349addfede0721",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3e6b35fdf5e421fac487c209e921316",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df853b25b16449ba80be54e810da58b9",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;\n2;",
      "Id": "e1d42da2f0d04115ba4c333d965e15ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "138d8685a1b84826aedb12099c2427b9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "119a95c03fe04f2db5c718cc503fc753",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\Connection library with ranges of applicability.rvt",
      "InputValue": ".\\Connection library with ranges of applicability.rvt",
      "NodeType": "ExtensionNode",
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7cb4c5a4d7744158b43d117c10964990",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1,2];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bde469c217254114a3d328001cd6f0fb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Double tube brace gusset",
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68aba1580a084fcc909abd9f22159f2b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "774bfec08d6646eab975b1a78194a1d4",
      "Inputs": [
        {
          "Id": "b2554cedec674fd9aa2f7fc35bab7008",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49f4b92ce2e64014a68344d009952029",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e1355331b64e7e850e717a10fd4c5e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b9b1b2e8c2648da8d551ba065b0040a",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f46b862733e044d69c1a4ec177003746",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07dbbb1674e54a9e8f6b2a156c204109",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d19b07df0f1247c09fd1a6d579459e44",
      "Inputs": [
        {
          "Id": "8c806428de07439c88b2c7d80368cc46",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "435b20457d424320a532552c70a09bd3",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "094ae248e07d4f5f9a8503e6355a10dc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b52cd842fe44268a9e03f873a26c3b2",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42b5e54d628b45e4bb1d812a1bdd3400",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "12abfb80ffa74a4c80e36ca5b6059b8c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "488a86843f5540f79ac3761cf6af27cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "3bebde19937e490791171cc2cfde3903",
      "Inputs": [
        {
          "Id": "97f5f482c2ff4b6b9d01fb6acea103c3",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "401f8282ae5c4faf92b23a8cde38938f",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2772449f8c95448992185c07f3ba243a",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51bab4d87880418aa8ed192d608b0918",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea0a83851fb84b509672d0682f79d5ca",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b0c9023e9f64cd48da27fe57c4b63d6",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "56327268f83a41f794d803210c7ccfb0",
      "Inputs": [
        {
          "Id": "6c9666341c49411ba81108f7fc62e291",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4f326b5714f4258925ce665e22be6a2",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "512936873f924e33b4cbea0412239900",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e9e4268b3ca4dd5af79b2060a6c16a7",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5608a124430c42018ac7f27d68e4aa19",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "22c19bcb914b406288d23f558fb8d1af",
      "Inputs": [
        {
          "Id": "9f60fb3ca3bc428184e4e77ff1a351c6",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af6441f824e3404aa42e4787df0bd751",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8b68396517e4e7aaf02e41e4681f48f",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fbb744638f643348bd48bc61a62aa30",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9643c088f3494595b5dbc380ac549c7d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e9b4429d17d4747b139a3a2add38204",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "622fa64820ff42b685cc47c13df704e5",
      "Inputs": [
        {
          "Id": "b5d8347d75804d85b2a245db341aaef9",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c083db8228747949113e5bbbc24025b",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "fa15ed11566e48f6a283979a2190aee0",
      "Inputs": [
        {
          "Id": "66fc31650fc3416da64fa2418710bd18",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3e8ff21a70746028fe7c604a5bf2603",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6d617a276284e0386d73923f9e030bc",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81d62d02983b4123b2f914cf950dbaeb",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8216f5f2ba734ee39fe010f019b46e2e",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "80ef5761348f48a6b66cf6d9ada319d7",
      "Inputs": [
        {
          "Id": "a6665016e9e744eba5a38e7929cd311c",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6cbefe5b976d4911bf4c85bb982f669e",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2ebac48b0334378ae92f444d6447628",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "998827ee3014495e8c110816c4baee0e",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c75c17043200413d84f0ecaa5d65b867",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "66b9e319593246b08060a6d65bed72b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5796e50a715b44438859ea87211f63bb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "3f18dd40bc904c86935aae15483231c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0093154b653e4a30bc1962529159b671",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "589c100ed1784fecba3a3b385fe0a92b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "89a9328d684e4071adff3b605751510b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "f06ecf7354104452a3eb1e3cb4eb5693",
      "Inputs": [
        {
          "Id": "bda174787e4b4a8e865963888f8db7cd",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5db6a20fe1124852826cf13f842ac00b",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee45782d58dd40028a5a9a904fc32d5f",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "bcec3fc4add24b0589dc5618461136c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "475e0286a5ac4dacabb2cee761756c27",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "198f6a7e428b4323bc9a630905af734a",
      "Inputs": [
        {
          "Id": "e94fdf4f8936461c8272c7c36871d59b",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad01c8be9294441db55e98b527e63f47",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f51644ddf6b848ee879a0e777891a011",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "8b127294001c43258ec3ad4c4290a4bf",
      "Inputs": [
        {
          "Id": "73e1178b43464dd5830def7a56d8835a",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "227cf2230db448e5a2a99377e5f4f2e2",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73e28da5f76d415da4c1eacf5f3621ad",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "b63e7b9928144009ba075fe13f5fa492",
      "Inputs": [
        {
          "Id": "328d10c265c540018b4bb6a99884c4e4",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11460fbb8e454536ad794d0533df1da4",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "b911b69d434043be807ad2add98dc42a",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "448b04588fc7451d8c0068a54ed45cf3",
      "Inputs": [
        {
          "Id": "2ad14c6bcf724060acdb8458b7f78d6a",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d9487bfc7c44ae2bfdf8d4eedd16139",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "0823fb156d0446cd8864bb09e09f0c07",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c7dc47ce95e24e869a23305874333c13",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "5e0eb5c163d24171a2301ad53ae4798f",
      "Inputs": [
        {
          "Id": "2b5abecbcb914e1a9a193b72fc0b147d",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "532327e61c94475e864ee66210950d73",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "147d25a15d794170b1dfea8c56c26b54",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0022f26a17cc46f08e9e9e31a275afec",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "0fc01510ee2448298df0fc210e4896b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8cd3e358ba64725b497ea4e20081805",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c0bdff590ea544b8ac263259e232e36d",
      "Inputs": [
        {
          "Id": "ad914ab7db324d3cabbf70d7c021674b",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc3f1586d3a5453d9053a0cd4d32714b",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eadbfafc3f3b4de180874c163318d87a",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a30599b6a7fd4fde96db0147739e76d0",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "123f3eb43c174a3c94cfac8f0f6d6b72",
      "Inputs": [
        {
          "Id": "464732b61147438297178411cf484ae5",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8ad741a3afa465bbb4c16aa539ffda3",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5e122ca3411497ab123b82fa6221282",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb04777d38104b17b1e3c68f38865ccf",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "166dd89e97474d65a6d996c425a7fdfd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d87ecf57ff744b57b3d8f202e5218878",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "2007d3b3760f41b6b456ae3397638de7",
      "Inputs": [
        {
          "Id": "3962efe63ce34d85a721d9f56887b16a",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fe3ee84ab734f49957850748cc73cda",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6cd4a9a19dda46c1b946daa83be0e338",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e8a4cfdf4204c5bb94e8cb22f5d23d9",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "a4c3af49ce2a421e808d706ba1bca803",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74caac44099b44c5aa79edbcae0a4d50",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "9553923afbd148c0af88a62b9787d4a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8b1aabff910b4b13a171b6cb39f7b44d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, of {applicable_number} applicable",
      "Id": "882167332d37490a91cf6d73f377ca47",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b1a458a403c7430799a52535d740c68d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "18a700743da240109da19e798f95d7c6",
      "Inputs": [
        {
          "Id": "332cd36ab4354dee85f0f3e0e6edb84d",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb55c29ca0cf45d9aba6c16e72f67bf7",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24ab9c78fbb141d9a3dfc13deec90c05",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b4b6ab5373a43c49cefd0bd82d07447",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "98312f535b7f4791b16fb00a8dfe5f5b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "14bb4d7c3f57477a899349ddc45a6922",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "0940742feea442a09258951a9a59e8e1",
      "Inputs": [
        {
          "Id": "1cf032ef59a6476da834a06d55eb9e3e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "001d55aa68e3453a82d41a6fe5157426",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5670ba8b9b447b780aa560e104437fe",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "361d6bd36cbb49bcb41c98c38795b7c6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "0691bfbea6b84c10bf83b3373d8259e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bcb84da8b0d84bfcb0541ed92166db19",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "d0623109251c4dc4b447817e143bb838",
      "Inputs": [
        {
          "Id": "c837e6077e6f48a28e699c9abe64b349",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1e70af337a44eac87a5dd09011a4f10",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f408a27c225445f8a63d9421956e6542",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "982fb21ca26d46b2adec9179afec796a",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "34bff7bdd1494741b01adc3e753436f9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72460cee46b64e0c84f053327d6c5fac",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "d16c47b8e8df46ce8e5a9f4971aca621",
      "Inputs": [
        {
          "Id": "adf8ba0235dd43cdad77825fe8e2e652",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "229afaa32ee8482e9bb9eef8260cdad8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "e5ae17d7a2af4af78146a680b26cbbe2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f164e72112cd4c18be78ece50254f123",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "5d472f0c20d44732881a5219166e6465",
      "Inputs": [
        {
          "Id": "66b6a9ec837645859c30cc8472b8aef5",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d0d00ebf73f4771a4f596c2951df957",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2aec28b306c842b780659cd5dc8d851e",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "1f9a781b0e0f47a2be0df821dd5302ca",
      "Inputs": [
        {
          "Id": "218432c721404be5afb6cf463b932928",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e4e1b6d9f9244abbe138f8f0e4f1129",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3bb26a0ad634d209af1281279fa683c",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "4864861755984fbb97dc758aaf87191b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf35c17124c74e39bc2951ce05e7e9cb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "48985b1a298f46218a348d63b701c650",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8fb11516d42445f86a2f41d492bc088",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "dcaf9e55d6814a92a87f69010ca21631",
      "Inputs": [
        {
          "Id": "c7894e1298054c7886448820f45d9550",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8d627d14a14405e9e62443bb6ba631a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d134708d818f4b7a81c864b4bf5bcb37",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "69e5784b3bfd4693bb8008fcd7867651",
      "Inputs": [
        {
          "Id": "53db257e27f741388e7c7b4493307980",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e1f63f1866d48aa89fb0c295d452d54",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "15ea64d0f68c4cd79cb884b221882d1c",
      "Inputs": [
        {
          "Id": "bf1b0c5ccb9744cb92bc08b3639c2885",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37515ed871de4f79aaa636070d775ff4",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "790a19a7eea24dd9b495245c7dda182d",
      "Inputs": [
        {
          "Id": "479b71b3bcd34b4eab6f3dfaa429ecfb",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eff4f31cd844408dadef718f55b19fe5",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acd104c0afb249199638d73635f23c1b",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "a5fcd249e1c74917aee5a0f4063e79f6",
      "Inputs": [
        {
          "Id": "c9541ceeb1a74100b1a1b673cb97e4e5",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b17903ab09647e9bf0f88efe49f0a46",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "099a7ed2b3fc41ff881e6ccfc68226ca",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "280fd3976a974c9a9d01fa2d1fde96f6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "3f33722d7e9845d3a980b73f85b0b8f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5ff3a2e3ee05404f9a01f39205989cc9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "17cd2f5c0d524170a765b21fe1db48da",
      "Inputs": [
        {
          "Id": "4dfb3bfc50af48be91caa6d911acbde5",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adc78c25139b418f82016c10f8351662",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "c8f20affece64409b70e2439b454693b",
      "Inputs": [
        {
          "Id": "fce50d2bde4a4893aeed11f97b072775",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "057a4bc9c5e344768015581e7878ddd0",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2693a1c936e14772b511ec55bf65ab42",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f979b89a93984d849cb62b20047018b3",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "20f52271089f4466a01d0df3c7a58715",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e99d0125554144b0b396ebadddb69be3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "a58307b9981d4b42945aaf3792f88544",
      "Inputs": [
        {
          "Id": "224bc41c8e5e48f69df96734b5630dd5",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef75523286b44c9a95d8c40168299768",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a001b15d4d845889548c5f818c354be",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0644e704c2734f0086e54828a0df452c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "50bc9b460e7d422ab736778d9d892cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea2ec0856c684b46824495fed5662081",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "1b1d378ae50e4a7c8ff27a7a2d00bbaf",
      "Inputs": [
        {
          "Id": "ccae9deea7d04c08911a77c660b418f1",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4d77e53ba3442ba8af12fd25a3a0522",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4ce8b04875a4e6393dd0dd6c9fc407e",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "91d1ee2efb14455fa64706e9d11f8c77",
      "Inputs": [
        {
          "Id": "291238b79a7e4bf1b2313a8115387816",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "523b04b4894948559c07735c835a3291",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "049447f67f884a61b4ea430abbaf046c",
      "Inputs": [
        {
          "Id": "ed87d8828edb40b4aac12f9dce6bb048",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6bf7feafc3c479387db86b3244282c6",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40e24339d7d44228a4e952ffc51fd42",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "18025af2ae3b41b9be7019d8c8abedda",
      "Inputs": [
        {
          "Id": "0d68433b10f24acb9214314463999a45",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb685394c02b4dc699f3aecc2c53c9a0",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c99221db94b8433db57b4f55a03576fb",
      "Inputs": [
        {
          "Id": "26479202d3b14cb28ac7bfed3f6c49eb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "372accbf08394578abafe112dc8e3889",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "55d29ca1e46644c495eed7d0163315bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ffa680e35e5e4fd2ac403312e0b29356",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "98d4f73098004d6db5bd02d1f3bc1fe2",
      "Inputs": [
        {
          "Id": "922596a300e44da9be60be807ed79110",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53b6f12e745847f68dc353ce2c451feb",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bb341ea3a724b9187980126db0e38c3",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46d572734dad46fa9be3371a5f38f6f2",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "913a421bbc4540f98e3b151e4407c97d",
      "Inputs": [
        {
          "Id": "a9b104640a5340f3b5dc1fd5140a0a8a",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47bfb21a15dc48359a60cb04af3aec7d",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b70ee6ca161f4837b6d2756d692e0669",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "545642e0d61c41d8a3d89f6964db0d1a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "630d0d6ef6964f2d86a9d6ab260b776d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "ed618d27f5e84d6bab2466a14d689939",
      "Inputs": [
        {
          "Id": "6f58f54a93bf4cfcb44bc119c38b6e68",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d47e7ed9ca424ba783904d839d608851",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c4a3160c7094e96b7f6e6d753c0b730",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07fb7a899881437a8cad01274344af3a",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67465706a8d4446a8027907cc779ee6d",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e6b5e8e6aac4d79b85878d9688ae027",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "dd476c0cdb2d4ecaa359e2c0010acb09",
      "Inputs": [
        {
          "Id": "34767103b6854bafaca8c76d223233b4",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b87f58dc7f3e4ac7b83f25906d03f57b",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "f6cf9836157044a1a20bf7d2da15591a",
      "Inputs": [
        {
          "Id": "f7a0b66b433341d898a228c0f6f0deeb",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e75519b7e5b4e27b03233a8ebb26517",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "ad22845ea08c4c169ddf4e979a5e3f25",
      "Inputs": [
        {
          "Id": "b2c380faaf60453ea00986fe632ac9b2",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c284c69234a648dc82326893244b3a52",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "e3f22e522cc44a578c2934a1a141d331",
      "Inputs": [
        {
          "Id": "b3f5a288f3f943828f7569488f760a6e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8107038df5e448f794e71cba1371484f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "07dbaca88905423b93589040146e8724",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7a01d1c9ef6c4b4487a2045be440da8a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "7e86a1dc4c5646289aa3cc7f4901310e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a6041221b82d4595a4dbe22a06cfd4e6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "f4b1dcc6d98248ac96fb07cb641070a2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d5ea6caa087b4fac9e5735b5dc4e22c7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "8da1bd9bdd8447c2a27701e3e0959051",
      "Inputs": [
        {
          "Id": "ec7ecc7a54914ef4807ead696a3721f5",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d55597ff7c4fe981aa0e15fe8f682d",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86b2196a0ac94ce9bba889ce2cc5c8c4",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26e356a2dc46475db47191024df7547b",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "967b44f0993b4d8b9933edda3ec9b7f7",
      "Inputs": [
        {
          "Id": "feaef43be11b4d018c1bcba1a407b412",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa964aad22944010a81394f565c15c9f",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0650d94064d3442790f95726916ec717",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f401dd58f244574bdc53b7f6e9507e0",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fd1316aa6ffe41e4bf0dda4553f1bf73",
      "Inputs": [
        {
          "Id": "acd27e8465aa439ba815d35ce68d19b7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9a4b1133cc5468f9b465f2323c4c530",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac84960d7b504e0c852299ff6c1db5d4",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "54223afa9aa5464eac2dfd297e23aa33",
      "Inputs": [
        {
          "Id": "b4632c5397e34fa989760dbc064b855e",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7d001e7bfefd4c13ba5f57eb95fc2ed6",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8aa0927af95e41f68f535b6a3561a85d",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f901987589bd454c8c0ad9861226b6d2",
      "Inputs": [
        {
          "Id": "b2a7661880ab4902b37a204dd9adafbd",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b5b8d3f15cff462c9a8e2ea2289d2f6d",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b358919600143d39a1e735e444fd896",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "806a4abe39fd4452bcf9d04f1c2f32cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "236002edfa7d44d4915488a11ec17dd1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "35446fd341544adebacc244851c4954d",
      "Inputs": [
        {
          "Id": "4b3d7297c1ae4157905aa3395112e2b4",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf5ca50b35e141ca893b84ce52335f6e",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25033195ba6d4caf8321f2af74a98672",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "582a76a7f80b4f5db98894dabccfc35a",
      "Inputs": [
        {
          "Id": "119776fe7d2041f29cd2d41751820b10",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8afc00bf435544fbb56239508d9f3637",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6084299cfffa471c9d6ed99cda8bcb56",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "83e2d18676344ebb920e3ce185722f16",
      "Inputs": [
        {
          "Id": "902d9f4df3864ec6beb10a67b4348549",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0a70b0ffbdc84dadbed83fd0085bf74b",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "910f187fe46140c6bd430c3d4efb8dcc",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "f5f0b461c1534a2fb3cc634dce5d8ff3",
      "Inputs": [
        {
          "Id": "a54d179247714c81b5d3a31aaf4ea9d2",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "53b27facade84986801796520162fb22",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "338f5c71ece8402c998fc6eeeabb8829",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "5fbbdf36a69f465bacfcd56ef4feba28",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a59a76d3750c424c9e20ed5aa75b94ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "8a527aff920b4f379e81cbb0b9083670",
      "Inputs": [
        {
          "Id": "eadfe4aacea64fdb8e57da004535bf1d",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4a767cbeb384bfe9b745a04b1c2cf72",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6cb47e402cb413b97556ce0b1e37247",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4784c9aec40d49dca79b977e588aec87",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "2b2313df959f457ebbc2c478bb18e243",
      "Inputs": [
        {
          "Id": "35934ec2823f4f3698aab35fc71f577d",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "461c1d856c464729ad26e103adc45817",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03194b542a04425586cb9b8e000d22f3",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ac59712f2484f97aacc41f13476d72e",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "e22a67745f384dbda435bf4d68fdc7cb",
      "Inputs": [
        {
          "Id": "774704ce4e9e45d79d422ecb6e402249",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52ed1fe3d94b4389ad671b2479f7765d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "6b0c7a7ce00f46988a944edaf5bb8025",
      "Inputs": [
        {
          "Id": "194809884b97440f9755d5f10a19acaa",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ffac89bb86214d689b66e4a8bc46a7bf",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3492ce2a7be04ece8697d2ace03fbc74",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "7aae94241b474b57b5ae18bd79a79781",
      "Inputs": [
        {
          "Id": "c962aa70d9dd4cb1811b7e80616c608a",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe0e04ae14734f5492f5536fe3fb084a",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc11bbb96b774f4389fd6c2cbe2c3962",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "8075fe0357ba49008c455da5ab97be55",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "efcc22a053b64930be66ab27bddfa203",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "090b6b9b91884e04ae959d253e40d2f5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4f1ebbf8eeb940dbb90177180622774a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "a3dd0cb89c104c7ea4db8ed29598f913",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f6942c26ba7d42a7937a4e6f913d1631",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "506a25715b36492db2580123dda3fed4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3ff706233ab04ee4b39ac38d9746c272",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1f0620effcf64ec19c1741c055701473",
      "Inputs": [
        {
          "Id": "87405be8a28f442c92e411b65539fccd",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d435672756674bedbb6421cbaed4faca",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47bf248c681c45469a68025772eabc98",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b85b66e154504b0a867194228765011c",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c749cc71a5ab450185fa3a2d769e1173",
      "Inputs": [
        {
          "Id": "baa63a8c490245ae858ec1ced801c7fa",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3683ceeaa8bb47a6bdb3d133190f78ea",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0462c3c9b3c74a69a6bd1df6a694e1b5",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6c37148940d48b987dc68d01e659edf",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "72dbfe902fa34350999c7907c80f4f47",
      "Inputs": [
        {
          "Id": "39329b3f58144854a073fa87a1413907",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db9546af384e443e9d9b1be5bd56d72d",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cddf3c28ab7d4ab78b5af38aea8b819d",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffedf1d7ab454b12b2237551629c9768",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "d6b5a05381c44e6fb57f5790b2559789",
      "Inputs": [
        {
          "Id": "1de39e49dd124e6d96f8e36ee03e8993",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0931c9734b004ee48c51f5389357f259",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e641afd1ba004f6d978fd508f2c0ccf4",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "09f7b233d9464f33ab1956bbc4b97c68",
      "Inputs": [
        {
          "Id": "cf66f132f46c472a8506c1d51545c0c2",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5fe4784c799413ea381d9e200b596ed",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f9c184c379946adb7082a1eea362ac0",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "8dfbb30d299840c4809d68e440837aaf",
      "Inputs": [
        {
          "Id": "2989dcc0470047478254fa9f8dc10bbb",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a75ef4328804237be398c4b09a55c1d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04c833124236455293ed1babba9d0406",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0b9c18ae857f4f34a91959bb80b5967b",
      "Inputs": [
        {
          "Id": "753d66be5efc42188766dfff958002f3",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "079a35c021c24663a45a528bf745501e",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "df78c644fc7f470e92b7a7617702f975",
      "Inputs": [
        {
          "Id": "21d401f050e14cf99ca81a953d75e583",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65bfe9c40290470facabdeae2f62dfe3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "66fc31650fc3416da64fa2418710bd18",
      "Id": "4eb3a0b8918f4e61aa0f47f6ca835162",
      "IsHidden": "False"
    },
    {
      "Start": "74bfdc13ef314c4a8c748b564f85e822",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "7cb73361194e41afb7e3e751a5347d07",
      "IsHidden": "False"
    },
    {
      "Start": "1bd2d123c3d94abca7e9992dcda22716",
      "End": "401f8282ae5c4faf92b23a8cde38938f",
      "Id": "4e1789452e2c462f8fbe6e67b4bffb91",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "2772449f8c95448992185c07f3ba243a",
      "Id": "ae418c4e888246b7bd6b3c7bf95a250e",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "51bab4d87880418aa8ed192d608b0918",
      "Id": "a269a8431ba74d1080817d4033a50c0d",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "9f60fb3ca3bc428184e4e77ff1a351c6",
      "Id": "54a4ef28bfd34b2f952b243fa70da7a1",
      "IsHidden": "False"
    },
    {
      "Start": "705f376e317a4408b10deabbe8200339",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c3ab3b388ba744d2b106d7a3785f3c20",
      "IsHidden": "False"
    },
    {
      "Start": "1e5932e770f84d87b258e4bc26c635c0",
      "End": "af6441f824e3404aa42e4787df0bd751",
      "Id": "1e2d6909becf49b28dd14295eb82aad4",
      "IsHidden": "False"
    },
    {
      "Start": "d6bccf5579f84a6496a53819c0d126a3",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "1d1eba77cc1c482dad0de2596a493a1f",
      "IsHidden": "False"
    },
    {
      "Start": "d6bccf5579f84a6496a53819c0d126a3",
      "End": "e8b68396517e4e7aaf02e41e4681f48f",
      "Id": "cea5b2750e3946e6bfcf8f3ae047030a",
      "IsHidden": "False"
    },
    {
      "Start": "8352ce7cfa8340249d4d2c77b4d94765",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "da3867b34e864eeaba4f4f440e610d03",
      "IsHidden": "False"
    },
    {
      "Start": "8352ce7cfa8340249d4d2c77b4d94765",
      "End": "5fbb744638f643348bd48bc61a62aa30",
      "Id": "f19d4fa4c4a745c2aa711117fae79576",
      "IsHidden": "False"
    },
    {
      "Start": "881d3b5066d2416ea41953ba13ced78d",
      "End": "1901e0d33af342ebaa77014a352c0c32",
      "Id": "b2c6b815a2d441ba845ecca322e013e5",
      "IsHidden": "False"
    },
    {
      "Start": "d0b12606021e4dbda2be3dfc4f977dc3",
      "End": "2e2c7e481b8f4c97b05b11b5cadf98fc",
      "Id": "531fd8a51b8747e3b59409e00debd515",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "5587e93c96a1461bbf95cde6a7300220",
      "Id": "4d128a78f44b4228b96e1210e441cc29",
      "IsHidden": "False"
    },
    {
      "Start": "3f6d6943546347d2828ddfdfb9c156f9",
      "End": "a9ff16241fe7408d97349addfede0721",
      "Id": "ffa846437ff04004834b628f0176c79c",
      "IsHidden": "False"
    },
    {
      "Start": "3f6d6943546347d2828ddfdfb9c156f9",
      "End": "512936873f924e33b4cbea0412239900",
      "Id": "7d469842c9d7461abbc1650455c3d67e",
      "IsHidden": "False"
    },
    {
      "Start": "e3e6b35fdf5e421fac487c209e921316",
      "End": "6c9666341c49411ba81108f7fc62e291",
      "Id": "386eb829d1184c26ab3397c3188a809b",
      "IsHidden": "False"
    },
    {
      "Start": "138d8685a1b84826aedb12099c2427b9",
      "End": "fcf786854a0f4dd3be94e87cc2b56554",
      "Id": "adb648e4ec0c488aaf8c18f7e2deec38",
      "IsHidden": "False"
    },
    {
      "Start": "119a95c03fe04f2db5c718cc503fc753",
      "End": "e4f326b5714f4258925ce665e22be6a2",
      "Id": "479c766be2364c5e99df044b0e0bc1e3",
      "IsHidden": "False"
    },
    {
      "Start": "7cb4c5a4d7744158b43d117c10964990",
      "End": "227cf2230db448e5a2a99377e5f4f2e2",
      "Id": "2f6069058e984b5d96c3147cd387e7f0",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "479b71b3bcd34b4eab6f3dfaa429ecfb",
      "Id": "1872f1968a3d466583427a54a05841c6",
      "IsHidden": "False"
    },
    {
      "Start": "bde469c217254114a3d328001cd6f0fb",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "92e507c6a48643f3945149c4911f9b9b",
      "IsHidden": "False"
    },
    {
      "Start": "bde469c217254114a3d328001cd6f0fb",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "3c1049f15adf4518aabb0f8593dddcf3",
      "IsHidden": "False"
    },
    {
      "Start": "bde469c217254114a3d328001cd6f0fb",
      "End": "d47e7ed9ca424ba783904d839d608851",
      "Id": "d8619b0631f74f709070ae9c686f7764",
      "IsHidden": "False"
    },
    {
      "Start": "68aba1580a084fcc909abd9f22159f2b",
      "End": "ed87d8828edb40b4aac12f9dce6bb048",
      "Id": "d9eac284f7794505b22d02a3fd00618b",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "a9b104640a5340f3b5dc1fd5140a0a8a",
      "Id": "9b55f75f95bf44668c084e0c039af52f",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "dc620d4c3ee74adb87bdabcb12f95786",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "28b4e0df51e74117bb9de8195b2ff3b3",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "218432c721404be5afb6cf463b932928",
      "Id": "cd5e5c3dbf2b4422ab86681e6d3ec488",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "2989dcc0470047478254fa9f8dc10bbb",
      "Id": "bc2663c0482a4a86bb03e0a37b6ef159",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "6cd4a9a19dda46c1b946daa83be0e338",
      "Id": "35c67743a0d44817a4330198349a295e",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "a5e122ca3411497ab123b82fa6221282",
      "Id": "9e508ae7737e4263acf3253ef2df9421",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "147d25a15d794170b1dfea8c56c26b54",
      "Id": "4d03517a85d5439f9c9d4af8cb99dcf6",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "328d10c265c540018b4bb6a99884c4e4",
      "Id": "45eb74bed2f94b8fa42fc8f9a87cff4d",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "24ab9c78fbb141d9a3dfc13deec90c05",
      "Id": "96337691b38c49909077287a805c2f57",
      "IsHidden": "False"
    },
    {
      "Start": "4b9b1b2e8c2648da8d551ba065b0040a",
      "End": "8c806428de07439c88b2c7d80368cc46",
      "Id": "d5a5faf947bd4c6e9d534f34f26dc29a",
      "IsHidden": "False"
    },
    {
      "Start": "f46b862733e044d69c1a4ec177003746",
      "End": "b2554cedec674fd9aa2f7fc35bab7008",
      "Id": "0eb2a939fab04aac99db2f4637a5f005",
      "IsHidden": "False"
    },
    {
      "Start": "07dbbb1674e54a9e8f6b2a156c204109",
      "End": "435b20457d424320a532552c70a09bd3",
      "Id": "05731ca6b12f462e8690ecedec35ac89",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "ad914ab7db324d3cabbf70d7c021674b",
      "Id": "8156c75b2e034d37a688cba998571ba5",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "11460fbb8e454536ad794d0533df1da4",
      "Id": "ead8cd7d7223438c994ed0e9518df43e",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "f408a27c225445f8a63d9421956e6542",
      "Id": "8a3a232f2d4f48cbb37e4fba08ba21dd",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "adf8ba0235dd43cdad77825fe8e2e652",
      "Id": "c4f1185fba73414da13d75378d1e200c",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "bf1c61757346455397cb5770d6cf2703",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "c5670ba8b9b447b780aa560e104437fe",
      "Id": "9bf8039d7d7249a79a230e546a56fc2d",
      "IsHidden": "False"
    },
    {
      "Start": "8b52cd842fe44268a9e03f873a26c3b2",
      "End": "53b6f12e745847f68dc353ce2c451feb",
      "Id": "ab33f90981244b64a08ab615830ba72f",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "42b5e54d628b45e4bb1d812a1bdd3400",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "4dfb3bfc50af48be91caa6d911acbde5",
      "Id": "18ce5ab0d1384212b0fa1286d115349d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "224bc41c8e5e48f69df96734b5630dd5",
      "Id": "5ae9faf216f54caca2a0dbdcbc462085",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "0d68433b10f24acb9214314463999a45",
      "Id": "700b925d147c4c1597a8a95e8ed3be8b",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "21d401f050e14cf99ca81a953d75e583",
      "Id": "9a95c8bd79e440e89d81c7917946d62c",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "ea0a83851fb84b509672d0682f79d5ca",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "0d6b0f3cb99d44ab8830b5ad9b738e2d",
      "IsHidden": "False"
    },
    {
      "Start": "4e9e4268b3ca4dd5af79b2060a6c16a7",
      "End": "b5d8347d75804d85b2a245db341aaef9",
      "Id": "2deb2add455147129dcb33a7a8b02971",
      "IsHidden": "False"
    },
    {
      "Start": "9643c088f3494595b5dbc380ac549c7d",
      "End": "31a2a03e186b41f68176345589f851fe",
      "Id": "ce3746b06a384064ae8e9c4078debf68",
      "IsHidden": "False"
    },
    {
      "Start": "3c083db8228747949113e5bbbc24025b",
      "End": "bda174787e4b4a8e865963888f8db7cd",
      "Id": "4b8c2f58ea2c49db8b089b5f0cf4a053",
      "IsHidden": "False"
    },
    {
      "Start": "81d62d02983b4123b2f914cf950dbaeb",
      "End": "a6665016e9e744eba5a38e7929cd311c",
      "Id": "3526a422222d46af91225795ec4e9c8d",
      "IsHidden": "False"
    },
    {
      "Start": "998827ee3014495e8c110816c4baee0e",
      "End": "97f5f482c2ff4b6b9d01fb6acea103c3",
      "Id": "152e403a343e4b0eb7110fdbb6b63fb6",
      "IsHidden": "False"
    },
    {
      "Start": "5796e50a715b44438859ea87211f63bb",
      "End": "6cbefe5b976d4911bf4c85bb982f669e",
      "Id": "801dcd5727cd446e98c94cc056b74c94",
      "IsHidden": "False"
    },
    {
      "Start": "0093154b653e4a30bc1962529159b671",
      "End": "e3e8ff21a70746028fe7c604a5bf2603",
      "Id": "2d1698d01cfa4f36b9d305f646376142",
      "IsHidden": "False"
    },
    {
      "Start": "89a9328d684e4071adff3b605751510b",
      "End": "ad01c8be9294441db55e98b527e63f47",
      "Id": "da8d02d40f5847859d666df938e9e193",
      "IsHidden": "False"
    },
    {
      "Start": "ee45782d58dd40028a5a9a904fc32d5f",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "c869112deb9d4d7d8087902aca717f15",
      "IsHidden": "False"
    },
    {
      "Start": "ee45782d58dd40028a5a9a904fc32d5f",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "f356c6db55234af58ec6c1f34b4eb9c1",
      "IsHidden": "False"
    },
    {
      "Start": "475e0286a5ac4dacabb2cee761756c27",
      "End": "5db6a20fe1124852826cf13f842ac00b",
      "Id": "98f4729bba004474b4ae719ce2682e52",
      "IsHidden": "False"
    },
    {
      "Start": "f51644ddf6b848ee879a0e777891a011",
      "End": "12abfb80ffa74a4c80e36ca5b6059b8c",
      "Id": "4d6e56398d544e65b4c4a9ee4e46402c",
      "IsHidden": "False"
    },
    {
      "Start": "73e28da5f76d415da4c1eacf5f3621ad",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "5253e3fc6b034b4ab3aea11b5468e408",
      "IsHidden": "False"
    },
    {
      "Start": "b911b69d434043be807ad2add98dc42a",
      "End": "2ad14c6bcf724060acdb8458b7f78d6a",
      "Id": "c168af207a664022aece6aeefa295420",
      "IsHidden": "False"
    },
    {
      "Start": "5d9487bfc7c44ae2bfdf8d4eedd16139",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "dcaf89c57ae54f409013e78c91264724",
      "IsHidden": "False"
    },
    {
      "Start": "c7dc47ce95e24e869a23305874333c13",
      "End": "2b5abecbcb914e1a9a193b72fc0b147d",
      "Id": "fbc6fa0a8d3d42b4b8de31d4080e57a3",
      "IsHidden": "False"
    },
    {
      "Start": "0022f26a17cc46f08e9e9e31a275afec",
      "End": "c9541ceeb1a74100b1a1b673cb97e4e5",
      "Id": "d385a1fefed5494291560263369d7a98",
      "IsHidden": "False"
    },
    {
      "Start": "d8cd3e358ba64725b497ea4e20081805",
      "End": "532327e61c94475e864ee66210950d73",
      "Id": "cd20549240e14386a4b87545777860e8",
      "IsHidden": "False"
    },
    {
      "Start": "a30599b6a7fd4fde96db0147739e76d0",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "c1fb2190c8614211a0514076f7823fdb",
      "IsHidden": "False"
    },
    {
      "Start": "cb04777d38104b17b1e3c68f38865ccf",
      "End": "3962efe63ce34d85a721d9f56887b16a",
      "Id": "77ff72a753544007883d230936545b5c",
      "IsHidden": "False"
    },
    {
      "Start": "d87ecf57ff744b57b3d8f202e5218878",
      "End": "b8ad741a3afa465bbb4c16aa539ffda3",
      "Id": "2c3c68d0f670453496e51dc99f5322e7",
      "IsHidden": "False"
    },
    {
      "Start": "5e8a4cfdf4204c5bb94e8cb22f5d23d9",
      "End": "eadbfafc3f3b4de180874c163318d87a",
      "Id": "a04e078d850e4c75830748353f220506",
      "IsHidden": "False"
    },
    {
      "Start": "74caac44099b44c5aa79edbcae0a4d50",
      "End": "6fe3ee84ab734f49957850748cc73cda",
      "Id": "47bb3d8a21064b6692f02cd4cedf40ee",
      "IsHidden": "False"
    },
    {
      "Start": "8b1aabff910b4b13a171b6cb39f7b44d",
      "End": "0bb341ea3a724b9187980126db0e38c3",
      "Id": "9178735dea044324a78ce4f2e8e94fba",
      "IsHidden": "False"
    },
    {
      "Start": "b1a458a403c7430799a52535d740c68d",
      "End": "332cd36ab4354dee85f0f3e0e6edb84d",
      "Id": "54bda23a71ff4ce1862fa4e3a976a48f",
      "IsHidden": "False"
    },
    {
      "Start": "1b4b6ab5373a43c49cefd0bd82d07447",
      "End": "1cf032ef59a6476da834a06d55eb9e3e",
      "Id": "7746c0e296cc4e8fa37e08b02a63d0f6",
      "IsHidden": "False"
    },
    {
      "Start": "14bb4d7c3f57477a899349ddc45a6922",
      "End": "bb55c29ca0cf45d9aba6c16e72f67bf7",
      "Id": "9a29252b61a743ed8828d7ca1ebdac47",
      "IsHidden": "False"
    },
    {
      "Start": "361d6bd36cbb49bcb41c98c38795b7c6",
      "End": "c837e6077e6f48a28e699c9abe64b349",
      "Id": "f1036e4ea39245f394eb7c674d3c5ea9",
      "IsHidden": "False"
    },
    {
      "Start": "bcb84da8b0d84bfcb0541ed92166db19",
      "End": "001d55aa68e3453a82d41a6fe5157426",
      "Id": "6e947301b35b46e692a64b61368752ca",
      "IsHidden": "False"
    },
    {
      "Start": "982fb21ca26d46b2adec9179afec796a",
      "End": "094ae248e07d4f5f9a8503e6355a10dc",
      "Id": "6413c07cbefa41748da107a550e33052",
      "IsHidden": "False"
    },
    {
      "Start": "72460cee46b64e0c84f053327d6c5fac",
      "End": "c1e70af337a44eac87a5dd09011a4f10",
      "Id": "d5e3bbf448f2410db2107e41d6542d40",
      "IsHidden": "False"
    },
    {
      "Start": "229afaa32ee8482e9bb9eef8260cdad8",
      "End": "66b6a9ec837645859c30cc8472b8aef5",
      "Id": "2a1b4148e64440e6b8c3f73c6ab6ca2d",
      "IsHidden": "False"
    },
    {
      "Start": "f164e72112cd4c18be78ece50254f123",
      "End": "9d0d00ebf73f4771a4f596c2951df957",
      "Id": "bdbd414ef823488e8c3514a6452b06df",
      "IsHidden": "False"
    },
    {
      "Start": "f164e72112cd4c18be78ece50254f123",
      "End": "0931c9734b004ee48c51f5389357f259",
      "Id": "295d0bd7cc5147e5964f01ae7436be21",
      "IsHidden": "False"
    },
    {
      "Start": "f164e72112cd4c18be78ece50254f123",
      "End": "d5fe4784c799413ea381d9e200b596ed",
      "Id": "8d98c7c5b5094a579c6e29233dbbe17d",
      "IsHidden": "False"
    },
    {
      "Start": "f164e72112cd4c18be78ece50254f123",
      "End": "6a75ef4328804237be398c4b09a55c1d",
      "Id": "2ebaa5d8fd2a4396ba4015db54932b96",
      "IsHidden": "False"
    },
    {
      "Start": "2aec28b306c842b780659cd5dc8d851e",
      "End": "922596a300e44da9be60be807ed79110",
      "Id": "b1eb83b038734c39a72e948f45515061",
      "IsHidden": "False"
    },
    {
      "Start": "d3bb26a0ad634d209af1281279fa683c",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "985fabd7ee7b42b299875c80c0af033e",
      "IsHidden": "False"
    },
    {
      "Start": "bf35c17124c74e39bc2951ce05e7e9cb",
      "End": "9e4e1b6d9f9244abbe138f8f0e4f1129",
      "Id": "624441bdffe6467fa01ddadaba473973",
      "IsHidden": "False"
    },
    {
      "Start": "e8fb11516d42445f86a2f41d492bc088",
      "End": "eff4f31cd844408dadef718f55b19fe5",
      "Id": "9ba4a81ff294407b8f46b0ca6d8472ef",
      "IsHidden": "False"
    },
    {
      "Start": "d134708d818f4b7a81c864b4bf5bcb37",
      "End": "53db257e27f741388e7c7b4493307980",
      "Id": "5c43b58a669646bda24da0606921560c",
      "IsHidden": "False"
    },
    {
      "Start": "0e1f63f1866d48aa89fb0c295d452d54",
      "End": "bf1b0c5ccb9744cb92bc08b3639c2885",
      "Id": "dc2db4838e7e4aa9a2242b11338b6255",
      "IsHidden": "False"
    },
    {
      "Start": "37515ed871de4f79aaa636070d775ff4",
      "End": "099a7ed2b3fc41ff881e6ccfc68226ca",
      "Id": "03487223eba24466b4138aacd4e471ca",
      "IsHidden": "False"
    },
    {
      "Start": "acd104c0afb249199638d73635f23c1b",
      "End": "c7894e1298054c7886448820f45d9550",
      "Id": "23157a9f25c24a5ba6b71d091cf394e9",
      "IsHidden": "False"
    },
    {
      "Start": "280fd3976a974c9a9d01fa2d1fde96f6",
      "End": "464732b61147438297178411cf484ae5",
      "Id": "c2469cdf59fc42bdb4e8fb183bcda9c2",
      "IsHidden": "False"
    },
    {
      "Start": "5ff3a2e3ee05404f9a01f39205989cc9",
      "End": "9b17903ab09647e9bf0f88efe49f0a46",
      "Id": "1b405d8e4a3843f1b26aaf60d1502493",
      "IsHidden": "False"
    },
    {
      "Start": "adc78c25139b418f82016c10f8351662",
      "End": "fce50d2bde4a4893aeed11f97b072775",
      "Id": "a583a9a9ecae40528d532ff1141736fa",
      "IsHidden": "False"
    },
    {
      "Start": "f979b89a93984d849cb62b20047018b3",
      "End": "291238b79a7e4bf1b2313a8115387816",
      "Id": "6591619553134126a42ccb00670097fd",
      "IsHidden": "False"
    },
    {
      "Start": "e99d0125554144b0b396ebadddb69be3",
      "End": "ccae9deea7d04c08911a77c660b418f1",
      "Id": "1a1f0674a5b74b0ea01de37eeaa13ceb",
      "IsHidden": "False"
    },
    {
      "Start": "5a001b15d4d845889548c5f818c354be",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "6cabf54606604d67b02fb2b0dd82ddd0",
      "IsHidden": "False"
    },
    {
      "Start": "5a001b15d4d845889548c5f818c354be",
      "End": "0c4a3160c7094e96b7f6e6d753c0b730",
      "Id": "b0a7578ebb1a4fb58ba15b01cb14b11f",
      "IsHidden": "False"
    },
    {
      "Start": "5a001b15d4d845889548c5f818c354be",
      "End": "774704ce4e9e45d79d422ecb6e402249",
      "Id": "4d42a6b3b15d409880893091fe2b405c",
      "IsHidden": "False"
    },
    {
      "Start": "5a001b15d4d845889548c5f818c354be",
      "End": "753d66be5efc42188766dfff958002f3",
      "Id": "07f3a43a1d8a4fc49a5bdb8928f48b7d",
      "IsHidden": "False"
    },
    {
      "Start": "ea2ec0856c684b46824495fed5662081",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "f0560baae9da46baaca1c48f480672ca",
      "IsHidden": "False"
    },
    {
      "Start": "ea2ec0856c684b46824495fed5662081",
      "End": "07fb7a899881437a8cad01274344af3a",
      "Id": "3c9f1132a8cb4c27b431f3f521b30fd7",
      "IsHidden": "False"
    },
    {
      "Start": "e4ce8b04875a4e6393dd0dd6c9fc407e",
      "End": "057a4bc9c5e344768015581e7878ddd0",
      "Id": "9b7ed1ee94a349e99cd5775fc95d9a7c",
      "IsHidden": "False"
    },
    {
      "Start": "523b04b4894948559c07735c835a3291",
      "End": "ef75523286b44c9a95d8c40168299768",
      "Id": "1a12d686e6924f67be75f81dcab806fb",
      "IsHidden": "False"
    },
    {
      "Start": "b40e24339d7d44228a4e952ffc51fd42",
      "End": "73e1178b43464dd5830def7a56d8835a",
      "Id": "f018dfb7a35c444b818daf8eec87682e",
      "IsHidden": "False"
    },
    {
      "Start": "b40e24339d7d44228a4e952ffc51fd42",
      "End": "e94fdf4f8936461c8272c7c36871d59b",
      "Id": "1185eb53d66e44a4a822f8f221943b43",
      "IsHidden": "False"
    },
    {
      "Start": "cb685394c02b4dc699f3aecc2c53c9a0",
      "End": "26479202d3b14cb28ac7bfed3f6c49eb",
      "Id": "96358c22f62749898a260ec054792323",
      "IsHidden": "False"
    },
    {
      "Start": "372accbf08394578abafe112dc8e3889",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "293b42d6f6fc4ca6b5def20969412fbd",
      "IsHidden": "False"
    },
    {
      "Start": "ffa680e35e5e4fd2ac403312e0b29356",
      "End": "a4d77e53ba3442ba8af12fd25a3a0522",
      "Id": "922861863db8428b87644ea2ead8b0a0",
      "IsHidden": "False"
    },
    {
      "Start": "46d572734dad46fa9be3371a5f38f6f2",
      "End": "d435672756674bedbb6421cbaed4faca",
      "Id": "03787c2379b54183904224703553a716",
      "IsHidden": "False"
    },
    {
      "Start": "b70ee6ca161f4837b6d2756d692e0669",
      "End": "6f58f54a93bf4cfcb44bc119c38b6e68",
      "Id": "74850aa485c144a8ba7c9f17347e834d",
      "IsHidden": "False"
    },
    {
      "Start": "b70ee6ca161f4837b6d2756d692e0669",
      "End": "34767103b6854bafaca8c76d223233b4",
      "Id": "91b1df24eb2344f4929ee925eb6e5f72",
      "IsHidden": "False"
    },
    {
      "Start": "630d0d6ef6964f2d86a9d6ab260b776d",
      "End": "47bfb21a15dc48359a60cb04af3aec7d",
      "Id": "95d038c448194f59b15289ac807c651f",
      "IsHidden": "False"
    },
    {
      "Start": "5e6b5e8e6aac4d79b85878d9688ae027",
      "End": "4b3d7297c1ae4157905aa3395112e2b4",
      "Id": "5e85e6c239454d06861012671f311595",
      "IsHidden": "False"
    },
    {
      "Start": "b87f58dc7f3e4ac7b83f25906d03f57b",
      "End": "f7a0b66b433341d898a228c0f6f0deeb",
      "Id": "358008e172864eaaa2e78699f2ba96b8",
      "IsHidden": "False"
    },
    {
      "Start": "9e75519b7e5b4e27b03233a8ebb26517",
      "End": "b2c380faaf60453ea00986fe632ac9b2",
      "Id": "e930a06dd8ed45e9af992f24f5f43040",
      "IsHidden": "False"
    },
    {
      "Start": "9e75519b7e5b4e27b03233a8ebb26517",
      "End": "b3f5a288f3f943828f7569488f760a6e",
      "Id": "8eb29cce0868451f9ddc519998177436",
      "IsHidden": "False"
    },
    {
      "Start": "c284c69234a648dc82326893244b3a52",
      "End": "b5b8d3f15cff462c9a8e2ea2289d2f6d",
      "Id": "a482163398e844319aa0fc8469619e5d",
      "IsHidden": "False"
    },
    {
      "Start": "8107038df5e448f794e71cba1371484f",
      "End": "7d001e7bfefd4c13ba5f57eb95fc2ed6",
      "Id": "cb62999a980246988e6c81d73d20d5e2",
      "IsHidden": "False"
    },
    {
      "Start": "7a01d1c9ef6c4b4487a2045be440da8a",
      "End": "ec7ecc7a54914ef4807ead696a3721f5",
      "Id": "40622cb2f7dd45f0b60084e925414cfd",
      "IsHidden": "False"
    },
    {
      "Start": "a6041221b82d4595a4dbe22a06cfd4e6",
      "End": "73d55597ff7c4fe981aa0e15fe8f682d",
      "Id": "36fbbbdf31b84d03a166548e613814ee",
      "IsHidden": "False"
    },
    {
      "Start": "d5ea6caa087b4fac9e5735b5dc4e22c7",
      "End": "aa964aad22944010a81394f565c15c9f",
      "Id": "507b7458f9af4625b6f4646ebd1d95b5",
      "IsHidden": "False"
    },
    {
      "Start": "26e356a2dc46475db47191024df7547b",
      "End": "feaef43be11b4d018c1bcba1a407b412",
      "Id": "4c6383f0db79474fba4ea998f5d6df5c",
      "IsHidden": "False"
    },
    {
      "Start": "4f401dd58f244574bdc53b7f6e9507e0",
      "End": "acd27e8465aa439ba815d35ce68d19b7",
      "Id": "25052df6e1014459b39d16cce9d0f28d",
      "IsHidden": "False"
    },
    {
      "Start": "ac84960d7b504e0c852299ff6c1db5d4",
      "End": "c962aa70d9dd4cb1811b7e80616c608a",
      "Id": "9dc13277de684701b2ece542f898c556",
      "IsHidden": "False"
    },
    {
      "Start": "8aa0927af95e41f68f535b6a3561a85d",
      "End": "86b2196a0ac94ce9bba889ce2cc5c8c4",
      "Id": "b36644bf4ab040f1a19c1cda5a45e42f",
      "IsHidden": "False"
    },
    {
      "Start": "7b358919600143d39a1e735e444fd896",
      "End": "0650d94064d3442790f95726916ec717",
      "Id": "86daf17e0b194258ab06f1ae404c8d94",
      "IsHidden": "False"
    },
    {
      "Start": "236002edfa7d44d4915488a11ec17dd1",
      "End": "b4632c5397e34fa989760dbc064b855e",
      "Id": "636ca9d5f2594e8eaed7f3a57774aa1a",
      "IsHidden": "False"
    },
    {
      "Start": "236002edfa7d44d4915488a11ec17dd1",
      "End": "b2a7661880ab4902b37a204dd9adafbd",
      "Id": "d348e0c5a6984241b6dfb9c75adcf443",
      "IsHidden": "False"
    },
    {
      "Start": "cf5ca50b35e141ca893b84ce52335f6e",
      "End": "902d9f4df3864ec6beb10a67b4348549",
      "Id": "dc16d263efb34710909e185926fede91",
      "IsHidden": "False"
    },
    {
      "Start": "25033195ba6d4caf8321f2af74a98672",
      "End": "119776fe7d2041f29cd2d41751820b10",
      "Id": "cbc55192f3cf4e0c94c0d5fc8a6dcd82",
      "IsHidden": "False"
    },
    {
      "Start": "8afc00bf435544fbb56239508d9f3637",
      "End": "a54d179247714c81b5d3a31aaf4ea9d2",
      "Id": "8ecf68122d284babad14888b9b5a3cf9",
      "IsHidden": "False"
    },
    {
      "Start": "6084299cfffa471c9d6ed99cda8bcb56",
      "End": "eadfe4aacea64fdb8e57da004535bf1d",
      "Id": "abd0fd751b5e41cdadff45c10ad58a1f",
      "IsHidden": "False"
    },
    {
      "Start": "6084299cfffa471c9d6ed99cda8bcb56",
      "End": "35934ec2823f4f3698aab35fc71f577d",
      "Id": "0b47c1a7a5ec44f2a8fbd53e9a485031",
      "IsHidden": "False"
    },
    {
      "Start": "910f187fe46140c6bd430c3d4efb8dcc",
      "End": "ffac89bb86214d689b66e4a8bc46a7bf",
      "Id": "66266274b04f4f3e8c03b86b7c098dbc",
      "IsHidden": "False"
    },
    {
      "Start": "338f5c71ece8402c998fc6eeeabb8829",
      "End": "0a70b0ffbdc84dadbed83fd0085bf74b",
      "Id": "6a41617d68994a29ac55fc004ea40a91",
      "IsHidden": "False"
    },
    {
      "Start": "a59a76d3750c424c9e20ed5aa75b94ca",
      "End": "a4a767cbeb384bfe9b745a04b1c2cf72",
      "Id": "4b8dee6cb17a4a889eef88ebabe7bc48",
      "IsHidden": "False"
    },
    {
      "Start": "4784c9aec40d49dca79b977e588aec87",
      "End": "461c1d856c464729ad26e103adc45817",
      "Id": "5e7eddf5c1ae4bf0b03196a5a3d5f614",
      "IsHidden": "False"
    },
    {
      "Start": "03194b542a04425586cb9b8e000d22f3",
      "End": "53b27facade84986801796520162fb22",
      "Id": "419c4bb900664d248892ef103ff22f97",
      "IsHidden": "False"
    },
    {
      "Start": "52ed1fe3d94b4389ad671b2479f7765d",
      "End": "194809884b97440f9755d5f10a19acaa",
      "Id": "b591debdc38d42dc9fc890ee403451d9",
      "IsHidden": "False"
    },
    {
      "Start": "3492ce2a7be04ece8697d2ace03fbc74",
      "End": "fe0e04ae14734f5492f5536fe3fb084a",
      "Id": "fd3d8770ac2d4c20970d3e08ac44e5d5",
      "IsHidden": "False"
    },
    {
      "Start": "efcc22a053b64930be66ab27bddfa203",
      "End": "c6bf7feafc3c479387db86b3244282c6",
      "Id": "27aaa4b494a04fc28e216087b8018858",
      "IsHidden": "False"
    },
    {
      "Start": "4f1ebbf8eeb940dbb90177180622774a",
      "End": "47bf248c681c45469a68025772eabc98",
      "Id": "70b14fc2c9424347b50fbe5a3450c48c",
      "IsHidden": "False"
    },
    {
      "Start": "f6942c26ba7d42a7937a4e6f913d1631",
      "End": "0462c3c9b3c74a69a6bd1df6a694e1b5",
      "Id": "dd4c7f6a3e7649b2b2a8d21f1536109a",
      "IsHidden": "False"
    },
    {
      "Start": "3ff706233ab04ee4b39ac38d9746c272",
      "End": "cddf3c28ab7d4ab78b5af38aea8b819d",
      "Id": "8c9ffaba9518429caf80b44db343cc69",
      "IsHidden": "False"
    },
    {
      "Start": "b85b66e154504b0a867194228765011c",
      "End": "3683ceeaa8bb47a6bdb3d133190f78ea",
      "Id": "74253324699a43cd847efcb725e416c8",
      "IsHidden": "False"
    },
    {
      "Start": "e6c37148940d48b987dc68d01e659edf",
      "End": "db9546af384e443e9d9b1be5bd56d72d",
      "Id": "d4c6f27db75449928c6f7bc754f321d9",
      "IsHidden": "False"
    },
    {
      "Start": "ffedf1d7ab454b12b2237551629c9768",
      "End": "fc3f1586d3a5453d9053a0cd4d32714b",
      "Id": "16c1bc9ad09a4b5c9f08075b67d42e0b",
      "IsHidden": "False"
    },
    {
      "Start": "e641afd1ba004f6d978fd508f2c0ccf4",
      "End": "87405be8a28f442c92e411b65539fccd",
      "Id": "df3b5a8001bc4c57923582b1a5d9ffe3",
      "IsHidden": "False"
    },
    {
      "Start": "8f9c184c379946adb7082a1eea362ac0",
      "End": "baa63a8c490245ae858ec1ced801c7fa",
      "Id": "544a248fbec640b784300ca132920fb5",
      "IsHidden": "False"
    },
    {
      "Start": "04c833124236455293ed1babba9d0406",
      "End": "39329b3f58144854a073fa87a1413907",
      "Id": "2cb61fcc713c4dd7a6f703a187238492",
      "IsHidden": "False"
    },
    {
      "Start": "079a35c021c24663a45a528bf745501e",
      "End": "1de39e49dd124e6d96f8e36ee03e8993",
      "Id": "36b761765c17498a9677c78711cb7eb3",
      "IsHidden": "False"
    },
    {
      "Start": "65bfe9c40290470facabdeae2f62dfe3",
      "End": "cf66f132f46c472a8506c1d51545c0c2",
      "Id": "faea53495dbc4ce18608d6499cabecad",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9Td/vRv8Aeotx9aNx9asCXf70b/eotx9aNx9aAJd/vRv96i3H1o3H1oAl3+9G/wB6i3H1o3H1oAl3+9G/3qLcfWjcfWgCXf71Qu/EGn2F19nub2GCbaH2yHaADnBJ6DpSatqkekWEt1L8wXhYwcF2PRR9f0GT2rxDxTqU91cNHv8AMv7xizOB91ehI9P7o9Me1Uo3JbPfllDKGVgykZBHII9aK5L4c297Z+G4kuZS8P8Ay7q33ggHXPoT0+mc8jBUlHSbqN1RZ9qhlkkmkNvb7Vl2hnkYZEakkA47k4OB04OfQ0It7qN1VILgs5hlCrOozx0df7y+3qOx9iCZs+1AEu6jdUWfajPtQBLuo3VFn2oz7UAS7qXdngVDn2rJ8QXxjh+yxnEkq5dh1WPp+Z5A+jHqBQBzHjTxBHMZJ3fFjag7COd56Fh656L7f71cz4E8OzeJNXe8u1Kq3zy4P3E7ID79P++j2qprUzeItcTT7YF7W2kwwT/lpLnG0fTOPqT6CvXfD+jx6HpsduoUyfelYd29vYdB9M9Sab2sSu5qrhFCqFVVGAqjAA9BRUefaikUR7qyta0ua6kgvtPmFrq1qG8mR8+XKpxuilA6o2Bz1UgEdCDobvrRu+tMDLtdWj121MipJZ3lu+ya3kx5ttLjoexBB4PRlPoav2V8LoMjgJOn3lHQ/wC0Pb+XSs3WtIlnnTUdPKx6nEuz5jhLiPOfKf29G/hPsSKzodSW+jW5g3288TFWSQYeFx95GH8x3HI7GgR1u6jdWZZ6xDdW7ySOtu8ePNV2AC56HJ7Hsf6g1QvvHGkWWQLhrpx/DbLuz9GOF/WsatalQV6skvVm9KjVrO1OLfojot1G6vPr34k3EmRZ2kUI7POxkP8A3yMY/M1g3niPUdRyLi/nZD/yzjby1x6EJjI+ua8KtnuEp6QvJ+W34/5HtUcjxVTWdor8fw/zPUr7WrLTpFhmuI1uW4jtt482QnoFXOf6dzxXDeNtcl0qz8uNwdUvmIQr/BwMuPZRgD3x15rnbLxNp/gzXvD1ve6Zfu+uLdvBc2lrut7OGCPfJPO3G3eWSNAMklvQ1Z8O2Nx418RSajcq0aP91f8AnjCOij35/NielexhKtStSVWpHlvsvI8jFUqdGq6VOXNbd+Z0nw18Lpp1qt5InIysQPr0LfzH5+xru91QRqsMaxxrsRQFVR0AHAFO3fWus5iXdRUW760UARbqN1RbqN1UIl3Vzfi+BdPtpdatxi5hCrNGOlxHuAwf9oZyG/A8Hjf3VheOXx4S1I/7C/8Aoa1z4mbpUJ1I7pN/cjow9NVa0Kctm0vvZ554n1641DWvDNhpug3WqWepNO1xrETBItLWNARvBHzM7lV8vIyAxzkCqDTsjbWK5wGBRtysp6Mp7qex/qCKzJJ47jT9R065Mx07UbeS1ult5DHIEdCjMjDlWAJ5HNQaJpVzpU0+g2mi2ukeB9FsLaLRdSF0JJJ22ZkBTcSsa8L82CSpIyMY+SnGhxBhvbUfdqx3X6Py7P8A4J9VCVfIMT7Gt71KWz/Vefdf8A2vtHvTxqmkaVa3Oq+ItTh0fw7YBJL+/uGKpGrMFRcjnc7EKMc8nHSshLrcoJGCR0rVj8SWp8M3WhXfh3TNdjmlFxGt7CJcTKQ0chRwyuUIBUYXkDnOSfj8ulQlioxxMrR/N9j67MYV44WUsNG8vusu5PqFvrVnqmvaFqPieTX7OTV5tRP+jrBDYQYUQ2UaqTlIVQEnPLsTgEHPY/D/AFm1trXUGnmWBd6BIycttAP8IyT6nHc1x0Oj301mscCFzMfMuLid8FmznDZ+bOeTx1x3yK09OsP7FjlW4uIzJIQSg4xgenU9fSv06VTEVMbCEItU43u9ru2lu69OvofmcaeHp4OU5yTqStZb2V9b9n69PU7i88bW8ORb28twezORGp/Qn81rMt/Hlwt+huo4lszw4iU7lB/i6nOPQDpnviuauNRiXO1Xl/8AHQfxPI/75qta3jT6lZRFEEclzFG3GSVaRQwOeOQTyACPrzXr3R5Op7CsiuoZWDKwyGU5BB6EH0oqCCKO1hSKFFjiQYVF4AHpRQUJmjNRZ9qn0v7JJdvbXSLJM3zxeYSVYc/LtPy5GD25HPUE027K4iITqzFVzIw4KxguR9QM4rD8fecvg/VGaHykVFJMjDP316AZ/XFdNeeJNLtMwrdRysny+TagylfYhAdv44rFvPFEkyssFhhG4Ju3A/8AHV3ZH1IrlrxdalOltzJr71Y6KFT2NWFW1+Vp/c7niOl6LqmtBWsbC4uUbpIqYj/77OF/Wumt/hzqi2irqWo22m2e/wAzyy3mEN+YXrz1PPPXr2d3ql/dZMt2yj+7Avlj8+W/8erMaJBIZMbpP+ejHc3/AH0ea+YwfDuGw13OcpNqz1smn6a/ifTYziLE4qyhCMUndaXafq9PwM238MaBY8t9q1RxzydqfUY2gj8TV1b0WcZSztLeyTuI16/kBz9c1ItvLP8A6uNn9wOPzp39jyt99ljH5mvocPhaGGVqFNR9F+p87iMXXxLvXqOXq/0My4up5vvzO3sDtH0wMZ/GqbKB8qjHsoroI9HjZiqh53B5AycfgKvweHZm6qsC+nAz+Wf1rtUWzkv2OONnK/8ADtH+1xTraxkjuIpog00kMiShVUkZVgQD7Eiu+g8N2sfMmZj78A/hzWlDbxW4AjiVMdD3H41SiTqSWtz9qt45gjR7xnY/Vfb/AOuOKKMn0oqhke72NZt8sN3cGKREmTYNyOAw4Y9RV3I96ij8m1vFnmhkubZgQ8SZJVjj51APOcAEfQ9jkknbQaKe3AWNFwBwqKP5CpF0e7mH+qMY9ZPl/TrWo2uTbdtlpsdmvTdcON312JkH/vsVVke6uv8Aj4vZSO8duPJX8x8//j1ZKmyuYrTaPBZqGvLtIgeByFB+hPX8qRIrZf8Aj2s5J/8AbZdo+uXxn8M1PDawW7F4olRzwZMfMfq3U/jU2761oqaJK/2e4l++8cI6bYwXP4E4x+Rp6afAvLq0x/6aHIP/AAHp+lS5HvRke9XyoRIuFUKq7VHRRwBS7vY1Fke9GR70wJd3saN3saiyPejI96AJd3saKiyPeigCLd7mjd7miimAbvc0bvc0UUAG73NG73NFFABu9zRu9zRRQAbvc0bvc0UUAG73NG73NFFABu9zRRRQB//Z",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 46818.9296875,
      "EyeY": 3725.73291015625,
      "EyeZ": 60408.90625,
      "LookX": 3665.0625,
      "LookY": -3970.48193359375,
      "LookZ": -17714.453125,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4830.3604942049369,
        "Y": -972.42375137899512
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4472.3604942049369,
        "Y": -972.42375137899512
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3171.4414098274679,
        "Y": -964.474391357843
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3425.4414098274679,
        "Y": -930.33439135784306
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2270.4414098274679,
        "Y": -583.33439135784306
      },
      {
        "ShowGeometry": true,
        "Name": "Main Beam Slope Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2270.4414098274679,
        "Y": -431.47439135784305
      },
      {
        "ShowGeometry": true,
        "Name": "Main Beam Slope Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2270.4414098274679,
        "Y": -279.47439135784305
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1293.4414098274679,
        "Y": -315.47439135784305
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1782.4414098274679,
        "Y": -323.19439135784307
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Beams Slope Angle (degrees) from",
        "Id": "b99019feddf34cddbd879fca7f2bc375",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1782.4414098274679,
        "Y": -159.47439135784305
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Beams Slope Angle (degrees) to",
        "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1782.4414098274679,
        "Y": -8.4743913578430465
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "596909f5799446a7820a3e674d2f49c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 558.71700708717776,
        "Y": -142.63848840541891
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 180.71700708717776,
        "Y": -15.498488405418982
      },
      {
        "ShowGeometry": true,
        "Name": "Main Beam Section Type",
        "Id": "3db0ae870aae4d4e8fccea48976c3b33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 180.71700708717776,
        "Y": -201.63848840541891
      },
      {
        "ShowGeometry": true,
        "Name": "Section Type for secondary beams",
        "Id": "1ca46343c98e422eb589fa5f6c1c842d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 558.71700708717776,
        "Y": 238.36151159458109
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "145ece1505dd4e13b5adb581f63e7bf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1009.7170070871778,
        "Y": 36.36151159458106
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e1d42da2f0d04115ba4c333d965e15ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 558.71700708717776,
        "Y": 73.641511594581061
      },
      {
        "ShowGeometry": true,
        "Name": "3. Library file path",
        "Id": "5c1fecff026548af92d1d0d712d29ce2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5070.3712755861579,
        "Y": 1378.67991391853
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6009.3560721101157,
        "Y": 624.649032984208
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3425.02857210043,
        "Y": 622.06192861746422
      },
      {
        "ShowGeometry": true,
        "Name": "4. Connection family to place",
        "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6594.989394600454,
        "Y": 876.56746114068335
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3872.02857210043,
        "Y": 652.15554495810125
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4796.566144245945,
        "Y": 733.62020754495143
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4542.566144245945,
        "Y": 767.76020754495153
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5211.566144245945,
        "Y": 471.72391430840912
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5211.566144245945,
        "Y": 995.51650078149419
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5626.4379735565008,
        "Y": 838.4691779698328
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15456.502672528983,
        "Y": 436.30898501503066
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7082.3293633591693,
        "Y": 390.75445754335414
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6828.3293633591693,
        "Y": 424.89445754335412
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7497.3293633591693,
        "Y": 390.75445754335414
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7845.3293633591693,
        "Y": 390.75445754335414
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7505.7161426662915,
        "Y": 27.333596023017549
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7090.7161426662915,
        "Y": 27.333596023017549
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7853.7161426662915,
        "Y": 27.333596023017549
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6836.7161426662915,
        "Y": 61.473596023017535
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8153.3293633591693,
        "Y": 390.75445754335414
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8161.7161426662915,
        "Y": 27.333596023017549
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7065.62983547072,
        "Y": -698.72869450461826
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6811.62983547072,
        "Y": -664.58869450461827
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7480.62983547072,
        "Y": -698.72869450461826
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7828.62983547072,
        "Y": -698.72869450461826
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8136.62983547072,
        "Y": -698.72869450461826
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7250.74132934497,
        "Y": 956.00386581250916
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7728.74132934497,
        "Y": 956.00386581250916
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8777.74132934497,
        "Y": 956.003865812509
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "774bfec08d6646eab975b1a78194a1d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11455.68480025106,
        "Y": 1087.1107422314772
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11201.68480025106,
        "Y": 1087.2507422314775
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11455.68480025106,
        "Y": 1304.2507422314775
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14806.502672528983,
        "Y": 436.30898501503066
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7238.332560928684,
        "Y": 1363.8183201213869
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7674.332560928684,
        "Y": 1346.8183201213869
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8064.332560928684,
        "Y": 1338.6532049599714
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8372.332560928684,
        "Y": 1338.6532049599714
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "d19b07df0f1247c09fd1a6d579459e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11877.68480025106,
        "Y": 1102.1107422314772
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6835.74132934497,
        "Y": 956.00386581250916
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6581.74132934497,
        "Y": 990.14386581250926
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 186.45749213562021,
        "Y": 940.08847852359554
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2523.3470143293243,
        "Y": 937.77931684028488
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2012.3470143293243,
        "Y": 1011.7793168402849
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1589.3470143293243,
        "Y": 1011.7793168402849
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3034.3470143293243,
        "Y": 937.919316840285
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3036.2771333251376,
        "Y": 1112.7952874097875
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3994.5134707731686,
        "Y": 955.49638944503931
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4010.3712755861579,
        "Y": 1344.67991391853
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "3bebde19937e490791171cc2cfde3903",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1782.4414098274679,
        "Y": -574.474391357843
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "56327268f83a41f794d803210c7ccfb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1439.7170070871778,
        "Y": 36.36151159458106
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "22c19bcb914b406288d23f558fb8d1af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -874.44140982746785,
        "Y": -315.47439135784305
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "622fa64820ff42b685cc47c13df704e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2225.4397759103995,
        "Y": 128.19033052097268
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "fa15ed11566e48f6a283979a2190aee0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2678.4414098274679,
        "Y": -890.474391357843
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "80ef5761348f48a6b66cf6d9ada319d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2270.4414098274679,
        "Y": -799.474391357843
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "66b9e319593246b08060a6d65bed72b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2678.4414098274679,
        "Y": -674.33439135784306
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3f18dd40bc904c86935aae15483231c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3171.4414098274679,
        "Y": -782.33439135784306
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "589c100ed1784fecba3a3b385fe0a92b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4781.5134707731686,
        "Y": 989.63638944503907
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "f06ecf7354104452a3eb1e3cb4eb5693",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2681.4397759103995,
        "Y": 187.19033052097268
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bcec3fc4add24b0589dc5618461136c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2225.4397759103995,
        "Y": 280.33033052097267
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "198f6a7e428b4323bc9a630905af734a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4527.5134707731686,
        "Y": 955.49638944503931
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "8b127294001c43258ec3ad4c4290a4bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4543.3712755861579,
        "Y": 1344.67991391853
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "b63e7b9928144009ba075fe13f5fa492",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8164.74132934497,
        "Y": 956.00386581250916
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "448b04588fc7451d8c0068a54ed45cf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8469.74132934497,
        "Y": 956.00386581250928
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0823fb156d0446cd8864bb09e09f0c07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9597.5366838497412,
        "Y": -324.53890627878957
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "5e0eb5c163d24171a2301ad53ae4798f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9942.5366838497412,
        "Y": -166.53890627878957
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0fc01510ee2448298df0fc210e4896b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9597.5366838497412,
        "Y": 25.461093721210432
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "c0bdff590ea544b8ac263259e232e36d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15053.502672528983,
        "Y": 436.30898501503066
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "123f3eb43c174a3c94cfac8f0f6d6b72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10750.536683849741,
        "Y": 15.461093721210432
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "166dd89e97474d65a6d996c425a7fdfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10346.536683849741,
        "Y": 140.46109372121043
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "2007d3b3760f41b6b456ae3397638de7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11154.536683849741,
        "Y": 106.46109372121043
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a4c3af49ce2a421e808d706ba1bca803",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10750.536683849741,
        "Y": 231.46109372121043
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "9553923afbd148c0af88a62b9787d4a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12919.365390787552,
        "Y": 1537.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "882167332d37490a91cf6d73f377ca47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9392.4277581694787,
        "Y": 885.03303761176073
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "18a700743da240109da19e798f95d7c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9713.4277581694787,
        "Y": 987.03303761176062
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "98312f535b7f4791b16fb00a8dfe5f5b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9392.4277581694787,
        "Y": 1123.0330376117606
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "0940742feea442a09258951a9a59e8e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10117.427758169479,
        "Y": 1078.0330376117606
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0691bfbea6b84c10bf83b3373d8259e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9713.4277581694787,
        "Y": 1203.0330376117606
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "d0623109251c4dc4b447817e143bb838",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10521.427758169479,
        "Y": 1169.0330376117606
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "34bff7bdd1494741b01adc3e753436f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10117.427758169479,
        "Y": 1294.0330376117606
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "d16c47b8e8df46ce8e5a9f4971aca621",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12611.365390787552,
        "Y": 1368.0466534579311
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e5ae17d7a2af4af78146a680b26cbbe2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12611.365390787552,
        "Y": 1216.686653457931
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "5d472f0c20d44732881a5219166e6465",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12919.365390787552,
        "Y": 1356.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "1f9a781b0e0f47a2be0df821dd5302ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6823.332560928684,
        "Y": 1363.8183201213869
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4864861755984fbb97dc758aaf87191b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6569.332560928684,
        "Y": 1397.9583201213868
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "48985b1a298f46218a348d63b701c650",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6830.9236086121573,
        "Y": -323.10406138483523
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "dcaf9e55d6814a92a87f69010ca21631",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7499.9236086121573,
        "Y": -357.24406138483522
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "69e5784b3bfd4693bb8008fcd7867651",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7847.9236086121573,
        "Y": -357.24406138483522
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "15ea64d0f68c4cd79cb884b221882d1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8155.9236086121573,
        "Y": -357.24406138483522
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "790a19a7eea24dd9b495245c7dda182d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7084.9236086121573,
        "Y": -357.24406138483522
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "a5fcd249e1c74917aee5a0f4063e79f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10346.536683849741,
        "Y": -75.538906278789568
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "3f33722d7e9845d3a980b73f85b0b8f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9942.5366838497412,
        "Y": 49.461093721210432
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "17cd2f5c0d524170a765b21fe1db48da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1590.7189435383275,
        "Y": 776.23000709382632
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "c8f20affece64409b70e2439b454693b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1966.7189435383275,
        "Y": 835.23000709382632
      },
      {
        "ShowGeometry": true,
        "Name": "5. Filter connection type name",
        "Id": "20f52271089f4466a01d0df3c7a58715",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1193.7189435383275,
        "Y": 869.23000709382632
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "a58307b9981d4b42945aaf3792f88544",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2553.7189435383275,
        "Y": 801.23000709382632
      },
      {
        "ShowGeometry": true,
        "Name": "6. Select analysis results",
        "Id": "50bc9b460e7d422ab736778d9d892cdc",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3425.02857210043,
        "Y": 774.15554495810125
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "1b1d378ae50e4a7c8ff27a7a2d00bbaf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1590.7189435383275,
        "Y": 928.23000709382632
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "91d1ee2efb14455fa64706e9d11f8c77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2282.7189435383275,
        "Y": 835.23000709382632
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "049447f67f884a61b4ea430abbaf046c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6201.989394600454,
        "Y": 945.56746114068312
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "18025af2ae3b41b9be7019d8c8abedda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -764.5425078643799,
        "Y": 974.08847852359554
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "c99221db94b8433db57b4f55a03576fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -328.54250786437979,
        "Y": 974.08847852359554
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "55d29ca1e46644c495eed7d0163315bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1193.7189435383275,
        "Y": 1021.2300070938263
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "98d4f73098004d6db5bd02d1f3bc1fe2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13262.365390787552,
        "Y": 1403.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "913a421bbc4540f98e3b151e4407c97d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4770.4186480704193,
        "Y": 2210.4417826054196
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "545642e0d61c41d8a3d89f6964db0d1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4516.4186480704193,
        "Y": 2244.5817826054194
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "ed618d27f5e84d6bab2466a14d689939",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5185.4186480704193,
        "Y": 2210.4417826054196
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "dd476c0cdb2d4ecaa359e2c0010acb09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6257.6540371708643,
        "Y": 2176.1528616189862
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "f6cf9836157044a1a20bf7d2da15591a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6702.6540371708643,
        "Y": 2176.1528616189862
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "ad22845ea08c4c169ddf4e979a5e3f25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7101.6540371708643,
        "Y": 2252.1528616189862
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e3f22e522cc44a578c2934a1a141d331",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7101.6540371708643,
        "Y": 2100.1528616189862
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "07dbaca88905423b93589040146e8724",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8251.4837657718526,
        "Y": 1958.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7e86a1dc4c5646289aa3cc7f4901310e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8251.4837657718526,
        "Y": 2109.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f4b1dcc6d98248ac96fb07cb641070a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8673.4837657718526,
        "Y": 2292.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "8da1bd9bdd8447c2a27701e3e0959051",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8673.4837657718526,
        "Y": 2075.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "967b44f0993b4d8b9933edda3ec9b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9095.4837657718526,
        "Y": 2236.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "fd1316aa6ffe41e4bf0dda4553f1bf73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9499.4837657718526,
        "Y": 2236.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "54223afa9aa5464eac2dfd297e23aa33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8251.4837657718526,
        "Y": 2260.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "f901987589bd454c8c0ad9861226b6d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8673.4837657718526,
        "Y": 2443.7052174993264
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "806a4abe39fd4452bcf9d04f1c2f32cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7997.4837657718526,
        "Y": 2352.3452174993263
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "35446fd341544adebacc244851c4954d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5938.6836636875832,
        "Y": 2934.5266598707922
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "582a76a7f80b4f5db98894dabccfc35a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6332.6836636875832,
        "Y": 2947.5266598707922
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "83e2d18676344ebb920e3ce185722f16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7840.6836636875832,
        "Y": 2955.5266598707922
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "f5f0b461c1534a2fb3cc634dce5d8ff3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7446.6836636875832,
        "Y": 2989.5266598707922
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5fbbdf36a69f465bacfcd56ef4feba28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6332.6836636875832,
        "Y": 3133.666659870792
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "8a527aff920b4f379e81cbb0b9083670",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6726.6836636875832,
        "Y": 3057.5266598707922
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "2b2313df959f457ebbc2c478bb18e243",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7111.6836636875832,
        "Y": 3023.5266598707922
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e22a67745f384dbda435bf4d68fdc7cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11185.197117174555,
        "Y": 2256.0390103763771
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "6b0c7a7ce00f46988a944edaf5bb8025",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11696.197117174555,
        "Y": 2255.8990103763772
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "7aae94241b474b57b5ae18bd79a79781",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12090.197117174555,
        "Y": 2221.8990103763772
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "8075fe0357ba49008c455da5ab97be55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6594.989394600454,
        "Y": 1048.567461140683
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "090b6b9b91884e04ae959d253e40d2f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13262.365390787552,
        "Y": 1619.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a3dd0cb89c104c7ea4db8ed29598f913",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13609.365390787552,
        "Y": 1565.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "506a25715b36492db2580123dda3fed4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13956.365390787552,
        "Y": 1543.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "1f0620effcf64ec19c1741c055701473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13609.365390787552,
        "Y": 1348.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "c749cc71a5ab450185fa3a2d769e1173",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13956.365390787552,
        "Y": 1326.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "72dbfe902fa34350999c7907c80f4f47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14303.365390787552,
        "Y": 1304.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "d6b5a05381c44e6fb57f5790b2559789",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13262.365390787552,
        "Y": 1222.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "09f7b233d9464f33ab1956bbc4b97c68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13609.365390787552,
        "Y": 1167.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "8dfbb30d299840c4809d68e440837aaf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13956.365390787552,
        "Y": 1145.0466534579309
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "0b9c18ae857f4f34a91959bb80b5967b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12919.365390787552,
        "Y": 1203.0466534579311
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "df78c644fc7f470e92b7a7617702f975",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13262.365390787552,
        "Y": 1069.0466534579311
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "b99019feddf34cddbd879fca7f2bc375",
          "5807ab7d61874f7394cfe59a85bfc7c1",
          "3bebde19937e490791171cc2cfde3903",
          "22c19bcb914b406288d23f558fb8d1af",
          "80ef5761348f48a6b66cf6d9ada319d7",
          "66b9e319593246b08060a6d65bed72b6",
          "fa15ed11566e48f6a283979a2190aee0",
          "3f18dd40bc904c86935aae15483231c0",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -3435.4414098274679,
        "Top": -1037.4743913578432,
        "Width": 2810.0,
        "Height": 1165.0,
        "FontSize": 36.0,
        "InitialTop": -964.474391357843,
        "InitialHeight": 1101.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1ba97622b83a4896ac6b2b42a790702f",
        "Title": "Additional (optional) filtering: by section types",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "596909f5799446a7820a3e674d2f49c7",
          "4c0aeca86b3e4a598cd6c0ac60c2e74d",
          "3db0ae870aae4d4e8fccea48976c3b33",
          "1ca46343c98e422eb589fa5f6c1c842d",
          "145ece1505dd4e13b5adb581f63e7bf8",
          "e1d42da2f0d04115ba4c333d965e15ac",
          "56327268f83a41f794d803210c7ccfb0"
        ],
        "HasNestedGroups": false,
        "Left": 170.71700708717776,
        "Top": -274.63848840541891,
        "Width": 1526.0,
        "Height": 684.0,
        "FontSize": 36.0,
        "InitialTop": -201.63848840541891,
        "InitialHeight": 585.0,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "589c100ed1784fecba3a3b385fe0a92b",
          "198f6a7e428b4323bc9a630905af734a"
        ],
        "HasNestedGroups": false,
        "Left": -4791.5134707731686,
        "Top": 882.49638944503931,
        "Width": 1203.0,
        "Height": 243.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 955.49638944503931,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c1fecff026548af92d1d0d712d29ce2",
          "46ec41b71daf42dca401a9dc8eb59e77",
          "8b127294001c43258ec3ad4c4290a4bf"
        ],
        "HasNestedGroups": false,
        "Left": -5080.3712755861579,
        "Top": 1271.67991391853,
        "Width": 1476.0,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1344.67991391853,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4532.566144245945,
        "Top": 355.72391430840912,
        "Width": 861.0,
        "Height": 775.79258647308507,
        "FontSize": 36.0,
        "InitialTop": 471.72391430840912,
        "InitialHeight": 668.79258647308507,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (double brace to beam)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6818.3293633591693,
        "Top": 317.75445754335414,
        "Width": 1556.0,
        "Height": 243.13999999999993,
        "FontSize": 36.0,
        "InitialTop": 390.75445754335414,
        "InitialHeight": 179.13999999999993,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6801.62983547072,
        "Top": -771.72869450461826,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -698.72869450461826,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6826.7161426662915,
        "Top": -45.666403976982451,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 27.333596023017549,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "809e0ab45e464576aa8783e69d0af647",
          "448b04588fc7451d8c0068a54ed45cf3",
          "b63e7b9928144009ba075fe13f5fa492"
        ],
        "HasNestedGroups": false,
        "Left": 6571.74132934497,
        "Top": 883.003865812509,
        "Width": 2427.0,
        "Height": 243.14000000000033,
        "FontSize": 36.0,
        "InitialTop": 956.003865812509,
        "InitialHeight": 179.14000000000033,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "1f9a781b0e0f47a2be0df821dd5302ca",
          "4864861755984fbb97dc758aaf87191b"
        ],
        "HasNestedGroups": false,
        "Left": 6559.332560928684,
        "Top": 1265.6532049599714,
        "Width": 2034.0,
        "Height": 268.30511516141542,
        "FontSize": 36.0,
        "InitialTop": 1338.6532049599714,
        "InitialHeight": 204.30511516141542,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "654e5f1363ce4799b114c9d1057fd75d",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "774bfec08d6646eab975b1a78194a1d4",
          "ecc0331f412c4c319df6ef8ef2e250e2",
          "1c8b31c6aeef42179f9bf04ab0c50df4",
          "d19b07df0f1247c09fd1a6d579459e44"
        ],
        "HasNestedGroups": false,
        "Left": 11191.68480025106,
        "Top": 1014.1107422314772,
        "Width": 894.0,
        "Height": 426.14000000000033,
        "FontSize": 36.0,
        "InitialTop": 1087.1107422314772,
        "InitialHeight": 362.14000000000033,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "18025af2ae3b41b9be7019d8c8abedda",
          "c99221db94b8433db57b4f55a03576fb"
        ],
        "HasNestedGroups": false,
        "Left": -774.5425078643799,
        "Top": 867.08847852359554,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 940.08847852359554,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -3046.2771333251376,
        "Top": 864.77931684028488,
        "Width": 1688.9301189958132,
        "Height": 384.01597056950266,
        "FontSize": 36.0,
        "InitialTop": 937.77931684028488,
        "InitialHeight": 320.01597056950266,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "8237e21516b84e6e9a423e7a6dd92bd8",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "48985b1a298f46218a348d63b701c650",
          "dcaf9e55d6814a92a87f69010ca21631",
          "69e5784b3bfd4693bb8008fcd7867651",
          "15ea64d0f68c4cd79cb884b221882d1c",
          "790a19a7eea24dd9b495245c7dda182d"
        ],
        "HasNestedGroups": false,
        "Left": 6820.9236086121573,
        "Top": -430.24406138483522,
        "Width": 1555.9999999999991,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -357.24406138483522,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "7be941f2afb344e794976fd07f004646",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "17cd2f5c0d524170a765b21fe1db48da",
          "c8f20affece64409b70e2439b454693b",
          "a58307b9981d4b42945aaf3792f88544",
          "1b1d378ae50e4a7c8ff27a7a2d00bbaf",
          "91d1ee2efb14455fa64706e9d11f8c77",
          "55d29ca1e46644c495eed7d0163315bb",
          "20f52271089f4466a01d0df3c7a58715",
          "797fadfe51904210b99ce51b877f0fa9"
        ],
        "HasNestedGroups": false,
        "Left": 1183.7189435383275,
        "Top": 703.23000709382632,
        "Width": 1615.0,
        "Height": 454.0,
        "FontSize": 36.0,
        "InitialTop": 776.23000709382632,
        "InitialHeight": 390.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "005e9450c4164ff5b60408b6ec583f7a",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -4840.3604942049369,
        "Top": -1045.4237513789951,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -972.42375137899512,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0c84f97a44bb4d598e7d29f841c879d9",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "646164bb1207481cba7fa1b3dc4fa6b0",
          "049447f67f884a61b4ea430abbaf046c",
          "8075fe0357ba49008c455da5ab97be55",
          "b52c596a25744571806d096982958e9f"
        ],
        "HasNestedGroups": false,
        "Left": -6615.489394600454,
        "Top": 724.56746114068335,
        "Width": 699.5,
        "Height": 459.99999999999966,
        "FontSize": 36.0,
        "InitialTop": 797.56746114068335,
        "InitialHeight": 395.99999999999966,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "646ba811bbf94316b9761e13def9f8ad",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "622fa64820ff42b685cc47c13df704e5",
          "f06ecf7354104452a3eb1e3cb4eb5693",
          "bcec3fc4add24b0589dc5618461136c9"
        ],
        "HasNestedGroups": false,
        "Left": 2215.4397759103995,
        "Top": 55.19033052097268,
        "Width": 713.0,
        "Height": 361.14,
        "FontSize": 36.0,
        "InitialTop": 128.19033052097268,
        "InitialHeight": 297.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6c02fda576e846b2a1b89536b8d97813",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "50bc9b460e7d422ab736778d9d892cdc"
        ],
        "HasNestedGroups": false,
        "Left": 3415.02857210043,
        "Top": 549.06192861746422,
        "Width": 824.0,
        "Height": 361.093616340637,
        "FontSize": 36.0,
        "InitialTop": 622.06192861746422,
        "InitialHeight": 297.093616340637,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "9e4fa9a3e15545c2bc91fb17787f9dff",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "c0bdff590ea544b8ac263259e232e36d"
        ],
        "HasNestedGroups": false,
        "Left": 14796.502672528983,
        "Top": 363.30898501503066,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 436.30898501503066,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "cdbe707442ba4618a61bd5525caedc0b",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "882167332d37490a91cf6d73f377ca47",
          "18a700743da240109da19e798f95d7c6",
          "98312f535b7f4791b16fb00a8dfe5f5b",
          "0940742feea442a09258951a9a59e8e1",
          "0691bfbea6b84c10bf83b3373d8259e6",
          "d0623109251c4dc4b447817e143bb838",
          "34bff7bdd1494741b01adc3e753436f9"
        ],
        "HasNestedGroups": false,
        "Left": 9382.4277581694787,
        "Top": 812.03303761176073,
        "Width": 1378.0,
        "Height": 617.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 885.03303761176073,
        "InitialHeight": 553.99999999999989,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "044c996532894e4c836f45685947bcb5",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0823fb156d0446cd8864bb09e09f0c07",
          "5e0eb5c163d24171a2301ad53ae4798f",
          "0fc01510ee2448298df0fc210e4896b7",
          "123f3eb43c174a3c94cfac8f0f6d6b72",
          "166dd89e97474d65a6d996c425a7fdfd",
          "2007d3b3760f41b6b456ae3397638de7",
          "a4c3af49ce2a421e808d706ba1bca803",
          "a5fcd249e1c74917aee5a0f4063e79f6",
          "3f33722d7e9845d3a980b73f85b0b8f0"
        ],
        "HasNestedGroups": false,
        "Left": 9587.5366838497412,
        "Top": -397.53890627878957,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -324.53890627878957,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "5840f2900d474bd39dfd2f2c2cdf0200",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "913a421bbc4540f98e3b151e4407c97d",
          "545642e0d61c41d8a3d89f6964db0d1a",
          "ed618d27f5e84d6bab2466a14d689939"
        ],
        "HasNestedGroups": false,
        "Left": 4506.4186480704193,
        "Top": 2137.4417826054196,
        "Width": 994.0,
        "Height": 309.0,
        "FontSize": 36.0,
        "InitialTop": 2210.4417826054196,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "dca9994a550f48b48133e43a93d0aaa8",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dd476c0cdb2d4ecaa359e2c0010acb09",
          "f6cf9836157044a1a20bf7d2da15591a",
          "ad22845ea08c4c169ddf4e979a5e3f25",
          "e3f22e522cc44a578c2934a1a141d331"
        ],
        "HasNestedGroups": false,
        "Left": 6247.6540371708643,
        "Top": 2027.1528616189862,
        "Width": 1275.0,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 2100.1528616189862,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "209da8489db745eeb8aade73bd49888b",
        "Title": "Format sutiation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "07dbaca88905423b93589040146e8724",
          "7e86a1dc4c5646289aa3cc7f4901310e",
          "f4b1dcc6d98248ac96fb07cb641070a2",
          "8da1bd9bdd8447c2a27701e3e0959051",
          "967b44f0993b4d8b9933edda3ec9b7f7",
          "fd1316aa6ffe41e4bf0dda4553f1bf73",
          "54223afa9aa5464eac2dfd297e23aa33",
          "f901987589bd454c8c0ad9861226b6d2",
          "806a4abe39fd4452bcf9d04f1c2f32cb"
        ],
        "HasNestedGroups": false,
        "Left": 7987.4837657718526,
        "Top": 1885.7052174993264,
        "Width": 1712.0,
        "Height": 724.0,
        "FontSize": 36.0,
        "InitialTop": 1958.7052174993264,
        "InitialHeight": 630.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "cbcb2bf514f748fe9257203d9bbfc7f4",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "35446fd341544adebacc244851c4954d",
          "582a76a7f80b4f5db98894dabccfc35a",
          "83e2d18676344ebb920e3ce185722f16",
          "f5f0b461c1534a2fb3cc634dce5d8ff3",
          "5fbbdf36a69f465bacfcd56ef4feba28",
          "8a527aff920b4f379e81cbb0b9083670",
          "2b2313df959f457ebbc2c478bb18e243"
        ],
        "HasNestedGroups": false,
        "Left": 5928.6836636875832,
        "Top": 2861.5266598707922,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 2934.5266598707922,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "64c2ff9eeaf0483d96210aad57bd5b64",
        "Title": "Aggregate information",
        "DescriptionText": "Combine situation information and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e22a67745f384dbda435bf4d68fdc7cb",
          "6b0c7a7ce00f46988a944edaf5bb8025",
          "7aae94241b474b57b5ae18bd79a79781"
        ],
        "HasNestedGroups": false,
        "Left": 11175.197117174555,
        "Top": 2148.8990103763772,
        "Width": 1183.0,
        "Height": 273.0,
        "FontSize": 36.0,
        "InitialTop": 2221.8990103763772,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "6a35f3bfad3f4dccb72f645fdbaf4c1f",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9553923afbd148c0af88a62b9787d4a0",
          "d16c47b8e8df46ce8e5a9f4971aca621",
          "e5ae17d7a2af4af78146a680b26cbbe2",
          "5d472f0c20d44732881a5219166e6465",
          "98d4f73098004d6db5bd02d1f3bc1fe2",
          "090b6b9b91884e04ae959d253e40d2f5",
          "a3dd0cb89c104c7ea4db8ed29598f913",
          "506a25715b36492db2580123dda3fed4",
          "1f0620effcf64ec19c1741c055701473",
          "c749cc71a5ab450185fa3a2d769e1173",
          "72dbfe902fa34350999c7907c80f4f47",
          "d6b5a05381c44e6fb57f5790b2559789",
          "09f7b233d9464f33ab1956bbc4b97c68",
          "8dfbb30d299840c4809d68e440837aaf",
          "0b9c18ae857f4f34a91959bb80b5967b",
          "df78c644fc7f470e92b7a7617702f975"
        ],
        "HasNestedGroups": false,
        "Left": 12601.365390787552,
        "Top": 996.04665345793114,
        "Width": 1900.0,
        "Height": 874.99999999999977,
        "FontSize": 36.0,
        "InitialTop": 1069.0466534579311,
        "InitialHeight": 694.99999999999977,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "b52c596a25744571806d096982958e9f",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Double tube brace gusset;Double tube brace gusset custom).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6605.489394600454,
        "Top": 797.56746114068335,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "646164bb1207481cba7fa1b3dc4fa6b0"
      },
      {
        "Id": "797fadfe51904210b99ce51b877f0fa9",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. to B;Flange). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1193.7189435383275,
        "Top": 786.23000709382632,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "20f52271089f4466a01d0df3c7a58715"
      }
    ],
    "X": 2325.8679153018397,
    "Y": 558.55070330409558,
    "Zoom": 0.47615547485999671
  }
}