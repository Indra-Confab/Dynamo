{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places connections in beam to column geometric situations, on column webs or on column flanges. Works only on connection types with attached ranges of applicability.",
  "Name": "Beam to Column web or flange by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Name": "2.1. Beam Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Name": "2.2. Beam Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "b6379c9d97da40e589ef5c84f9338c3f",
      "Name": "3. On column web=true (on column flange=false)",
      "Type": "boolean",
      "Value": "true",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "e481db9b9a764cd880368fe06869d1df",
      "Name": "4. Library file path",
      "Type": "string",
      "Value": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "506614825fda4465a46f0e053404340e",
      "Name": "5. Connection family to place",
      "Type": "string",
      "Value": "Clip angle",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "90e9b33fd7384dc299f1335b0b89b0dd",
      "Name": "6. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "68988194c6084e40ba6987f801d5c4b0",
      "Name": "7. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00365d5f6f75422f8c6283350f8b70c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlantAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "e0347155fcfe4b88a8aa4169246e4107",
      "Inputs": [
        {
          "Id": "6cd5081b3d894062892a0cec90cd6592",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25418920fcf74f3090c265671d5906e7",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb9b4f7d0e2542438a4b22f4b50aa15a",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d656cd5aaed74e56a5c55127ba80b843",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e47e13bd9c0a4ea99a59eb668f197b1e",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc6c73d2e9c34bcea90789c1707b9058",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slant angle (angle between the axis of the element and the vertical axis).\n\nFilter.BySlantAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd2d123c3d94abca7e9992dcda22716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "374e1ff6640649faa07f47bcccb7bd7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6bccf5579f84a6496a53819c0d126a3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8352ce7cfa8340249d4d2c77b4d94765",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "596909f5799446a7820a3e674d2f49c7",
      "Inputs": [
        {
          "Id": "31a2a03e186b41f68176345589f851fe",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e2c7e481b8f4c97b05b11b5cadf98fc",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5587e93c96a1461bbf95cde6a7300220",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "881d3b5066d2416ea41953ba13ced78d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f830726134164f5691f1c2dd7e22e7cb",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b12606021e4dbda2be3dfc4f977dc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "3db0ae870aae4d4e8fccea48976c3b33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab334ee1abe949b5ac4be2c72a8b2772",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19ef94231bb245bf9f8d0335d2470c6c",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "1ca46343c98e422eb589fa5f6c1c842d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98ebb802466d45fc88fee4b647379981",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f6d6943546347d2828ddfdfb9c156f9",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "145ece1505dd4e13b5adb581f63e7bf8",
      "Inputs": [
        {
          "Id": "1901e0d33af342ebaa77014a352c0c32",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcf786854a0f4dd3be94e87cc2b56554",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9ff16241fe7408d97349addfede0721",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3e6b35fdf5e421fac487c209e921316",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df853b25b16449ba80be54e810da58b9",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "e1d42da2f0d04115ba4c333d965e15ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6af4a39229064ca09d4e222acb42e2bc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b23a70c2bc1c4e5cb776ee65c63f7b46",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "774bfec08d6646eab975b1a78194a1d4",
      "Inputs": [
        {
          "Id": "b2554cedec674fd9aa2f7fc35bab7008",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49f4b92ce2e64014a68344d009952029",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e1355331b64e7e850e717a10fd4c5e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b9b1b2e8c2648da8d551ba065b0040a",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f46b862733e044d69c1a4ec177003746",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07dbbb1674e54a9e8f6b2a156c204109",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d19b07df0f1247c09fd1a6d579459e44",
      "Inputs": [
        {
          "Id": "8c806428de07439c88b2c7d80368cc46",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "435b20457d424320a532552c70a09bd3",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "094ae248e07d4f5f9a8503e6355a10dc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b52cd842fe44268a9e03f873a26c3b2",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "628afbf358244c619694f826300bcc7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "2ae3c62b069746a3940329b25db46352",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18880fd863d2494ab0c39629273b425f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "b9e7767890a047e685f8ff26c0f26d02",
      "Inputs": [
        {
          "Id": "79c4ee477399447da176b1f256eb638e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "668e6d307b734b7a894d8d0aa7920a35",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e74c87ecb2554dc4a29ecf3c8832de1d",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e42c95f2dec4300bcdaf38ed6cdce08",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d564358cdcbf494381f22cd64b4e6e79",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "d074ff8024794568b8a0c042612ff9da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "09bca46ccf2a48859709fd4d80dde4c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "f5fd7157d8dd46efa1a7ad4b9e7133ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df5273941e614abe8790e600ec43355b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "75fbb7ec69cf461b95141eb144180577",
      "Inputs": [
        {
          "Id": "7625ead503a947a596a3803e4e4f8900",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f463f3d10cf841bc83787c009e615cb5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bedfc1817de342eaa8f615bd6f4577a9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "98f256f147cb4d0f8148c23deef718d3",
      "Inputs": [
        {
          "Id": "9abf1463b0564e40bcd4c16725e35a82",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ab37174f3cb4d6592716343f87999e2",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca65a379b8f640ecbbd00ea1abe6b2bd",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "558c4f50298042ad99570158961261a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d96d7b2764549b1a75d853c6c72a8fc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "289d91618171478dbb998b4e6984e0ea",
      "Inputs": [
        {
          "Id": "89776865d9e04677890be975ab474d44",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bddc1f6f23e74af3a78b22f516810da7",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "683f0f6052a64bfe9cebcd0cdc1e3c93",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "5bf679f3a1d845e9a80dcfacd4d4b0c2",
      "Inputs": [
        {
          "Id": "d51e9f0f59e74d818369de529c3d0ab1",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe5a20fac51049149e5df32f438e9af2",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba8964315d2b466498c8e73c0eb6230b",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "997ebb57baa34324bb07089352ec8a17",
      "Inputs": [
        {
          "Id": "5012cbe92c694c49ad2d3690cf9a2719",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5f7e7e5851a4cdebfe1b0ee945e4405",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "235988b977a14604acb722f2940d6b14",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "911367ea95104a68a8bdabf24ea343d5",
      "Inputs": [
        {
          "Id": "8b3dfa1cdd4d46f29e017a672e889724",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a6f4ad6f78f4de59ade11cb0c564a4f",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "72425b91f2ea4495926845dcc24a7e3f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7115c25603364da8a51e5cb84d267f45",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ade3a07d982d4a6b9566f90ae4060d67",
      "Inputs": [
        {
          "Id": "9182d7cf4e2b4105b31944cf9c39597f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3f6cc8735c14d9fa736f79a5bf972b7",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c14eaa6dc094dfdbea42a4c395b047b",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edffbf7f48b04d89aa738ec345de81da",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "650fbffecdd54e1f8a047828f6d12668",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7e35f853a91e4fc8ab2a21ec9a570c8c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ad66920b3a3e442bb5fe89999aae474b",
      "Inputs": [
        {
          "Id": "181c478a75b8486e9cdd9e6274a212f6",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21af63424c76407dac9933bda913e684",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0233f2e308cd4d35a401d787e461fd3a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c299c99af46a4aeb98d78a3724b5529b",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "0685e4e2cde14269a350099bca66d1cc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cee36242ae464531b1ceebeb2b884fa4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "bb1eaf21f4dc42819950d90924b30413",
      "Inputs": [
        {
          "Id": "5bbd6d4e11b7490888d53a2fcf193a20",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7071f11a1de40069cc54c15c14cdb0f",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439d8e8331ca47d89f4304156db1470a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ed4e2f79751435e847706e7a3780ed6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "02fc6e7ff41f41b384488b805e007f4a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41d5906d72f147d690c67f68396487e0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4f35443af9384bb5a47d95baaeedceeb",
      "Inputs": [
        {
          "Id": "2a3a7187eaf3433ca5137d1f627d7668",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8076a247af394e739313ca05b1daeed3",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae20e96134d42d8bc4b2363f8ac90a7",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2415835e1844a97af39030d2bd9a3f0",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "2404215ffc2c4afa9614331a555b437e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6cbe605591a0477e9bdbb1f61c32bb66",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, of {applicable_number} applicable",
      "Id": "6bcb242ae05c45fda1f9ebbbdeec3731",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ace1ec76dcbe426b9df8ffce870aa1be",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ffb92b32cdde4dc3a73c1560eb54fdfd",
      "Inputs": [
        {
          "Id": "cfadc2c2add14e90b1836896c3985ad3",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7bb3ba22e174ce1a936e83f061d5170",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24f56f2f68ec4e8586c0327889d1805d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d20595c51d346cdaf57d76a04857a05",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "c33840e0557c4408a330da04f399cfb1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99c9647b92cf49ba93ceb20299986ba4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "6e077c8a1abd42a7aa12f341ed0d448d",
      "Inputs": [
        {
          "Id": "f9648e5771c7403fbce5d14d204f351a",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "191d1385ef96481eb537a25313b67c85",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "564e99c9566b4ee5bd5fbffbae8f674d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46fcb7aa4efd42df8be86905211c788f",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "90dbaba524234fdfb31eb37933266b20",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57264b25d28640d2a3e9d57fb1c9b09f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f3f8813e5c794004833a9739d4c2d0ca",
      "Inputs": [
        {
          "Id": "583b330733704330baf738ea4bf7792f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db24234063f845469ae0246721579a68",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79211f1c747b4670a6fa01792af7e5c5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c971c39136642848fa16acb95f8cddb",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "12e6cd04e27647869a2afb60be7717cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c028a8984d5484cb380701f563156ca",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "a1f4df2ff8434486a643c653fcf53787",
      "Inputs": [
        {
          "Id": "0c5a2cc2796d4d40a55c7d84f2121723",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd9e0bb0b69143978fdfe9d904d9de7f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "8807f05fe05d4763a174deb7ff8863e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48ebe732282846088290408b37599da9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "852b8ef9499847458b72627ed032ffc3",
      "Inputs": [
        {
          "Id": "4d8695a21e6142c885c1079149e4f270",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb085e2eacae476d8031f6b7876dfcf9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cda4d8e3feae4ce4b8baf96eece3e925",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "ffaace1683d54d13971e8728952de923",
      "Inputs": [
        {
          "Id": "ce37c4f386d54f3585e6485a67d68c4c",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a585a4698993467db464df485419f031",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0612a40e9d440e28ddadc4aab1afb0e",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b6bd315c8a80447a95142ed6c7047fd2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e27a169f9a944fe294482052fe05ef1f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "c6d9585fb47841cb9c9ceb4bfd7558e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e6dd81a32884af2aad5bf1e9746adc2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "dde7df2ab5954fc1b5b52264b6ea322c",
      "Inputs": [
        {
          "Id": "be314907ceb34e98b2a2d3e11f1431b8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03ebe3556a4244fda67a41a091b73068",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95707ef7d43648b79460d1c5ee2272d6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1e3e2a13ad1349daa6c58b63b5f0b78a",
      "Inputs": [
        {
          "Id": "fa7cbd7a3ae54d3b9cd639eec7dedbfb",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a36c2926d1654975801a127b1c897d84",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3841de7214484a55b00b70d485720ed1",
      "Inputs": [
        {
          "Id": "09baac595f8d42acb57f2f32d54d889c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8543ca588114403e9a1db47a07cea87d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "d45cf1955c2e41dd9e147541a76d0162",
      "Inputs": [
        {
          "Id": "18935de52a4b4d509a5af0deecdbeb9a",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f55e9920f7fa4d468201eb0bab2e284c",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bc1b037889d4e5c841f5b916c1b58c5",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "254a2da754394a22bdc053660c8ae550",
      "Inputs": [
        {
          "Id": "ffb70a570cbd454a90481b2825bff81b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfefcaa0d0af4e35964dd3262b47522f",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e9267712b3a4ae9b4130f23971a580f",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3314cdf441ce47adb55c96b8e87cb3cb",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "ebc677ba74f349d581eb89a79f50b8c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "437eccbb3d724fad9779325d68db224a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "745d81c493ee465684bd2dca363c1732",
      "Inputs": [
        {
          "Id": "fbcd7126c9c3443cb03cdb905c91ead5",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "369839d064054499b2e82ca01d89b08a",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb7dd1c3f9dc4b398d13b0a973a407db",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb1663514382423ba994c96a3802f02c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "35aa8435dc9b403b9c32aa5427de285f",
      "Inputs": [
        {
          "Id": "7b33449e9e074180902e12f0ebdf5a5a",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c3dc18fed984849a49e03df5c51e089",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "647f8844bb9c4fc699893a2c544ea501",
      "Inputs": [
        {
          "Id": "9c5074b6100845df8d56e53f64284d62",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12a7938ec704414893a42981de49dbf8",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c76f836d0934456ea2a9c07013f94183",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35132014c7f64508aa8662dcaec012ed",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.IsItAWebFlangeSection@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "91006b7133c74738aeeb5fe722e22aa4",
      "Inputs": [
        {
          "Id": "79d4eea3fb7a48d79b1d64457bfc1a07",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a67d244d55254c6ab8fba96d2effe74e",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8791810e1774fc69aed913c366cd1d3",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d73ceb19f7a9476da73a510e5e953b98",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at a certain index is of a section shape that has web and flange(s).\n\nFilter.IsItAWebFlangeSection (node: ConnectionNode, index: int = 0): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b6379c9d97da40e589ef5c84f9338c3f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2327af364ec545498bfb19c713f87bca",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "da5564f9c15c4442875c3c2f09316d54",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a3941436a3ac4faaa1b173fa6693dd85",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "InputValue": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "NodeType": "ExtensionNode",
      "Id": "e481db9b9a764cd880368fe06869d1df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "521690debbdb4c35aec8062a28baaf4d",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Clip angle",
      "Id": "506614825fda4465a46f0e053404340e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a53a8def236845978abb3db72f05e3bd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "90e9b33fd7384dc299f1335b0b89b0dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c06101f072e84e3487bf17ac1b2b7a4a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "68988194c6084e40ba6987f801d5c4b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3e8a1b845484aa3aae47e45982eed44",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "e00282b9e8e942959d0163082a075be9",
      "Inputs": [
        {
          "Id": "ffa870146a7a48c0bace5f6406001625",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "200df52ce0de43a9bb3d7182f2243765",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43cebb77f6b5436daa3e1183ea0d60ba",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "5820039b27d3402ab5aaa8a2f9559507",
      "Inputs": [
        {
          "Id": "dc26a6b50f4c4841b77d953dbb43e32e",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39ce980d953949179e0dd87cc16407b0",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "84740ae24a5e46c29783a904d7977950",
      "Inputs": [
        {
          "Id": "69ec527c23264d3f994cbad16821e190",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61fb790849c44c8d83221ff0d2d7b66e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "8dfc4880d53c40398ac86bf5b5d2d937",
      "Inputs": [
        {
          "Id": "1c52cd0804444d7eb0728d313ab176b9",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adf7f8a40c1f4e64b281cf7eec223238",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c4a3d865fe2e4b8aa9c75015d5cf49c3",
      "Inputs": [
        {
          "Id": "d49927cbd6f94d608c2b12b0769765ff",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8930105fc2fd46b484bbc9d8da453538",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "581a9f007e684cfaa5006e241d3c5e91",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "ad4a93eda4f34f819e9ddb54877e3e30",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c589a95035b54d6a8a6df50a119b1374",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "64f483c2eee341e283be12ba5a5a1f38",
      "Inputs": [
        {
          "Id": "7032a66c038949a7a36afcacd0b11f7a",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b00e85068664e36914e4660ff7b4d94",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c3973f2e181454ba56dfac657efacfd",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a9f6782b6634e22a2a1903ad416e13d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "f3f8c55b08eb498d8d5e28bbfab8f5ec",
      "Inputs": [
        {
          "Id": "8039ffe9a22046cfbc4e64f031533808",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc9849e40a8a4cc68f8c9b8c103983ae",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4a2db3ad9b6447e8e429599ae01d68d",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "70dbfe820f7348809c4f7a5839798590",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9190bc53986640409c060bf838a53785",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "3bbb05aebb4d487a8a239cdebe39c562",
      "Inputs": [
        {
          "Id": "90deb0c7494c4a1facc9595e229eed1c",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bd06a03d03848e39212940e2401359c",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b677f9c931224864beee4d562be076e4",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1556ae93f31a48fea5fa6f1fe68b8621",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b185a967470141d4bfc368e82308471f",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe0bd23c045e4cd0b83caeb087ce7289",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "cad39a68564d4cecb8669f417e80f3cf",
      "Inputs": [
        {
          "Id": "043a78f15aa446bc821aaea6cd603d6c",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c22f5b5560c640dba7a25cd863f9778c",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "c78dcc5cdf51476493b9474b6df5267c",
      "Inputs": [
        {
          "Id": "df083d8ca4ba44dca99206e86cc7a3a5",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "348caa9accca4c6e85cbcac8f449fe1c",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "11243dfb555c44b69687533b347af505",
      "Inputs": [
        {
          "Id": "0cbe4320c3d944c395bb5d0bf45da3ec",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c24af1b1af947d88da8d6f6281b31e8",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "e0bdcedc7788422daad870f4e9606e19",
      "Inputs": [
        {
          "Id": "fa9b181bbb8a41cb8924b79067992e44",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0cbf73cee8942059d801a36851d54a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "b7a4638eed8a44d39acc7bfbc0473814",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60772516d2c84435bedad6b4e8e6761b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "b714aa2fed8a4e669cdf63ede5edc710",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6ef97e030b84ef6aee246ffb23d6e03",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "5b89be879dfe481d9a573fdcfe19ba5e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1eab547ec8f4e0cbe03e16eca61b35e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "bfd4797ff3774588b461c1c01c1139e8",
      "Inputs": [
        {
          "Id": "38f63ddd33684d6383b4fec07e1c66b7",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2f5e80f312b45e2b14022cacb4da68c",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91beb141414942659eda4806db28f3f0",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e36c9dbfcd4e453ab9a41a08f2021912",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "4cb2c07dafc14859b02c7ba0567be6fa",
      "Inputs": [
        {
          "Id": "20189ac4208d4713a35f97b7ceec2a19",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c43dcacfe1944747af9b4d2769aed5a0",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d70cdbbc53524261b3ac606f86bfb917",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8469379a67d3407489700073946ad34e",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "965f4809ad954f6898c5219de9d120ba",
      "Inputs": [
        {
          "Id": "be0dd905b5e646048ea19bfbc085f00e",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6f215fa8266a498c826e1b1860bf2376",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9681fedf6de40e7907df724b5e0b278",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "e14733c558244a09b6807c37e54a0d8c",
      "Inputs": [
        {
          "Id": "63a2e636e25f4ff0bf785f754fdf9cd8",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0f72a0e748f34678adda2eea329bbedb",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cbe72ac06824fd4a554a5cfad4d48f3",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9024748391b440688032fe520cce7a7c",
      "Inputs": [
        {
          "Id": "3d2bfc72ea1b49278ee2371a7cd55b7c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "714cefc0165d496ba1aee61315e8dc1a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f97f967a8d54812bf4ab4485068171c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "98d2aa900bef4cbe8aead00dc5b138e5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e08e281822147088e63f16c1b8ae065",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "30e3173ef64e4624a02de563fa2f34be",
      "Inputs": [
        {
          "Id": "81f52933f826467aaa7e7ed2ec3a8648",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f604f5ba49a40c3bbde8328a2414c85",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e030aec29c24867bc47a78140ccf554",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "42751d5f08a04bfb839777824700b075",
      "Inputs": [
        {
          "Id": "ce7190c08de643019f8e477c98befee0",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e93eadfc3f7f4ed2a99358953de1d095",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7db8c7bba064f5698ea7f1357b965da",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3df1cc9b37a64b9baf523d0792ff9547",
      "Inputs": [
        {
          "Id": "a069567209994fd1af30622eff0b2242",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "efbbb6216c744672832d1b43750b61e7",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "706e3ecd6cda4803b7df3121a695f114",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "e2a8cdff201e4b549363517d280f3a92",
      "Inputs": [
        {
          "Id": "10a52d26662644fcbaea265d7b6f344b",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "65b7ea8739d84c94a00c89a8433f12e7",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca65118ff7004b5c853e6ebecbef03ad",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "b6b1f20d94c042fdb9d579af7314fcf3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d067c8f7cae14af785616f6da4431004",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "50174dde687a4aafb49b9d42764be175",
      "Inputs": [
        {
          "Id": "6ab4c51ec90944c1b493191e532d115e",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52e0b6ee13c34f3f8d533b7f784b746f",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6baed92964084984b282f63a4fedc80e",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c74443ec41294bed847ba13a23bbba9c",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "5575d2a7186041bb94db4fb847e91c6f",
      "Inputs": [
        {
          "Id": "83d5ff0225564e0f99cb92d13dac9b8c",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5b640d095aa47cd8b8256766ff1d2dd",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90ff24e180fb4e9d8d2250712bc883f2",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a59f2ee7ae8431a8cca37ca688e1197",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9fc2c365e31145ef8db8200b424077b4",
      "Inputs": [
        {
          "Id": "c9f78b3c53be4e409c1167da91bdd7d8",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f5d73b0d97c44d88c3259e8ccf34449",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "235be398ae1c428ca99d8a7cd4b418a3",
      "Inputs": [
        {
          "Id": "96a0d7d5ed6942deb07c2fb4cf7393ee",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5d3b9ff9eb84e8fba5d69f9332b93b4",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "312e88e16a504018911f8f425346e7ba",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "879b0ffb43ef49bba667ec4ce03cbde6",
      "Inputs": [
        {
          "Id": "42d2278da0854938a2db5851c0654885",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c7e149a1114452898bee4101ee5b77d",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b3b04f949ad4428be2f163460f2c058",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "669fd199f2584bc0b7532acdda8ae946",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d63f273f7a4f497aa89576a3fc102a7a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "749f0f29a6a94c14b140033b40dec3f9",
      "Inputs": [
        {
          "Id": "9cd9218a4064422da0d346a296eaf1b5",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfcb3a70f1364baca61bc5e97fcb3303",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "6db082071e5c459c8b0aff6a9b751f60",
      "Inputs": [
        {
          "Id": "0c5512bb2f8b464da182b21928eec840",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "670fac48cda243ac8945efa8977c59c8",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "92c9e6d1bf7d43ffaf5351c8494146d7",
      "Inputs": [
        {
          "Id": "955dea80108d431290001bca94eae628",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb1620f0a0b64116bbcd5a3502399ee7",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.XAxis",
      "Id": "ef7371781256498db1d0b84701dbb54f",
      "Inputs": [
        {
          "Id": "6f75858a9b274fd7af62e35112e2ab77",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3c3816a65ce45969b419cbb35f29aee",
          "Name": "Vector",
          "Description": "The output X axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the X axis of a structure data element.\n\nStructureData.XAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.YAxis",
      "Id": "fd4217ff4fec4315ada6c0147387df42",
      "Inputs": [
        {
          "Id": "93d3522da0134674aeee3a72232bb8e9",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e262ad731d184d09aa663f0d63718d50",
          "Name": "Vector",
          "Description": "The output Y axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Y axis of a structure data element.\n\nStructureData.YAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.ZAxis",
      "Id": "fc12b9c932d9459d8dd93f4471768492",
      "Inputs": [
        {
          "Id": "8eaeaa02f74c4ef59056f1a1529beef1",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbfb6e4bb4d942a390e536288a8bc18e",
          "Name": "Vector",
          "Description": "The output Z axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Z axis of a structure data element.\n\nStructureData.ZAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.XAxis",
      "Id": "45613fe6e5da476c98d9ccda81575aef",
      "Inputs": [
        {
          "Id": "cca306e3c89443fcb33fd1b9c84ff5bd",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7f7c6d932a74af0978daa1272fd175a",
          "Name": "Vector",
          "Description": "The output X axis, as vector.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the X axis of a structure data element.\n\nStructureData.XAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "dc0b61e5557a404d9f7a37ed4e8f5a75",
      "Inputs": [
        {
          "Id": "8e50cc48276349a3847676130312da93",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd2a7fef4ef34962abdab2bcbc72f781",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "526ec579bf41458b8a91300babdb6518",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "91b84a9c09a44c1a9d48a46dc0b6d782",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9468f2300dd346d7a38d09146b7f1534",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "105aa88bc0084d2d9de2d1356716b38c",
      "Inputs": [
        {
          "Id": "23f03463cd024d36a0900753c1742108",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "d847485ed74a4d3f83173449b5513bec",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "558ce6a7a1c14cc495028bd43c07cd02",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "165f0f6006cd48468d4cfe876d6d1208",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cf46e2e9347143bfbc4dc24aeb467420",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "bd45c43566e0436e8a62a1b095f402e3",
      "Inputs": [
        {
          "Id": "6d194c7035024d45b6545de77e89ecd5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "cd6a926c15f845aa9233d82527a541d3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "624190b6e03b49ce82870397010d439e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "c8578cbed37a454d99826736a7e45642",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4875964bfac243f183861040005b3990",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1b6a094daa024b1ba13f63b48d37cb40",
      "Inputs": [
        {
          "Id": "a1464013d0ea440090366e30caee2987",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a9b0592e55d40e78e1cfcaba7a92e4e",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db85da1705824160921984e93893a3d7",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b058f0111cf429192c9ec9e7863ca99",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "8c7a001aaf354c95a59a4d44c50924d4",
      "Inputs": [
        {
          "Id": "a5cca83821134ca5a21db790a6742990",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63ccd997e6d34716a8655134870180b3",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec73e07773374fa99ef7a914f045dd3d",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "694ec26afa8e43ce978fbfcfcb56b1cb",
      "Inputs": [
        {
          "Id": "c4f546f99c9444a0b967b431960a73dd",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b637f86f91148c2a1cc2fca684ee5f2",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bf479f1c4964f2ab295245aa9606320",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0d4cfe13561c49f8844f8a7b54e287b3",
      "Inputs": [
        {
          "Id": "8bc7cf74866a4dfba47a79ac3f0a8e2e",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2d2146916e9643b2b2e575c8c055289f",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a4b93b35d52446b786704fd2881fae75",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8077af1e7cb41c8873595c1b4288723",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "ee3d657afc2d4b5e91dee9ce75a17942",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8770b2cf3284b35b366ebc511091ba9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "83353eca767c4248ad473b2a9f5bfb91",
      "Inputs": [
        {
          "Id": "5e36f292d16a48cab3bf97357af7e9fb",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4482c21b2f924e3d9020069fcaa8b3b7",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0aaac4e9a73e40f7a12cf32733f3d195",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff5bbe4d1ac84f228996162e76d07d90",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "4045f327d3ff49fc863220e089dbc6a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2fd0df8a2ada4fa68f407666701ae190",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "d4d4c057dfdc402ba5860eb50e71cd98",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "db741a04d24d4655967295f2af7bcf02",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "2db682ccff114626ae85d8097145e5e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60b9ab48668d4b7dac0a5c86a1b8c9d8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "52fb5e7afd0e4151870f7c1da31c5ecb",
      "Inputs": [
        {
          "Id": "e7432b73c1ec4c37821067633d41d19b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abb25c3a23a1477189dfa05200906150",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25b21bdd034c4f5996e6419ff6d2f0b4",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c849302ac0174dfcb548d64a006f115c",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "41fa4c61c9d14f6fbcaf9fb49f6f5fd1",
      "Inputs": [
        {
          "Id": "91043a1a30b042a792fd8c0757e93f93",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c4d848e921448c7aec94a21c321ddd7",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cad63d5b3983472cbbb8a4ac18135677",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e79c3e9dfb9429a8d3a7f2bb7b43081",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "243236ac3d754c5eb5fad9c4d7aa8269",
      "Inputs": [
        {
          "Id": "442a3e18d3ae40f7a795d29f7720da52",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e4a01a2824249988af7f23298bd8351",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acef4a77a225453e81feafbc10f9fa68",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7252648e5e44232bd2b18794f72bead",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "0af6212e4f0946008bbd8cb5b42d06e1",
      "Inputs": [
        {
          "Id": "7b497ed9966e456c9c71b26ba24b16bc",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5aa50e7d2ed646af9454e13d6ec1771b",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3980c7e25324e45886e65a58fa9a382",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "c77ac4f0ec5745bbb9464e92a0eaf409",
      "Inputs": [
        {
          "Id": "76e7ff0452184fc5807ae9f5dd4138a4",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea4a1b6a8fe44aacb0be485b7173d1e9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "138048e947384ef0a2297ac4aa198951",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "f15a99d8bb2d437eaf03dd422d7f2d5c",
      "Inputs": [
        {
          "Id": "9532a6b2882e4270963d4cf25344d77b",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "933fc360ea224b33a97db625c2c63547",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29f2e4c617f349aeb732bb8c3f0e42d5",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6b764432d3744d1c988da469de411376",
      "Inputs": [
        {
          "Id": "0f99b6a2c9c04ca1bd67ce2b5f70b6e5",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f85506cd4bd04b999f48e9f5fa56a81d",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "e0f1b0139564417e811abe6982603e5d",
      "Inputs": [
        {
          "Id": "b693dccc952c4daba9e7e3b22d160420",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8abad0114554695bd4024af381e44db",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1da6f27fe4f54cf68b002bdb3298001e",
      "Inputs": [
        {
          "Id": "38c4f9dbdefc4b2e82b20208eef2c44e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66afaad4b48441f79b4978a0b08430ac",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fef0cb970ec842e6a149a46785b4ceb7",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "281114d8189a42f38d4abd085bfc48e8",
      "Inputs": [
        {
          "Id": "b3e3ea7c288541c69334cf500e1e77a9",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44a417340a7d46e7824f577e4649f043",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c9e8a13efee4c739a2275bc53511af3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d899b6d8febe4b819223737e9ba489f5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03e24513cc8c43838d669122f544efdc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d439aa19d710478081846ec9a7d10922",
      "Inputs": [
        {
          "Id": "520b25a72fbf4605942b76890bcfad0c",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "292b5011281c44c98796e4478e174427",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a0826e2f99b4567ac76258f0488dba6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd80929186744ba08e32a9e55e4e2f30",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1efae1f2676e416e85a03bf7a238d6b0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"# Load the Python Standard and DesignScript Libraries\nimport sys\nimport clr # imports the common language runtime (CLR) into the Dynamo Python environment so that we can call .net fucntions direclty\nclr.AddReference('ProtoGeometry') # adds the Dynamo geometry engine to the CLR\nfrom Autodesk.DesignScript.Geometry import * # imports the relevant portions of the Dynamo geometry library into the Dynamo Python environment\n\nv1s = IN[0] # sets the v1s variable to the contents of input 0 from the Dynamo environment\nv2s = IN[1] # sets the v2s variable to the ocntents of input 1 from the Dynamo environment\naxs = IN[2] # sets the axs variable to the ocntents of input 2 from the Dynamo environment\n\nangles = []\nif len(v1s) > 0 and v1s[0]:\n    if len(v1s) == len(v2s) and len(v1s) == len(axs):\n        # generates a set for each input combination\n        triples = [ [v1s[i], v2s[i], axs[i] ] for i in range(0, len(v1s)) ]\n\n        # calculates the cross product for the axis and the each vector, then pulls the cross of the axis and the result, and gets the angle between the two\n        angles360 = [Vector.AngleWithVector(Vector.Cross(triple[2], Vector.Cross(triple[0], triple[2])), Vector.Cross(triple[2], Vector.Cross(triple[1], triple[2]))) for triple in triples]\n\n        angles180 = [360 - a if a > 180 else a for a in angles360]\n        angles = [180 - a if a > 90 else a for a in angles180]\n    else:\n        # sets a string as the output for situations when the list inputs are mismatched\n        angles = 'Lists are mismatched. Ensure an even count and rank for each input.'\n\nOUT = angles\";",
      "Id": "d5a120a881834f25b70365e1a777466c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57b46fc0fece4a0197c1cb11e9485324",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "059548c882344eab9fae814146f4f21a",
      "Inputs": [
        {
          "Id": "8b55695cf9dc4f69a548c35ef4be348c",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3fb30f7e51d4895882d7d05a8202e26",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"0.0001\";",
      "Id": "0d7f79217d804bd79d6e75f407f90ca8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "44d08730c1204f33be53fbe09f947fda",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "19eafd098f184294956680b1a1fe476f",
      "Inputs": [
        {
          "Id": "70060f354fba4fbfb492856ee4f1d729",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a21149bdae78428ca02ba1ae840d0ec7",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d30c39d1f16a46a59e6aec065344bb66",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "79c4ee477399447da176b1f256eb638e",
      "Id": "a2a2e0cfb963474bbfad81e27ef03f41",
      "IsHidden": "False"
    },
    {
      "Start": "00365d5f6f75422f8c6283350f8b70c6",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "90a0a503e9814ac0bc9a4134e5988c48",
      "IsHidden": "False"
    },
    {
      "Start": "e47e13bd9c0a4ea99a59eb668f197b1e",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "1b2056f0e937447db0aadada9df3b89f",
      "IsHidden": "False"
    },
    {
      "Start": "1bd2d123c3d94abca7e9992dcda22716",
      "End": "25418920fcf74f3090c265671d5906e7",
      "Id": "79f2765c0a4c4ba1970bdf5cf16daa94",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "eb9b4f7d0e2542438a4b22f4b50aa15a",
      "Id": "5b30ef5ce89d4d87a8aed0145bc4a423",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "d656cd5aaed74e56a5c55127ba80b843",
      "Id": "ef8dd08ce05e4fd5b1416a27234e8ab9",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "79d4eea3fb7a48d79b1d64457bfc1a07",
      "Id": "840c08d264f14fb8acbd22cd273213d8",
      "IsHidden": "False"
    },
    {
      "Start": "374e1ff6640649faa07f47bcccb7bd7f",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c052f00c89dc4165bbd99e33b7dbfb30",
      "IsHidden": "False"
    },
    {
      "Start": "d6bccf5579f84a6496a53819c0d126a3",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "1d1eba77cc1c482dad0de2596a493a1f",
      "IsHidden": "False"
    },
    {
      "Start": "8352ce7cfa8340249d4d2c77b4d94765",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "da3867b34e864eeaba4f4f440e610d03",
      "IsHidden": "False"
    },
    {
      "Start": "881d3b5066d2416ea41953ba13ced78d",
      "End": "1901e0d33af342ebaa77014a352c0c32",
      "Id": "b2c6b815a2d441ba845ecca322e013e5",
      "IsHidden": "False"
    },
    {
      "Start": "d0b12606021e4dbda2be3dfc4f977dc3",
      "End": "2e2c7e481b8f4c97b05b11b5cadf98fc",
      "Id": "531fd8a51b8747e3b59409e00debd515",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "5587e93c96a1461bbf95cde6a7300220",
      "Id": "4d128a78f44b4228b96e1210e441cc29",
      "IsHidden": "False"
    },
    {
      "Start": "3f6d6943546347d2828ddfdfb9c156f9",
      "End": "a9ff16241fe7408d97349addfede0721",
      "Id": "ffa846437ff04004834b628f0176c79c",
      "IsHidden": "False"
    },
    {
      "Start": "e3e6b35fdf5e421fac487c209e921316",
      "End": "7625ead503a947a596a3803e4e4f8900",
      "Id": "9d7816877fd740dba7d5bdb3fbc722fd",
      "IsHidden": "False"
    },
    {
      "Start": "6af4a39229064ca09d4e222acb42e2bc",
      "End": "fcf786854a0f4dd3be94e87cc2b56554",
      "Id": "20cd8b8267ee4c67913593908e1f7278",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "18935de52a4b4d509a5af0deecdbeb9a",
      "Id": "623fa12ce2324f809572bbcf045c39d1",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "eb9f6beadc4f4d60901712fb5b246bc9",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "e5f1d801fbcf40d882f2b21972a4f09b",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "6bd06a03d03848e39212940e2401359c",
      "Id": "28b98e2aa5354ae3b43c1a4877b537ae",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "8039ffe9a22046cfbc4e64f031533808",
      "Id": "4f4262e4309d4026beba0df88c0c3709",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "888d37cf48944e59a368d7ec1c3743a6",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "9d8c29bb94ee4d9ca5b9fd559d98551c",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "ce37c4f386d54f3585e6485a67d68c4c",
      "Id": "a9de549597e2425b881f50c7f3a67c03",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "9532a6b2882e4270963d4cf25344d77b",
      "Id": "9d1656b35c5d43aba52052b03e4c088f",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "439d8e8331ca47d89f4304156db1470a",
      "Id": "903a489caf204c8ba3d73b182120b60c",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "0233f2e308cd4d35a401d787e461fd3a",
      "Id": "4e784a13af6841989a134f56d19f440d",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "9c14eaa6dc094dfdbea42a4c395b047b",
      "Id": "8fe8ba996fec48758463ce6d7e4184f5",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "5012cbe92c694c49ad2d3690cf9a2719",
      "Id": "7fefbbde9d0e4cb9af0bd68a829c9f4a",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "24f56f2f68ec4e8586c0327889d1805d",
      "Id": "ecc706416d344151b22510730477d49a",
      "IsHidden": "False"
    },
    {
      "Start": "4b9b1b2e8c2648da8d551ba065b0040a",
      "End": "8c806428de07439c88b2c7d80368cc46",
      "Id": "d5a5faf947bd4c6e9d534f34f26dc29a",
      "IsHidden": "False"
    },
    {
      "Start": "f46b862733e044d69c1a4ec177003746",
      "End": "b2554cedec674fd9aa2f7fc35bab7008",
      "Id": "0eb2a939fab04aac99db2f4637a5f005",
      "IsHidden": "False"
    },
    {
      "Start": "07dbbb1674e54a9e8f6b2a156c204109",
      "End": "435b20457d424320a532552c70a09bd3",
      "Id": "05731ca6b12f462e8690ecedec35ac89",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "2a3a7187eaf3433ca5137d1f627d7668",
      "Id": "da6b0dbc09b84d52a504e4cd4315c156",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "b5f7e7e5851a4cdebfe1b0ee945e4405",
      "Id": "9aefbb467ffd42459ba596fbaedf7824",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "79211f1c747b4670a6fa01792af7e5c5",
      "Id": "fb3da7da34f94965bfece9386b6a44a8",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "0c5a2cc2796d4d40a55c7d84f2121723",
      "Id": "039501746c774a1bb0cf07eb6822e931",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "966a372eaa4148669ebb222139563c70",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "564e99c9566b4ee5bd5fbffbae8f674d",
      "Id": "6657084acdc34901a26a01f3f2969ddb",
      "IsHidden": "False"
    },
    {
      "Start": "8b52cd842fe44268a9e03f873a26c3b2",
      "End": "6b00e85068664e36914e4660ff7b4d94",
      "Id": "fa5cdbbada1544b296148255e46c2bb2",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "628afbf358244c619694f826300bcc7f",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "7b33449e9e074180902e12f0ebdf5a5a",
      "Id": "43fb33d0106e49e5a6ce83f265eb5dc7",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "9c5074b6100845df8d56e53f64284d62",
      "Id": "42d3ff4960274c02bea07a4fa9a16b14",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "1c52cd0804444d7eb0728d313ab176b9",
      "Id": "840337d1937b4005979d32a365522e3a",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "b693dccc952c4daba9e7e3b22d160420",
      "Id": "03236bef261f493a838ee51ef3a8baaf",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "18880fd863d2494ab0c39629273b425f",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "18880fd863d2494ab0c39629273b425f",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "8e42c95f2dec4300bcdaf38ed6cdce08",
      "End": "6cd5081b3d894062892a0cec90cd6592",
      "Id": "9894e35b37a54c40893e6cfa899e252a",
      "IsHidden": "False"
    },
    {
      "Start": "09bca46ccf2a48859709fd4d80dde4c3",
      "End": "668e6d307b734b7a894d8d0aa7920a35",
      "Id": "62edb465e54e4dbaa47a22e4441e9c14",
      "IsHidden": "False"
    },
    {
      "Start": "df5273941e614abe8790e600ec43355b",
      "End": "bddc1f6f23e74af3a78b22f516810da7",
      "Id": "ac3bf5bbecca4a93ab9cd20f648c8cfb",
      "IsHidden": "False"
    },
    {
      "Start": "bedfc1817de342eaa8f615bd6f4577a9",
      "End": "9abf1463b0564e40bcd4c16725e35a82",
      "Id": "67997a1f848f4c688e904d42439444dc",
      "IsHidden": "False"
    },
    {
      "Start": "ca65a379b8f640ecbbd00ea1abe6b2bd",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "d41f3f9facb146c9abe74ff7372bf365",
      "IsHidden": "False"
    },
    {
      "Start": "ca65a379b8f640ecbbd00ea1abe6b2bd",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "19af210724d64131be6416be835e71a4",
      "IsHidden": "False"
    },
    {
      "Start": "3d96d7b2764549b1a75d853c6c72a8fc",
      "End": "7ab37174f3cb4d6592716343f87999e2",
      "Id": "bad6eee471bf4b2597fb8d6998ca1ac5",
      "IsHidden": "False"
    },
    {
      "Start": "683f0f6052a64bfe9cebcd0cdc1e3c93",
      "End": "2ae3c62b069746a3940329b25db46352",
      "Id": "59ea92bdbf354e4489bfb5535695e846",
      "IsHidden": "False"
    },
    {
      "Start": "ba8964315d2b466498c8e73c0eb6230b",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "721e89b349bc4c73bd133f44af9e8ca2",
      "IsHidden": "False"
    },
    {
      "Start": "235988b977a14604acb722f2940d6b14",
      "End": "8b3dfa1cdd4d46f29e017a672e889724",
      "Id": "7804c685566847e39e9ad3cfef9aae51",
      "IsHidden": "False"
    },
    {
      "Start": "4a6f4ad6f78f4de59ade11cb0c564a4f",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "5b20a8bb8f2b4a979a4261e90a0b48fb",
      "IsHidden": "False"
    },
    {
      "Start": "7115c25603364da8a51e5cb84d267f45",
      "End": "9182d7cf4e2b4105b31944cf9c39597f",
      "Id": "94dbeb29e59441c580ce359963a658b9",
      "IsHidden": "False"
    },
    {
      "Start": "edffbf7f48b04d89aa738ec345de81da",
      "End": "ffb70a570cbd454a90481b2825bff81b",
      "Id": "2472d70dde88427884e3907ee3f6705a",
      "IsHidden": "False"
    },
    {
      "Start": "7e35f853a91e4fc8ab2a21ec9a570c8c",
      "End": "c3f6cc8735c14d9fa736f79a5bf972b7",
      "Id": "a091950439a64be988c3cbed8ba9c93a",
      "IsHidden": "False"
    },
    {
      "Start": "c299c99af46a4aeb98d78a3724b5529b",
      "End": "5bbd6d4e11b7490888d53a2fcf193a20",
      "Id": "36a195c059624d08819e3356e4ffa9c0",
      "IsHidden": "False"
    },
    {
      "Start": "cee36242ae464531b1ceebeb2b884fa4",
      "End": "21af63424c76407dac9933bda913e684",
      "Id": "aad5d1c2b6dc4fa48244082a354dcac4",
      "IsHidden": "False"
    },
    {
      "Start": "5ed4e2f79751435e847706e7a3780ed6",
      "End": "6ae20e96134d42d8bc4b2363f8ac90a7",
      "Id": "07b071209abd4db6ac3a95566807b4bb",
      "IsHidden": "False"
    },
    {
      "Start": "41d5906d72f147d690c67f68396487e0",
      "End": "d7071f11a1de40069cc54c15c14cdb0f",
      "Id": "4820dca5dbbc4a748dc828abca079f8a",
      "IsHidden": "False"
    },
    {
      "Start": "b2415835e1844a97af39030d2bd9a3f0",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "d1dab9429b0a438ca478d341fabe59a7",
      "IsHidden": "False"
    },
    {
      "Start": "6cbe605591a0477e9bdbb1f61c32bb66",
      "End": "0c3973f2e181454ba56dfac657efacfd",
      "Id": "8923918770604fe5b03d47f547b5b4b4",
      "IsHidden": "False"
    },
    {
      "Start": "ace1ec76dcbe426b9df8ffce870aa1be",
      "End": "cfadc2c2add14e90b1836896c3985ad3",
      "Id": "d961473abe2b462ab5968b08865a656e",
      "IsHidden": "False"
    },
    {
      "Start": "2d20595c51d346cdaf57d76a04857a05",
      "End": "f9648e5771c7403fbce5d14d204f351a",
      "Id": "8199f1481c5b4145939d6b08a7aa2b77",
      "IsHidden": "False"
    },
    {
      "Start": "99c9647b92cf49ba93ceb20299986ba4",
      "End": "e7bb3ba22e174ce1a936e83f061d5170",
      "Id": "df2ec0b7e6774b5cb3a58acf5d9c429b",
      "IsHidden": "False"
    },
    {
      "Start": "46fcb7aa4efd42df8be86905211c788f",
      "End": "583b330733704330baf738ea4bf7792f",
      "Id": "6c5d9c3e96cb49f98e261fe6b1e5cca8",
      "IsHidden": "False"
    },
    {
      "Start": "57264b25d28640d2a3e9d57fb1c9b09f",
      "End": "191d1385ef96481eb537a25313b67c85",
      "Id": "6327f3d1a103491e815367cc2e6fcdf5",
      "IsHidden": "False"
    },
    {
      "Start": "0c971c39136642848fa16acb95f8cddb",
      "End": "094ae248e07d4f5f9a8503e6355a10dc",
      "Id": "b7ef383d8d1749aa8349589a87d62136",
      "IsHidden": "False"
    },
    {
      "Start": "2c028a8984d5484cb380701f563156ca",
      "End": "db24234063f845469ae0246721579a68",
      "Id": "c6bd1a2475af4f15bcc18c986114b962",
      "IsHidden": "False"
    },
    {
      "Start": "bd9e0bb0b69143978fdfe9d904d9de7f",
      "End": "4d8695a21e6142c885c1079149e4f270",
      "Id": "57b0b937c4e3459ba71a2dada06e0e27",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "eb085e2eacae476d8031f6b7876dfcf9",
      "Id": "440b229f7ec64da281ef8a41b35906aa",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "5aa50e7d2ed646af9454e13d6ec1771b",
      "Id": "4e573fc5a77d4a7ea453f26e22b0fa5f",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "ea4a1b6a8fe44aacb0be485b7173d1e9",
      "Id": "cbf34100d4154cb3806d8985adb60938",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "933fc360ea224b33a97db625c2c63547",
      "Id": "bc432f842b7742698fc1487300190339",
      "IsHidden": "False"
    },
    {
      "Start": "cda4d8e3feae4ce4b8baf96eece3e925",
      "End": "7032a66c038949a7a36afcacd0b11f7a",
      "Id": "58877799113b470f8f6408f2a85096e5",
      "IsHidden": "False"
    },
    {
      "Start": "d0612a40e9d440e28ddadc4aab1afb0e",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "f026578dc7fd411ebfc50d77e84437b2",
      "IsHidden": "False"
    },
    {
      "Start": "e27a169f9a944fe294482052fe05ef1f",
      "End": "a585a4698993467db464df485419f031",
      "Id": "8e6dc9766c0c45e5a113d72dd53c8d6c",
      "IsHidden": "False"
    },
    {
      "Start": "4e6dd81a32884af2aad5bf1e9746adc2",
      "End": "f55e9920f7fa4d468201eb0bab2e284c",
      "Id": "8c31057fe86247f0b0e4bef4ca5ed604",
      "IsHidden": "False"
    },
    {
      "Start": "95707ef7d43648b79460d1c5ee2272d6",
      "End": "fa7cbd7a3ae54d3b9cd639eec7dedbfb",
      "Id": "016af0f8301942ceae760f1d740acca6",
      "IsHidden": "False"
    },
    {
      "Start": "a36c2926d1654975801a127b1c897d84",
      "End": "09baac595f8d42acb57f2f32d54d889c",
      "Id": "be8cfe25d1194cb8be058112a3c50097",
      "IsHidden": "False"
    },
    {
      "Start": "8543ca588114403e9a1db47a07cea87d",
      "End": "1e9267712b3a4ae9b4130f23971a580f",
      "Id": "2eeed0c621554e65b1c08111a5198c4b",
      "IsHidden": "False"
    },
    {
      "Start": "6bc1b037889d4e5c841f5b916c1b58c5",
      "End": "be314907ceb34e98b2a2d3e11f1431b8",
      "Id": "7a71ee65eb214a6c92bb58b1810b55a8",
      "IsHidden": "False"
    },
    {
      "Start": "3314cdf441ce47adb55c96b8e87cb3cb",
      "End": "181c478a75b8486e9cdd9e6274a212f6",
      "Id": "3c9f2b73c6974c8b8f5ca28855e6ae1b",
      "IsHidden": "False"
    },
    {
      "Start": "437eccbb3d724fad9779325d68db224a",
      "End": "bfefcaa0d0af4e35964dd3262b47522f",
      "Id": "69e034b541544838b6a9872d110b2f51",
      "IsHidden": "False"
    },
    {
      "Start": "fb1663514382423ba994c96a3802f02c",
      "End": "dc26a6b50f4c4841b77d953dbb43e32e",
      "Id": "c7ca251ba7c343f795c2a615339c94dd",
      "IsHidden": "False"
    },
    {
      "Start": "0c3dc18fed984849a49e03df5c51e089",
      "End": "fbcd7126c9c3443cb03cdb905c91ead5",
      "Id": "7c584cff31af4e8b845b32b9fd3964fe",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "51365faf42b74ab896ac53145b613245",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "b677f9c931224864beee4d562be076e4",
      "Id": "6abb1d640c234bb3b8e517df88c29083",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "c9f78b3c53be4e409c1167da91bdd7d8",
      "Id": "bcf1817b21854b37b731ff433abda1a7",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "0f99b6a2c9c04ca1bd67ce2b5f70b6e5",
      "Id": "ee87aa011ee14c758469502f022337be",
      "IsHidden": "False"
    },
    {
      "Start": "c8791810e1774fc69aed913c366cd1d3",
      "End": "38c4f9dbdefc4b2e82b20208eef2c44e",
      "Id": "8c78c39fa1734327b0cbceceb828bb28",
      "IsHidden": "False"
    },
    {
      "Start": "2327af364ec545498bfb19c713f87bca",
      "End": "a1464013d0ea440090366e30caee2987",
      "Id": "cbc37ca5e99244c6bff555005b1860f9",
      "IsHidden": "False"
    },
    {
      "Start": "a3941436a3ac4faaa1b173fa6693dd85",
      "End": "70060f354fba4fbfb492856ee4f1d729",
      "Id": "385c8135a5c24f5192b737752345c91e",
      "IsHidden": "False"
    },
    {
      "Start": "521690debbdb4c35aec8062a28baaf4d",
      "End": "fe5a20fac51049149e5df32f438e9af2",
      "Id": "4ba3463577cc4842a6f4086c96aa834c",
      "IsHidden": "False"
    },
    {
      "Start": "a53a8def236845978abb3db72f05e3bd",
      "End": "d49927cbd6f94d608c2b12b0769765ff",
      "Id": "87fb2a0f3b6c432ab8f8973969eabe55",
      "IsHidden": "False"
    },
    {
      "Start": "c06101f072e84e3487bf17ac1b2b7a4a",
      "End": "ffa870146a7a48c0bace5f6406001625",
      "Id": "ed66ea31850141c2b2114b7fd29c2d2a",
      "IsHidden": "False"
    },
    {
      "Start": "f3e8a1b845484aa3aae47e45982eed44",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "cf3df7abf499412da6592dbf8377a1b0",
      "IsHidden": "False"
    },
    {
      "Start": "f3e8a1b845484aa3aae47e45982eed44",
      "End": "1556ae93f31a48fea5fa6f1fe68b8621",
      "Id": "c9b96cef344e4588959970c2ddfdc632",
      "IsHidden": "False"
    },
    {
      "Start": "43cebb77f6b5436daa3e1183ea0d60ba",
      "End": "369839d064054499b2e82ca01d89b08a",
      "Id": "a0a1cd04cbc0433bbc0e40963d656222",
      "IsHidden": "False"
    },
    {
      "Start": "39ce980d953949179e0dd87cc16407b0",
      "End": "12a7938ec704414893a42981de49dbf8",
      "Id": "bd4c5f27a45a4f0984fe0ff555dbfb78",
      "IsHidden": "False"
    },
    {
      "Start": "61fb790849c44c8d83221ff0d2d7b66e",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "dbff09bb7b9a4c43bd5e49d6fc8bec8c",
      "IsHidden": "False"
    },
    {
      "Start": "adf7f8a40c1f4e64b281cf7eec223238",
      "End": "69ec527c23264d3f994cbad16821e190",
      "Id": "5554a97230e345a5a92726ce6331a041",
      "IsHidden": "False"
    },
    {
      "Start": "581a9f007e684cfaa5006e241d3c5e91",
      "End": "89776865d9e04677890be975ab474d44",
      "Id": "dab64c9edaf84b29b1667d180ee586b0",
      "IsHidden": "False"
    },
    {
      "Start": "581a9f007e684cfaa5006e241d3c5e91",
      "End": "d51e9f0f59e74d818369de529c3d0ab1",
      "Id": "caebb7ef278f4e16b72dba7f487187b5",
      "IsHidden": "False"
    },
    {
      "Start": "c589a95035b54d6a8a6df50a119b1374",
      "End": "200df52ce0de43a9bb3d7182f2243765",
      "Id": "f1357cb21e8c46808edba3873024e9ab",
      "IsHidden": "False"
    },
    {
      "Start": "9a9f6782b6634e22a2a1903ad416e13d",
      "End": "abb25c3a23a1477189dfa05200906150",
      "Id": "95cc3d974c1f492abbd1016969878640",
      "IsHidden": "False"
    },
    {
      "Start": "f4a2db3ad9b6447e8e429599ae01d68d",
      "End": "90deb0c7494c4a1facc9595e229eed1c",
      "Id": "03687d43b9864b699a6e421ee596fd87",
      "IsHidden": "False"
    },
    {
      "Start": "f4a2db3ad9b6447e8e429599ae01d68d",
      "End": "043a78f15aa446bc821aaea6cd603d6c",
      "Id": "b02323f8f430431ab4edb0c987e16903",
      "IsHidden": "False"
    },
    {
      "Start": "9190bc53986640409c060bf838a53785",
      "End": "dc9849e40a8a4cc68f8c9b8c103983ae",
      "Id": "1556b005c9554aceadd4e361a6752417",
      "IsHidden": "False"
    },
    {
      "Start": "fe0bd23c045e4cd0b83caeb087ce7289",
      "End": "81f52933f826467aaa7e7ed2ec3a8648",
      "Id": "42bbb3a8ccce4ac19a1e46b636672952",
      "IsHidden": "False"
    },
    {
      "Start": "c22f5b5560c640dba7a25cd863f9778c",
      "End": "df083d8ca4ba44dca99206e86cc7a3a5",
      "Id": "c1193662d53a418d9633380092895972",
      "IsHidden": "False"
    },
    {
      "Start": "348caa9accca4c6e85cbcac8f449fe1c",
      "End": "0cbe4320c3d944c395bb5d0bf45da3ec",
      "Id": "44a03eea806c4765824dd8cfdbbe1ccf",
      "IsHidden": "False"
    },
    {
      "Start": "348caa9accca4c6e85cbcac8f449fe1c",
      "End": "fa9b181bbb8a41cb8924b79067992e44",
      "Id": "690e78532fad4cd79333ef71b1f46805",
      "IsHidden": "False"
    },
    {
      "Start": "3c24af1b1af947d88da8d6f6281b31e8",
      "End": "0f72a0e748f34678adda2eea329bbedb",
      "Id": "19f41056ba9b42158e7b1cc37ce72f8f",
      "IsHidden": "False"
    },
    {
      "Start": "d0cbf73cee8942059d801a36851d54a1",
      "End": "6f215fa8266a498c826e1b1860bf2376",
      "Id": "df6b533d16244cbd815d69169d297ef4",
      "IsHidden": "False"
    },
    {
      "Start": "60772516d2c84435bedad6b4e8e6761b",
      "End": "38f63ddd33684d6383b4fec07e1c66b7",
      "Id": "14309807e9e64e1396bef2dbbea3cfca",
      "IsHidden": "False"
    },
    {
      "Start": "d6ef97e030b84ef6aee246ffb23d6e03",
      "End": "d2f5e80f312b45e2b14022cacb4da68c",
      "Id": "6b0b5ab4d74948b083e9d200c424f8fa",
      "IsHidden": "False"
    },
    {
      "Start": "f1eab547ec8f4e0cbe03e16eca61b35e",
      "End": "c43dcacfe1944747af9b4d2769aed5a0",
      "Id": "6022efcc08d74d3798633bcd5d5ed119",
      "IsHidden": "False"
    },
    {
      "Start": "e36c9dbfcd4e453ab9a41a08f2021912",
      "End": "20189ac4208d4713a35f97b7ceec2a19",
      "Id": "25552d8ac99b4f9a920b79a9dd1ffd96",
      "IsHidden": "False"
    },
    {
      "Start": "8469379a67d3407489700073946ad34e",
      "End": "3d2bfc72ea1b49278ee2371a7cd55b7c",
      "Id": "241734cc14494d88b492803389fdb465",
      "IsHidden": "False"
    },
    {
      "Start": "d9681fedf6de40e7907df724b5e0b278",
      "End": "91beb141414942659eda4806db28f3f0",
      "Id": "a3f0bf49226c4a979efe047df5b44dd5",
      "IsHidden": "False"
    },
    {
      "Start": "0cbe72ac06824fd4a554a5cfad4d48f3",
      "End": "d70cdbbc53524261b3ac606f86bfb917",
      "Id": "4f73eb97e7c241da9db4bc87a83965ff",
      "IsHidden": "False"
    },
    {
      "Start": "1f97f967a8d54812bf4ab4485068171c",
      "End": "42d2278da0854938a2db5851c0654885",
      "Id": "e0554c894e4d43768ac8f2d78b62b601",
      "IsHidden": "False"
    },
    {
      "Start": "4e08e281822147088e63f16c1b8ae065",
      "End": "be0dd905b5e646048ea19bfbc085f00e",
      "Id": "55ac328961fd4dcfaaf12a8166d53976",
      "IsHidden": "False"
    },
    {
      "Start": "4e08e281822147088e63f16c1b8ae065",
      "End": "63a2e636e25f4ff0bf785f754fdf9cd8",
      "Id": "d24de63b709e4a73ada60f8a51ad07f9",
      "IsHidden": "False"
    },
    {
      "Start": "9f604f5ba49a40c3bbde8328a2414c85",
      "End": "a069567209994fd1af30622eff0b2242",
      "Id": "3d9d9d69c7174032b735bd8ca553f605",
      "IsHidden": "False"
    },
    {
      "Start": "2e030aec29c24867bc47a78140ccf554",
      "End": "ce7190c08de643019f8e477c98befee0",
      "Id": "13cbdb52c940445bb871e1cc62420126",
      "IsHidden": "False"
    },
    {
      "Start": "e93eadfc3f7f4ed2a99358953de1d095",
      "End": "10a52d26662644fcbaea265d7b6f344b",
      "Id": "ce5116d3061c4ec292ba72b7f3101847",
      "IsHidden": "False"
    },
    {
      "Start": "e7db8c7bba064f5698ea7f1357b965da",
      "End": "6ab4c51ec90944c1b493191e532d115e",
      "Id": "b6bcc555d5b4482ba9ff016e00c679c5",
      "IsHidden": "False"
    },
    {
      "Start": "e7db8c7bba064f5698ea7f1357b965da",
      "End": "83d5ff0225564e0f99cb92d13dac9b8c",
      "Id": "c98fc79dd9ee45af9ecb6a2e44d15a74",
      "IsHidden": "False"
    },
    {
      "Start": "706e3ecd6cda4803b7df3121a695f114",
      "End": "f5d3b9ff9eb84e8fba5d69f9332b93b4",
      "Id": "f13b9f06bf264631bb2e731276119ba7",
      "IsHidden": "False"
    },
    {
      "Start": "ca65118ff7004b5c853e6ebecbef03ad",
      "End": "efbbb6216c744672832d1b43750b61e7",
      "Id": "0109032621c34897aa31858d5b0cc62d",
      "IsHidden": "False"
    },
    {
      "Start": "d067c8f7cae14af785616f6da4431004",
      "End": "52e0b6ee13c34f3f8d533b7f784b746f",
      "Id": "a0f468dad3114a1a826706d189e79488",
      "IsHidden": "False"
    },
    {
      "Start": "c74443ec41294bed847ba13a23bbba9c",
      "End": "b5b640d095aa47cd8b8256766ff1d2dd",
      "Id": "2e24d970edbf4dcbb38feb59fb8a36dc",
      "IsHidden": "False"
    },
    {
      "Start": "90ff24e180fb4e9d8d2250712bc883f2",
      "End": "65b7ea8739d84c94a00c89a8433f12e7",
      "Id": "b7920151e6c043f88fff93921ed78473",
      "IsHidden": "False"
    },
    {
      "Start": "0f5d73b0d97c44d88c3259e8ccf34449",
      "End": "96a0d7d5ed6942deb07c2fb4cf7393ee",
      "Id": "17ff64144a3749b89a34e9351a781df9",
      "IsHidden": "False"
    },
    {
      "Start": "312e88e16a504018911f8f425346e7ba",
      "End": "6c7e149a1114452898bee4101ee5b77d",
      "Id": "29a838491baa4cdbb1337d9bbef16d25",
      "IsHidden": "False"
    },
    {
      "Start": "d63f273f7a4f497aa89576a3fc102a7a",
      "End": "8930105fc2fd46b484bbc9d8da453538",
      "Id": "fa2dce74edf54832b0f92e63642791d1",
      "IsHidden": "False"
    },
    {
      "Start": "bfcb3a70f1364baca61bc5e97fcb3303",
      "End": "23f03463cd024d36a0900753c1742108",
      "Id": "818eb9fa04dd4b58b843a85413a86220",
      "IsHidden": "False"
    },
    {
      "Start": "bfcb3a70f1364baca61bc5e97fcb3303",
      "End": "6d194c7035024d45b6545de77e89ecd5",
      "Id": "c0279c055a8640f0abad38f32ba6396f",
      "IsHidden": "False"
    },
    {
      "Start": "670fac48cda243ac8945efa8977c59c8",
      "End": "93d3522da0134674aeee3a72232bb8e9",
      "Id": "9b4ba5e07ff24a958dfabb7dabfdb89d",
      "IsHidden": "False"
    },
    {
      "Start": "670fac48cda243ac8945efa8977c59c8",
      "End": "8eaeaa02f74c4ef59056f1a1529beef1",
      "Id": "26974cc2d7e8400eb8a38c7d54492ce5",
      "IsHidden": "False"
    },
    {
      "Start": "670fac48cda243ac8945efa8977c59c8",
      "End": "cca306e3c89443fcb33fd1b9c84ff5bd",
      "Id": "79b5ed29be144f978ddf0eb7b1d8327d",
      "IsHidden": "False"
    },
    {
      "Start": "fb1620f0a0b64116bbcd5a3502399ee7",
      "End": "6f75858a9b274fd7af62e35112e2ab77",
      "Id": "51a99900d7cb479095312f003760c6e5",
      "IsHidden": "False"
    },
    {
      "Start": "a3c3816a65ce45969b419cbb35f29aee",
      "End": "0c9e8a13efee4c739a2275bc53511af3",
      "Id": "9eb8a16ce1ab48908945265ea79908c0",
      "IsHidden": "False"
    },
    {
      "Start": "a3c3816a65ce45969b419cbb35f29aee",
      "End": "292b5011281c44c98796e4478e174427",
      "Id": "f682e2b2778a44a384ee414769c1cb6c",
      "IsHidden": "False"
    },
    {
      "Start": "e262ad731d184d09aa663f0d63718d50",
      "End": "44a417340a7d46e7824f577e4649f043",
      "Id": "0654c8202f4549a1b3ab727c9242b6f4",
      "IsHidden": "False"
    },
    {
      "Start": "bbfb6e4bb4d942a390e536288a8bc18e",
      "End": "1a0826e2f99b4567ac76258f0488dba6",
      "Id": "44826d95a05c407698dd1353ed7634aa",
      "IsHidden": "False"
    },
    {
      "Start": "b7f7c6d932a74af0978daa1272fd175a",
      "End": "d899b6d8febe4b819223737e9ba489f5",
      "Id": "2e50c77748ad4df9b1349e943c7a0b06",
      "IsHidden": "False"
    },
    {
      "Start": "b7f7c6d932a74af0978daa1272fd175a",
      "End": "bd80929186744ba08e32a9e55e4e2f30",
      "Id": "4811ea3aa564440daff0dfb652aa5f60",
      "IsHidden": "False"
    },
    {
      "Start": "526ec579bf41458b8a91300babdb6518",
      "End": "9cd9218a4064422da0d346a296eaf1b5",
      "Id": "e1e0c323363142d289be3077e97115e1",
      "IsHidden": "False"
    },
    {
      "Start": "526ec579bf41458b8a91300babdb6518",
      "End": "2d2146916e9643b2b2e575c8c055289f",
      "Id": "dc5da3b7b89741f7ad099f7a0831cee1",
      "IsHidden": "False"
    },
    {
      "Start": "526ec579bf41458b8a91300babdb6518",
      "End": "4482c21b2f924e3d9020069fcaa8b3b7",
      "Id": "c6c937915f59489098ab161b084ace94",
      "IsHidden": "False"
    },
    {
      "Start": "9468f2300dd346d7a38d09146b7f1534",
      "End": "dd2a7fef4ef34962abdab2bcbc72f781",
      "Id": "9a228600f3d84a1f96bebeb7f4b516c2",
      "IsHidden": "False"
    },
    {
      "Start": "558ce6a7a1c14cc495028bd43c07cd02",
      "End": "0c5512bb2f8b464da182b21928eec840",
      "Id": "61bcc8ba7688487ab2bb6bd5169c82b7",
      "IsHidden": "False"
    },
    {
      "Start": "cf46e2e9347143bfbc4dc24aeb467420",
      "End": "d847485ed74a4d3f83173449b5513bec",
      "Id": "fccc2213d3164f6caed458476c958412",
      "IsHidden": "False"
    },
    {
      "Start": "624190b6e03b49ce82870397010d439e",
      "End": "955dea80108d431290001bca94eae628",
      "Id": "95fc2c105a88470ab3c0885869f44319",
      "IsHidden": "False"
    },
    {
      "Start": "4875964bfac243f183861040005b3990",
      "End": "cd6a926c15f845aa9233d82527a541d3",
      "Id": "8c03cf62f25743919db873be56c91c94",
      "IsHidden": "False"
    },
    {
      "Start": "1b058f0111cf429192c9ec9e7863ca99",
      "End": "31a2a03e186b41f68176345589f851fe",
      "Id": "1fa28c9751fe41c598bddccaff9bebf3",
      "IsHidden": "False"
    },
    {
      "Start": "ec73e07773374fa99ef7a914f045dd3d",
      "End": "5e36f292d16a48cab3bf97357af7e9fb",
      "Id": "dbdac84758e443af8f9f78b8e985bc6b",
      "IsHidden": "False"
    },
    {
      "Start": "7bf479f1c4964f2ab295245aa9606320",
      "End": "8bc7cf74866a4dfba47a79ac3f0a8e2e",
      "Id": "a39eb0d851484a8b8eaf5dd201668bd3",
      "IsHidden": "False"
    },
    {
      "Start": "a8077af1e7cb41c8873595c1b4288723",
      "End": "7a9b0592e55d40e78e1cfcaba7a92e4e",
      "Id": "3928772bb746447d80a46ae27b5860fd",
      "IsHidden": "False"
    },
    {
      "Start": "e8770b2cf3284b35b366ebc511091ba9",
      "End": "a4b93b35d52446b786704fd2881fae75",
      "Id": "e7524359a8d64c6781ffaaea7619537f",
      "IsHidden": "False"
    },
    {
      "Start": "e8770b2cf3284b35b366ebc511091ba9",
      "End": "0aaac4e9a73e40f7a12cf32733f3d195",
      "Id": "b272148c39dd4266ba20efca6e4c6331",
      "IsHidden": "False"
    },
    {
      "Start": "ff5bbe4d1ac84f228996162e76d07d90",
      "End": "db85da1705824160921984e93893a3d7",
      "Id": "819f06b4e1a443d1995aa975bc0bc9d0",
      "IsHidden": "False"
    },
    {
      "Start": "2fd0df8a2ada4fa68f407666701ae190",
      "End": "25b21bdd034c4f5996e6419ff6d2f0b4",
      "Id": "b0eeaf8b8524419895f5272f7445fb52",
      "IsHidden": "False"
    },
    {
      "Start": "db741a04d24d4655967295f2af7bcf02",
      "End": "cad63d5b3983472cbbb8a4ac18135677",
      "Id": "882a0f7c628f43c3b2c9a22e6cc66c32",
      "IsHidden": "False"
    },
    {
      "Start": "60b9ab48668d4b7dac0a5c86a1b8c9d8",
      "End": "acef4a77a225453e81feafbc10f9fa68",
      "Id": "2dc89e6bb8014b568f77d7cdf44bfbec",
      "IsHidden": "False"
    },
    {
      "Start": "c849302ac0174dfcb548d64a006f115c",
      "End": "6c4d848e921448c7aec94a21c321ddd7",
      "Id": "56569e1da52f4ba7abb3295c6e92ce2f",
      "IsHidden": "False"
    },
    {
      "Start": "4e79c3e9dfb9429a8d3a7f2bb7b43081",
      "End": "7e4a01a2824249988af7f23298bd8351",
      "Id": "964353c062db4d0491935159d1c1565d",
      "IsHidden": "False"
    },
    {
      "Start": "b7252648e5e44232bd2b18794f72bead",
      "End": "8076a247af394e739313ca05b1daeed3",
      "Id": "75e63f8ee53143548b8a08d486b10943",
      "IsHidden": "False"
    },
    {
      "Start": "a3980c7e25324e45886e65a58fa9a382",
      "End": "e7432b73c1ec4c37821067633d41d19b",
      "Id": "bcdfe30cb03b473281a89e0e2e396224",
      "IsHidden": "False"
    },
    {
      "Start": "138048e947384ef0a2297ac4aa198951",
      "End": "91043a1a30b042a792fd8c0757e93f93",
      "Id": "52fe8bfc93614d0f97db9cf8d809d2a3",
      "IsHidden": "False"
    },
    {
      "Start": "29f2e4c617f349aeb732bb8c3f0e42d5",
      "End": "442a3e18d3ae40f7a795d29f7720da52",
      "Id": "abe73f80f387424993e75b04de5d61b4",
      "IsHidden": "False"
    },
    {
      "Start": "f85506cd4bd04b999f48e9f5fa56a81d",
      "End": "7b497ed9966e456c9c71b26ba24b16bc",
      "Id": "c1cdcd1c6d0b4e7aae89b5a2141deb6b",
      "IsHidden": "False"
    },
    {
      "Start": "f8abad0114554695bd4024af381e44db",
      "End": "76e7ff0452184fc5807ae9f5dd4138a4",
      "Id": "057a88928d94451c92449a4c95be891d",
      "IsHidden": "False"
    },
    {
      "Start": "fef0cb970ec842e6a149a46785b4ceb7",
      "End": "8e50cc48276349a3847676130312da93",
      "Id": "6844c397b28443559827ca0450f727bb",
      "IsHidden": "False"
    },
    {
      "Start": "03e24513cc8c43838d669122f544efdc",
      "End": "c4f546f99c9444a0b967b431960a73dd",
      "Id": "743acdd47c924b72ba899efea11883d1",
      "IsHidden": "False"
    },
    {
      "Start": "1efae1f2676e416e85a03bf7a238d6b0",
      "End": "a5cca83821134ca5a21db790a6742990",
      "Id": "7b78d719814b415cbb40637e4c0a369a",
      "IsHidden": "False"
    },
    {
      "Start": "57b46fc0fece4a0197c1cb11e9485324",
      "End": "b3e3ea7c288541c69334cf500e1e77a9",
      "Id": "08b83f125a1845e6b352a42d86cd947c",
      "IsHidden": "False"
    },
    {
      "Start": "57b46fc0fece4a0197c1cb11e9485324",
      "End": "520b25a72fbf4605942b76890bcfad0c",
      "Id": "c829aaba57d94785bbefc9275fa5a644",
      "IsHidden": "False"
    },
    {
      "Start": "d3fb30f7e51d4895882d7d05a8202e26",
      "End": "a21149bdae78428ca02ba1ae840d0ec7",
      "Id": "0d04a1521f274071b2cf5924c0fe6667",
      "IsHidden": "False"
    },
    {
      "Start": "44d08730c1204f33be53fbe09f947fda",
      "End": "8b55695cf9dc4f69a548c35ef4be348c",
      "Id": "7e7a89e5eaff4a70a7abd0d3c517afab",
      "IsHidden": "False"
    },
    {
      "Start": "d30c39d1f16a46a59e6aec065344bb66",
      "End": "63ccd997e6d34716a8655134870180b3",
      "Id": "728de3849a234a03a95cb3d9e7033491",
      "IsHidden": "False"
    },
    {
      "Start": "d30c39d1f16a46a59e6aec065344bb66",
      "End": "5b637f86f91148c2a1cc2fca684ee5f2",
      "Id": "d3af61a5247f4216b4fb782408ac8b70",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TfM9xR5nuKi3fSjd9KsCXzPcU2Sby43frtBOPpTN30qO5b/R5v8Acb+VAGNrPi250XR9Q1GXTVeKztpLllS55ZUQsQPl64FczpXx20m+Ki6tJtOyQAZTvB5AOCoOAAc5OOlaPjz/AJEPxP8A9gq7/wDRD15j8GFDeLnyAf8AiWz9f+u1vVJaXJue52vinSL6HzrfU7SePON0cqn9M1ZtdVtbyRkguI5XUbiq9cetZnlqDkKoPrilsmP9tf8Abs3/AKGtSO5t+Z7ijzPcVFu+lG76UDJfM9xR5nuKi3fSjd9KAJfM9xRUW76UUAR7qN1RbqN1UIl3VHcN/o8v+4f5Um6o7hv9Hl/3D/KgDmvHn/Ih+J/+wVd/+iHrzH4L/wDI3P8A9gyf/wBHW9enePP+RD8T/wDYKu//AEQ9eY/Bf/kbn/7Bk/8A6Ot6FsT1Pa6jtf8AkND/AK9m/wDQ1qSoYP8AkMj/AK9m/wDQ1qRmvuo3VFuo3VQyXdRuqLdRuoAl3UVFuooAiyKMio91G6mBJkUycjyJP90/ypN1R3DH7PNtOG2NgkZHT0oAw/Hn/Ih+J/8AsFXf/oh68x+C/wDyNz/9gyf/ANHW9dp44/4SKPwnrizPpktibC4FxJDDIsix+U28qpkI3bc4Geteb/DPxJp3hnxSJtTvFtbeSxmhSR4nBZzLAwUABhnCseCelcf1qEXyTTXnZ2+/ZfM6lhZyjzQafknr92/3Hv8AVaM/8Tlf+vZv/Q1rE/4WJ4fzj7ZOT6LYXB/lHUmm+KtM1TV8288gVYCC1xbSwDJYcAyKoPQ9K0jVpylaMk36mLo1Yq8otL0Z0+RRkVHvBUEHIIyD60bq6DMkyKMio91G6gCTIoqPdRQBFuo3VFuo3VQiXdTJm/cyf7p/lTd1RzsRBIcZO08evFAGb4+/5EPxP/2Crv8A9EvXztHEZrqyCgFgspAY4GcCvcPHPiR28J67aSaPqVu1xYXEKzSpH5SFomXLOHIVQTyT2rxbTWSPU7ITSJbgxTbZJGUpnC9DnB/PtXz2ZYijLCVaPN7zW3U93K8PWhiqdbl91PfdEXgnxl470GxsU1a+WyvyrmS0tZTNbAB/l2q+dvH93698D1TTvH+tamqpLLbqG4O2AHPuQSea8b06y1fSrLS7bxDrVtrmsbZTLd28SxKw35UBVAHAx2/PqfQvDv3o/rXXlif1SPM7u8tr2+J7X1t2v0OXMuV4qXKrK0d7X2W9tL9/M9P0zTJbzS7S7jv5bKa4gSZ/sqIi7mUEnbjaTz1IJ6c10CsVUAncQOvrWX4fY/8ACP6V/wBekP8A6LWtDdXrHmEu6jdUW6jdQBLuoqLdRQBFuPpRuPpUVFUBLuPpTJmPkycfwn+VNpsp/dP/ALp/lQBV8ff8iH4n/wCwVd/+iHryr4P6fa3fi5vPtYZiunTuPMjVsN5sAzyOuCefevVfH3/Ih+J/+wVd/wDol68x+C//ACNz/wDYMn/9HW9ZWvHUSbT0PXLjR4p4TEHcRHkwyYlib6o+R+WD71y154Ht01BEtZI7FzGZN1vCQMggY2FyvfqAD713FZd5/wAheL/r3b/0NaI6sDNtdBubGygt7bUPs5hjWMSRwHnAAyVLlSePStpSQoB5Pc461FRWoEu4+lG4+lRUUDJdx9KKiooAj3f5zRu/zmot3uaN3uaqwiXd/nNMlb90/wDun+VN3e5psjfu35PQ0WATx9/yIfif/sFXf/ol68x+C/8AyNz/APYMn/8AR1vXp3j/AOXwH4nJ4H9lXfX/AK4PXmPwX/5G5/8AsGT/APo63rBbB1Pa6ydQONWh/wCvdv8A0Ja1qx9SbGrQ/wDXu/8A6EtEdwH7v85o3f5zUW73NG73Nb2Al3f5zRu/zmot3uaN3uaLAS7v85oqLd7miiwEW8+v6Ubz6/pRRVAG8+v6UhbcCDyDweKKKAKr6ZZyxukltHKjqVZJF3qQeCCDVbTfD1hoepNf6bbR2dy0D252KdhDMjZK5xnMY/OiilYDU+3aju/4+ocen2Y//F1Fm4luBNcTLIyoUGyLYOSCT1PpRRS5UgJd59f0o3n1/SiiqAN59f0o3n1/SiigA3n1/SiiigD/2Q==",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 44.333560943603516,
      "EyeY": 81.002822875976563,
      "EyeZ": 32.908754348754883,
      "LookX": -88.19830322265625,
      "LookY": -31.236721038818359,
      "LookZ": -10.344341278076172,
      "UpX": -0.1210397407412529,
      "UpY": 0.99254614114761353,
      "UpZ": -0.014196136966347694
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9421.4220987680455,
        "Y": -2564.954738404901
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9063.4220987680455,
        "Y": -2564.954738404901
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7722.2238281494956,
        "Y": -2452.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7976.2238281494956,
        "Y": -2418.0363532235056
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlantAngle",
        "Id": "e0347155fcfe4b88a8aa4169246e4107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6771.2238281494956,
        "Y": -2153.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7229.2238281494956,
        "Y": -2162.0363532235056
      },
      {
        "ShowGeometry": true,
        "Name": "Column Slant Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7229.2238281494956,
        "Y": -2010.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "Column Slant Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7229.2238281494956,
        "Y": -1858.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6290.2238281494956,
        "Y": -1901.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6771.2238281494956,
        "Y": -1901.0363532235056
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Beam Slope Angle (degrees) from",
        "Id": "b99019feddf34cddbd879fca7f2bc375",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6771.2238281494956,
        "Y": -1749.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Beam Slope Angle (degrees) to",
        "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6771.2238281494956,
        "Y": -1597.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "596909f5799446a7820a3e674d2f49c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 797.19984968983158,
        "Y": -122.76379658031351
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 420.19984968983158,
        "Y": 4.3762034196864761
      },
      {
        "ShowGeometry": true,
        "Name": "Column Section Type",
        "Id": "3db0ae870aae4d4e8fccea48976c3b33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 420.19984968983158,
        "Y": -181.76379658031351
      },
      {
        "ShowGeometry": true,
        "Name": "Beam Section Type",
        "Id": "1ca46343c98e422eb589fa5f6c1c842d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 797.19984968983158,
        "Y": 94.23620341968649
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "145ece1505dd4e13b5adb581f63e7bf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1227.1998496898316,
        "Y": 61.236203419686461
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e1d42da2f0d04115ba4c333d965e15ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 797.19984968983158,
        "Y": 280.37620341968648
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5983.4823103428862,
        "Y": 650.61920116344163
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3304.8477516928924,
        "Y": 674.22878511525118
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3751.8477516928924,
        "Y": 697.29642433816116
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4731.1905080012939,
        "Y": 802.18997660871287
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4477.1905080012939,
        "Y": 836.32997660871285
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5146.1905080012939,
        "Y": 557.13547739672208
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5146.1905080012939,
        "Y": 1047.2444758207037
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5567.0452164583148,
        "Y": 879.34150161306229
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15581.181313002415,
        "Y": 468.08661243211839
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7198.3666179644988,
        "Y": 435.63971384038263
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6944.3666179644988,
        "Y": 469.77971384038261
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7613.3666179644988,
        "Y": 435.63971384038263
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7961.3666179644988,
        "Y": 435.63971384038263
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7614.0365718393641,
        "Y": -20.62634671648425
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7199.0365718393641,
        "Y": -20.62634671648425
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7962.0365718393641,
        "Y": -20.62634671648425
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6945.0365718393641,
        "Y": 13.513653283515751
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8269.3666179644988,
        "Y": 435.63971384038263
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8270.0365718393641,
        "Y": -20.62634671648425
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7223.788900316842,
        "Y": -881.77720218990544
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6969.788900316842,
        "Y": -847.63720218990545
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7638.788900316842,
        "Y": -881.77720218990544
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7986.788900316842,
        "Y": -881.77720218990544
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8294.788900316842,
        "Y": -881.77720218990544
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7371.0991910007706,
        "Y": 920.73951246261527
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7849.0991910007706,
        "Y": 920.73951246261527
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8898.09919100077,
        "Y": 920.73951246261527
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "774bfec08d6646eab975b1a78194a1d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11851.418666192725,
        "Y": 1073.0751565815044
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11597.418666192725,
        "Y": 1073.2151565815043
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11851.418666192725,
        "Y": 1290.2151565815043
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14931.181313002415,
        "Y": 468.08661243211839
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7362.34532051381,
        "Y": 1345.3622195694697
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7798.34532051381,
        "Y": 1328.3622195694697
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8188.34532051381,
        "Y": 1362.5001478330462
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8496.34532051381,
        "Y": 1362.5001478330462
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "d19b07df0f1247c09fd1a6d579459e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12273.418666192725,
        "Y": 1088.0751565815044
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6956.0991910007706,
        "Y": 920.73951246261527
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6702.0991910007706,
        "Y": 954.87951246261525
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7.5366053535047968,
        "Y": 968.45622713607963
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2612.0049871978154,
        "Y": 839.39594829513123
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2101.0049871978154,
        "Y": 913.39594829513135
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1678.0049871978154,
        "Y": 913.39594829513123
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3123.0049871978154,
        "Y": 839.53594829513133
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3122.5947048062603,
        "Y": 1019.4347560415987
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4019.2303614954562,
        "Y": 824.6975365543758
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4009.7589125787836,
        "Y": 1233.0807659882435
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "b9e7767890a047e685f8ff26c0f26d02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7229.2238281494956,
        "Y": -2378.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d074ff8024794568b8a0c042612ff9da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7722.2238281494956,
        "Y": -2270.0363532235056
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f5fd7157d8dd46efa1a7ad4b9e7133ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4806.2303614954562,
        "Y": 858.83753655437579
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "75fbb7ec69cf461b95141eb144180577",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2373.0050933463021,
        "Y": 80.76340409503905
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "98f256f147cb4d0f8148c23deef718d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2721.0050933463021,
        "Y": 154.76340409503908
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "558c4f50298042ad99570158961261a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2373.0050933463021,
        "Y": 262.90340409503904
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "289d91618171478dbb998b4e6984e0ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4552.2303614954562,
        "Y": 824.6975365543758
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "5bf679f3a1d845e9a80dcfacd4d4b0c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4542.7589125787836,
        "Y": 1233.0807659882435
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "997ebb57baa34324bb07089352ec8a17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8285.09919100077,
        "Y": 920.73951246261527
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "911367ea95104a68a8bdabf24ea343d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8590.09919100077,
        "Y": 920.73951246261527
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "72425b91f2ea4495926845dcc24a7e3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10305.074077944046,
        "Y": -452.68183135478967
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ade3a07d982d4a6b9566f90ae4060d67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10650.074077944046,
        "Y": -294.68183135478967
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "650fbffecdd54e1f8a047828f6d12668",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10305.074077944046,
        "Y": -102.68183135478967
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ad66920b3a3e442bb5fe89999aae474b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11458.074077944046,
        "Y": -112.68183135478967
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0685e4e2cde14269a350099bca66d1cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11054.074077944046,
        "Y": 12.318168645210335
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "bb1eaf21f4dc42819950d90924b30413",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11862.074077944046,
        "Y": -21.681831354789665
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "02fc6e7ff41f41b384488b805e007f4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11458.074077944046,
        "Y": 103.31816864521033
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "4f35443af9384bb5a47d95baaeedceeb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15178.181313002415,
        "Y": 468.08661243211839
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2404215ffc2c4afa9614331a555b437e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13130.275171917212,
        "Y": 1527.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "6bcb242ae05c45fda1f9ebbbdeec3731",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9720.19006827683,
        "Y": 854.80455386914718
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ffb92b32cdde4dc3a73c1560eb54fdfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10041.19006827683,
        "Y": 956.80455386914707
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c33840e0557c4408a330da04f399cfb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9720.19006827683,
        "Y": 1092.8045538691472
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "6e077c8a1abd42a7aa12f341ed0d448d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10445.19006827683,
        "Y": 1047.8045538691472
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "90dbaba524234fdfb31eb37933266b20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10041.19006827683,
        "Y": 1172.804553869147
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f3f8813e5c794004833a9739d4c2d0ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10849.19006827683,
        "Y": 1138.8045538691472
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "12e6cd04e27647869a2afb60be7717cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10445.19006827683,
        "Y": 1263.804553869147
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "a1f4df2ff8434486a643c653fcf53787",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12822.275171917212,
        "Y": 1358.6972036126269
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8807f05fe05d4763a174deb7ff8863e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12822.275171917212,
        "Y": 1206.337203612627
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "852b8ef9499847458b72627ed032ffc3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13130.275171917212,
        "Y": 1345.6972036126269
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "ffaace1683d54d13971e8728952de923",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6947.34532051381,
        "Y": 1345.3622195694697
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b6bd315c8a80447a95142ed6c7047fd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6693.34532051381,
        "Y": 1379.5022195694698
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c6d9585fb47841cb9c9ceb4bfd7558e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6955.2827746596213,
        "Y": -434.38978307253012
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "dde7df2ab5954fc1b5b52264b6ea322c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7624.2827746596213,
        "Y": -468.52978307253011
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "1e3e2a13ad1349daa6c58b63b5f0b78a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7972.2827746596213,
        "Y": -468.52978307253011
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "3841de7214484a55b00b70d485720ed1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8280.2827746596213,
        "Y": -468.52978307253011
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "d45cf1955c2e41dd9e147541a76d0162",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7209.2827746596213,
        "Y": -468.52978307253011
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "254a2da754394a22bdc053660c8ae550",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11054.074077944046,
        "Y": -203.68183135478967
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ebc677ba74f349d581eb89a79f50b8c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10650.074077944046,
        "Y": -78.681831354789665
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "745d81c493ee465684bd2dca363c1732",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1808.6202928381363,
        "Y": 921.08701582630692
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "35aa8435dc9b403b9c32aa5427de285f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1432.6202928381363,
        "Y": 862.08701582630692
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "647f8844bb9c4fc699893a2c544ea501",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2395.6202928381363,
        "Y": 887.08701582630692
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.IsItAWebFlangeSection",
        "Id": "91006b7133c74738aeeb5fe722e22aa4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5871.2238281494956,
        "Y": -1901.1763532235054
      },
      {
        "ShowGeometry": true,
        "Name": "3. On column web=true (on column flange=false)",
        "Id": "b6379c9d97da40e589ef5c84f9338c3f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1410.0497204013172,
        "Y": -1101.7106980181588
      },
      {
        "ShowGeometry": true,
        "Name": "Tolerance for the 90 degrees beam to column angle in the horizontal plane",
        "Id": "da5564f9c15c4442875c3c2f09316d54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2868.0497204013172,
        "Y": -805.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "4. Library file path",
        "Id": "e481db9b9a764cd880368fe06869d1df",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5069.7589125787836,
        "Y": 1267.0807659882435
      },
      {
        "ShowGeometry": true,
        "Name": "5. Connection family to place",
        "Id": "506614825fda4465a46f0e053404340e",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6454.1518631270174,
        "Y": 726.41439318280572
      },
      {
        "ShowGeometry": true,
        "Name": "6. Filter connection type name",
        "Id": "90e9b33fd7384dc299f1335b0b89b0dd",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1035.6202928381363,
        "Y": 955.08701582630692
      },
      {
        "ShowGeometry": true,
        "Name": "7. Select analysis results",
        "Id": "68988194c6084e40ba6987f801d5c4b0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3304.8477516928924,
        "Y": 825.29642433816116
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "e00282b9e8e942959d0163082a075be9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1432.6202928381363,
        "Y": 1014.0870158263069
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "5820039b27d3402ab5aaa8a2f9559507",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2124.6202928381363,
        "Y": 921.08701582630692
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "84740ae24a5e46c29783a904d7977950",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -522.5366053535048,
        "Y": 1002.4562271360795
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "8dfc4880d53c40398ac86bf5b5d2d937",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -958.5366053535048,
        "Y": 1002.4562271360795
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "c4a3d865fe2e4b8aa9c75015d5cf49c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6070.1518631270174,
        "Y": 785.41439318280584
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ad4a93eda4f34f819e9ddb54877e3e30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1035.6202928381363,
        "Y": 1107.0870158263069
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "64f483c2eee341e283be12ba5a5a1f38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13473.275171917212,
        "Y": 1393.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "f3f8c55b08eb498d8d5e28bbfab8f5ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5279.0284684314865,
        "Y": 2214.4580772425425
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "70dbfe820f7348809c4f7a5839798590",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5025.0284684314865,
        "Y": 2248.5980772425428
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "3bbb05aebb4d487a8a239cdebe39c562",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5694.0284684314865,
        "Y": 2585.0603949286597
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "cad39a68564d4cecb8669f417e80f3cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6852.5014650118137,
        "Y": 2211.9327504206381
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "c78dcc5cdf51476493b9474b6df5267c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7297.5014650118137,
        "Y": 2211.9327504206381
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "11243dfb555c44b69687533b347af505",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7696.5014650118137,
        "Y": 2287.9327504206381
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e0bdcedc7788422daad870f4e9606e19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7696.5014650118137,
        "Y": 2135.9327504206381
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b7a4638eed8a44d39acc7bfbc0473814",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8783.33360938941,
        "Y": 1954.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b714aa2fed8a4e669cdf63ede5edc710",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8783.33360938941,
        "Y": 2147.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5b89be879dfe481d9a573fdcfe19ba5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9205.33360938941,
        "Y": 2316.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "bfd4797ff3774588b461c1c01c1139e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9205.33360938941,
        "Y": 2099.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "4cb2c07dafc14859b02c7ba0567be6fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9627.33360938941,
        "Y": 2260.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "965f4809ad954f6898c5219de9d120ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8783.33360938941,
        "Y": 2298.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "e14733c558244a09b6807c37e54a0d8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9205.33360938941,
        "Y": 2467.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "9024748391b440688032fe520cce7a7c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10031.33360938941,
        "Y": 2260.2173750413112
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "98d2aa900bef4cbe8aead00dc5b138e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8529.33360938941,
        "Y": 2382.8573750413111
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "30e3173ef64e4624a02de563fa2f34be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7193.0039920021936,
        "Y": 2987.1373857928725
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "42751d5f08a04bfb839777824700b075",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7587.0039920021936,
        "Y": 3000.1373857928725
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3df1cc9b37a64b9baf523d0792ff9547",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9095.0039920021936,
        "Y": 3008.1373857928725
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "e2a8cdff201e4b549363517d280f3a92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8701.0039920021936,
        "Y": 3042.1373857928725
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b6b1f20d94c042fdb9d579af7314fcf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7587.0039920021936,
        "Y": 3186.2773857928723
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "50174dde687a4aafb49b9d42764be175",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7981.0039920021936,
        "Y": 3110.1373857928725
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "5575d2a7186041bb94db4fb847e91c6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8366.0039920021936,
        "Y": 3076.1373857928725
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9fc2c365e31145ef8db8200b424077b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10451.996656059509,
        "Y": 2914.8674076454895
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "235be398ae1c428ca99d8a7cd4b418a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10962.996656059509,
        "Y": 2914.7274076454896
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "879b0ffb43ef49bba667ec4ce03cbde6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11356.996656059509,
        "Y": 2880.7274076454896
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "669fd199f2584bc0b7532acdda8ae946",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6454.1518631270174,
        "Y": 878.41439318280561
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "749f0f29a6a94c14b140033b40dec3f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3875.0497204013172,
        "Y": -485.71069801815884
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "6db082071e5c459c8b0aff6a9b751f60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3194.0497204013172,
        "Y": -351.21069801815884
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "92c9e6d1bf7d43ffaf5351c8494146d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3194.0497204013172,
        "Y": -654.21069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.XAxis",
        "Id": "ef7371781256498db1d0b84701dbb54f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2868.0497204013172,
        "Y": -654.21069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.YAxis",
        "Id": "fd4217ff4fec4315ada6c0147387df42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2868.0497204013172,
        "Y": -1527.7106980181588
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.ZAxis",
        "Id": "fc12b9c932d9459d8dd93f4471768492",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2868.0497204013172,
        "Y": -198.71069801815884
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.XAxis",
        "Id": "45613fe6e5da476c98d9ccda81575aef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2868.0497204013172,
        "Y": -351.21069801815884
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "dc0b61e5557a404d9f7a37ed4e8f5a75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4212.0497204013172,
        "Y": -699.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91b84a9c09a44c1a9d48a46dc0b6d782",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4502.0497204013172,
        "Y": -591.88319801815874
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "105aa88bc0084d2d9de2d1356716b38c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3517.0497204013172,
        "Y": -351.21069801815884
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "165f0f6006cd48468d4cfe876d6d1208",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3875.0497204013172,
        "Y": -317.38319801815874
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "bd45c43566e0436e8a62a1b095f402e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3517.0497204013172,
        "Y": -654.21069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c8578cbed37a454d99826736a7e45642",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3875.0497204013172,
        "Y": -637.38319801815874
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "1b6a094daa024b1ba13f63b48d37cb40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -887.04972040131724,
        "Y": -962.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "<=",
        "Id": "8c7a001aaf354c95a59a4d44c50924d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1669.0497204013172,
        "Y": -657.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "<=",
        "Id": "694ec26afa8e43ce978fbfcfcb56b1cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1669.0497204013172,
        "Y": -991.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "0d4cfe13561c49f8844f8a7b54e287b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1410.0497204013172,
        "Y": -950.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ee3d657afc2d4b5e91dee9ce75a17942",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1669.0497204013172,
        "Y": -809.38319801815874
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "83353eca767c4248ad473b2a9f5bfb91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1410.0497204013172,
        "Y": -733.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4045f327d3ff49fc863220e089dbc6a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13473.275171917212,
        "Y": 1609.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "d4d4c057dfdc402ba5860eb50e71cd98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13820.275171917212,
        "Y": 1555.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2db682ccff114626ae85d8097145e5e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14167.275171917212,
        "Y": 1533.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "52fb5e7afd0e4151870f7c1da31c5ecb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13820.275171917212,
        "Y": 1338.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "41fa4c61c9d14f6fbcaf9fb49f6f5fd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14167.275171917212,
        "Y": 1316.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "243236ac3d754c5eb5fad9c4d7aa8269",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14514.275171917212,
        "Y": 1294.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "0af6212e4f0946008bbd8cb5b42d06e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13473.275171917212,
        "Y": 1212.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "c77ac4f0ec5745bbb9464e92a0eaf409",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13820.275171917212,
        "Y": 1157.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "f15a99d8bb2d437eaf03dd422d7f2d5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14167.275171917212,
        "Y": 1135.6972036126267
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6b764432d3744d1c988da469de411376",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13130.275171917212,
        "Y": 1194.6972036126269
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "e0f1b0139564417e811abe6982603e5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13473.275171917212,
        "Y": 1059.6972036126269
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "1da6f27fe4f54cf68b002bdb3298001e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4502.0497204013172,
        "Y": -773.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "281114d8189a42f38d4abd085bfc48e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2036.0497204013172,
        "Y": -1041.7106980181588
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "d439aa19d710478081846ec9a7d10922",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2036.0497204013172,
        "Y": -608.71069801815872
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d5a120a881834f25b70365e1a777466c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2868.0497204013172,
        "Y": -1376.3831980181587
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "059548c882344eab9fae814146f4f21a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2868.0497204013172,
        "Y": -502.71069801815884
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0d7f79217d804bd79d6e75f407f90ca8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3194.0497204013172,
        "Y": -502.88319801815874
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "19eafd098f184294956680b1a1fe476f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2036.0497204013172,
        "Y": -789.71069801815872
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e0347155fcfe4b88a8aa4169246e4107",
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "b99019feddf34cddbd879fca7f2bc375",
          "5807ab7d61874f7394cfe59a85bfc7c1",
          "b9e7767890a047e685f8ff26c0f26d02",
          "d074ff8024794568b8a0c042612ff9da",
          "91006b7133c74738aeeb5fe722e22aa4",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -7986.2238281494956,
        "Top": -2525.1763532235054,
        "Width": 2417.0,
        "Height": 1064.0,
        "FontSize": 36.0,
        "InitialTop": -2452.1763532235054,
        "InitialHeight": 1000.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1ba97622b83a4896ac6b2b42a790702f",
        "Title": "Additional (optional) filtering: by section types",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "596909f5799446a7820a3e674d2f49c7",
          "4c0aeca86b3e4a598cd6c0ac60c2e74d",
          "3db0ae870aae4d4e8fccea48976c3b33",
          "1ca46343c98e422eb589fa5f6c1c842d",
          "145ece1505dd4e13b5adb581f63e7bf8",
          "e1d42da2f0d04115ba4c333d965e15ac"
        ],
        "HasNestedGroups": false,
        "Left": 410.19984968983158,
        "Top": -254.76379658031351,
        "Width": 1074.0,
        "Height": 671.14,
        "FontSize": 36.0,
        "InitialTop": -181.76379658031351,
        "InitialHeight": 607.14,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "f5fd7157d8dd46efa1a7ad4b9e7133ac",
          "289d91618171478dbb998b4e6984e0ea"
        ],
        "HasNestedGroups": false,
        "Left": -4816.2303614954562,
        "Top": 751.6975365543758,
        "Width": 1203.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 824.6975365543758,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "46ec41b71daf42dca401a9dc8eb59e77",
          "5bf679f3a1d845e9a80dcfacd4d4b0c2",
          "e481db9b9a764cd880368fe06869d1df"
        ],
        "HasNestedGroups": false,
        "Left": -5079.7589125787836,
        "Top": 1160.0807659882435,
        "Width": 1476.0,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1233.0807659882435,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4467.1905080012939,
        "Top": 441.13547739672208,
        "Width": 861.0,
        "Height": 742.10899842398157,
        "FontSize": 36.0,
        "InitialTop": 557.13547739672208,
        "InitialHeight": 635.10899842398157,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (beam to column)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6934.3666179644988,
        "Top": 362.63971384038263,
        "Width": 1556.0,
        "Height": 243.13999999999993,
        "FontSize": 36.0,
        "InitialTop": 435.63971384038263,
        "InitialHeight": 179.13999999999993,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6959.788900316842,
        "Top": -954.77720218990544,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -881.77720218990544,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6935.0365718393641,
        "Top": -93.62634671648425,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -20.62634671648425,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "809e0ab45e464576aa8783e69d0af647",
          "911367ea95104a68a8bdabf24ea343d5",
          "997ebb57baa34324bb07089352ec8a17"
        ],
        "HasNestedGroups": false,
        "Left": 6692.0991910007706,
        "Top": 847.73951246261527,
        "Width": 2427.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 920.73951246261527,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "ffaace1683d54d13971e8728952de923",
          "b6bd315c8a80447a95142ed6c7047fd2"
        ],
        "HasNestedGroups": false,
        "Left": 6683.34532051381,
        "Top": 1255.3622195694697,
        "Width": 2034.0,
        "Height": 260.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 1328.3622195694697,
        "InitialHeight": 196.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "654e5f1363ce4799b114c9d1057fd75d",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "774bfec08d6646eab975b1a78194a1d4",
          "ecc0331f412c4c319df6ef8ef2e250e2",
          "1c8b31c6aeef42179f9bf04ab0c50df4",
          "d19b07df0f1247c09fd1a6d579459e44"
        ],
        "HasNestedGroups": false,
        "Left": 11587.418666192725,
        "Top": 1000.0751565815044,
        "Width": 894.0,
        "Height": 426.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 1073.0751565815044,
        "InitialHeight": 362.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "84740ae24a5e46c29783a904d7977950",
          "8dfc4880d53c40398ac86bf5b5d2d937"
        ],
        "HasNestedGroups": false,
        "Left": -968.5366053535048,
        "Top": 895.45622713607963,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 968.45622713607963,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -3133.0049871978154,
        "Top": 766.39594829513123,
        "Width": 1687.0,
        "Height": 389.03880774646734,
        "FontSize": 36.0,
        "InitialTop": 839.39594829513123,
        "InitialHeight": 325.03880774646734,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3535ac2782924cc1854d736c3bbf6722",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c6d9585fb47841cb9c9ceb4bfd7558e3",
          "dde7df2ab5954fc1b5b52264b6ea322c",
          "1e3e2a13ad1349daa6c58b63b5f0b78a",
          "3841de7214484a55b00b70d485720ed1",
          "d45cf1955c2e41dd9e147541a76d0162"
        ],
        "HasNestedGroups": false,
        "Left": 6945.2827746596213,
        "Top": -541.52978307253011,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -468.52978307253011,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "200596100f8940ae8596549d1937131d",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "745d81c493ee465684bd2dca363c1732",
          "35aa8435dc9b403b9c32aa5427de285f",
          "647f8844bb9c4fc699893a2c544ea501",
          "e00282b9e8e942959d0163082a075be9",
          "5820039b27d3402ab5aaa8a2f9559507",
          "ad4a93eda4f34f819e9ddb54877e3e30",
          "90e9b33fd7384dc299f1335b0b89b0dd",
          "f08b4e6c5c5e4a6e89e98785ebcc9ff2"
        ],
        "HasNestedGroups": false,
        "Left": 1025.6202928381363,
        "Top": 789.08701582630692,
        "Width": 1615.0,
        "Height": 454.0,
        "FontSize": 36.0,
        "InitialTop": 862.08701582630692,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "2074f26ec5e14d42a79b6cc2e1043d2c",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -9431.4220987680455,
        "Top": -2637.954738404901,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -2564.954738404901,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7c970458f3204862a7f48baf5e748547",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "506614825fda4465a46f0e053404340e",
          "c4a3d865fe2e4b8aa9c75015d5cf49c3",
          "669fd199f2584bc0b7532acdda8ae946",
          "4386c18e55d14220825262e4a1dbca43"
        ],
        "HasNestedGroups": false,
        "Left": -6468.1518631270174,
        "Top": 588.41439318280572,
        "Width": 684.0,
        "Height": 425.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 661.41439318280572,
        "InitialHeight": 315.1629860731141,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0d986890d3b943e89308e9a467626e6c",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "75fbb7ec69cf461b95141eb144180577",
          "98f256f147cb4d0f8148c23deef718d3",
          "558c4f50298042ad99570158961261a0"
        ],
        "HasNestedGroups": false,
        "Left": 2363.0050933463021,
        "Top": 7.76340409503905,
        "Width": 605.0,
        "Height": 391.14,
        "FontSize": 36.0,
        "InitialTop": 80.76340409503905,
        "InitialHeight": 327.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1aa3e376982344c4bbda4559bd308177",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "68988194c6084e40ba6987f801d5c4b0"
        ],
        "HasNestedGroups": false,
        "Left": 3294.8477516928924,
        "Top": 601.22878511525118,
        "Width": 824.0,
        "Height": 360.06763922291,
        "FontSize": 36.0,
        "InitialTop": 674.22878511525118,
        "InitialHeight": 296.06763922291,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "21d8d109f01d4518a9a22ae1a0e3067f",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "4f35443af9384bb5a47d95baaeedceeb"
        ],
        "HasNestedGroups": false,
        "Left": 14921.181313002415,
        "Top": 395.08661243211839,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 468.08661243211839,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "886e1710bc474891aece9d446004f363",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72425b91f2ea4495926845dcc24a7e3f",
          "ade3a07d982d4a6b9566f90ae4060d67",
          "650fbffecdd54e1f8a047828f6d12668",
          "ad66920b3a3e442bb5fe89999aae474b",
          "0685e4e2cde14269a350099bca66d1cc",
          "bb1eaf21f4dc42819950d90924b30413",
          "02fc6e7ff41f41b384488b805e007f4a",
          "254a2da754394a22bdc053660c8ae550",
          "ebc677ba74f349d581eb89a79f50b8c0"
        ],
        "HasNestedGroups": false,
        "Left": 10295.074077944046,
        "Top": -525.68183135478967,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -452.68183135478967,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "a7213eb5654848ba937e7d2dfeb98b88",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6bcb242ae05c45fda1f9ebbbdeec3731",
          "ffb92b32cdde4dc3a73c1560eb54fdfd",
          "c33840e0557c4408a330da04f399cfb1",
          "6e077c8a1abd42a7aa12f341ed0d448d",
          "90dbaba524234fdfb31eb37933266b20",
          "f3f8813e5c794004833a9739d4c2d0ca",
          "12e6cd04e27647869a2afb60be7717cb"
        ],
        "HasNestedGroups": false,
        "Left": 9710.19006827683,
        "Top": 781.80455386914718,
        "Width": 1378.0,
        "Height": 617.99999999999977,
        "FontSize": 36.0,
        "InitialTop": 854.80455386914718,
        "InitialHeight": 553.99999999999977,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "36930fb1ecec4730bc4d85deb18721a4",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f3f8c55b08eb498d8d5e28bbfab8f5ec",
          "70dbfe820f7348809c4f7a5839798590",
          "3bbb05aebb4d487a8a239cdebe39c562"
        ],
        "HasNestedGroups": false,
        "Left": 5015.0284684314865,
        "Top": 2141.4580772425425,
        "Width": 994.0,
        "Height": 679.6023176861172,
        "FontSize": 36.0,
        "InitialTop": 2214.4580772425425,
        "InitialHeight": 515.6023176861172,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "7c4f068873e145c4b3569fa52ad58f64",
        "Title": "Get in put member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cad39a68564d4cecb8669f417e80f3cf",
          "c78dcc5cdf51476493b9474b6df5267c",
          "11243dfb555c44b69687533b347af505",
          "e0bdcedc7788422daad870f4e9606e19"
        ],
        "HasNestedGroups": false,
        "Left": 6842.5014650118137,
        "Top": 2062.9327504206381,
        "Width": 1275.0,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 2135.9327504206381,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "c7d4ad6000834b47b2bd0fe3c465f7e1",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b7a4638eed8a44d39acc7bfbc0473814",
          "b714aa2fed8a4e669cdf63ede5edc710",
          "5b89be879dfe481d9a573fdcfe19ba5e",
          "bfd4797ff3774588b461c1c01c1139e8",
          "4cb2c07dafc14859b02c7ba0567be6fa",
          "965f4809ad954f6898c5219de9d120ba",
          "e14733c558244a09b6807c37e54a0d8c",
          "9024748391b440688032fe520cce7a7c",
          "98d2aa900bef4cbe8aead00dc5b138e5"
        ],
        "HasNestedGroups": false,
        "Left": 8519.33360938941,
        "Top": 1881.2173750413112,
        "Width": 1712.0,
        "Height": 752.0,
        "FontSize": 36.0,
        "InitialTop": 1954.2173750413112,
        "InitialHeight": 658.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "784c935f181b4ba59c07a150885bdc3c",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "30e3173ef64e4624a02de563fa2f34be",
          "42751d5f08a04bfb839777824700b075",
          "3df1cc9b37a64b9baf523d0792ff9547",
          "e2a8cdff201e4b549363517d280f3a92",
          "b6b1f20d94c042fdb9d579af7314fcf3",
          "50174dde687a4aafb49b9d42764be175",
          "5575d2a7186041bb94db4fb847e91c6f"
        ],
        "HasNestedGroups": false,
        "Left": 7183.0039920021936,
        "Top": 2914.1373857928725,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 2987.1373857928725,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "9df5583dea1d433dacef3613e4172708",
        "Title": "Aggregate information",
        "DescriptionText": "Combine situation infromation and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9fc2c365e31145ef8db8200b424077b4",
          "235be398ae1c428ca99d8a7cd4b418a3",
          "879b0ffb43ef49bba667ec4ce03cbde6"
        ],
        "HasNestedGroups": false,
        "Left": 10441.996656059509,
        "Top": 2807.7274076454896,
        "Width": 1183.0,
        "Height": 273.0,
        "FontSize": 36.0,
        "InitialTop": 2880.7274076454896,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "562ba9e634cc4a9e95e4618c0419257b",
        "Title": "Tolerance on Web or on Flange",
        "DescriptionText": "Note: Y axis of column means the beam is on the column's web, Z axis of column means the beam is on the column's flange. Remember to use a tolerance when comparing angles directly, the Filter.By... nodes use a tolerance of 0.0001 implicitly",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b6379c9d97da40e589ef5c84f9338c3f",
          "da5564f9c15c4442875c3c2f09316d54",
          "749f0f29a6a94c14b140033b40dec3f9",
          "6db082071e5c459c8b0aff6a9b751f60",
          "92c9e6d1bf7d43ffaf5351c8494146d7",
          "ef7371781256498db1d0b84701dbb54f",
          "fd4217ff4fec4315ada6c0147387df42",
          "fc12b9c932d9459d8dd93f4471768492",
          "45613fe6e5da476c98d9ccda81575aef",
          "dc0b61e5557a404d9f7a37ed4e8f5a75",
          "91b84a9c09a44c1a9d48a46dc0b6d782",
          "105aa88bc0084d2d9de2d1356716b38c",
          "165f0f6006cd48468d4cfe876d6d1208",
          "bd45c43566e0436e8a62a1b095f402e3",
          "c8578cbed37a454d99826736a7e45642",
          "1b6a094daa024b1ba13f63b48d37cb40",
          "8c7a001aaf354c95a59a4d44c50924d4",
          "694ec26afa8e43ce978fbfcfcb56b1cb",
          "0d4cfe13561c49f8844f8a7b54e287b3",
          "ee3d657afc2d4b5e91dee9ce75a17942",
          "83353eca767c4248ad473b2a9f5bfb91",
          "1da6f27fe4f54cf68b002bdb3298001e",
          "d5a120a881834f25b70365e1a777466c",
          "281114d8189a42f38d4abd085bfc48e8",
          "d439aa19d710478081846ec9a7d10922",
          "19eafd098f184294956680b1a1fe476f",
          "059548c882344eab9fae814146f4f21a",
          "0d7f79217d804bd79d6e75f407f90ca8"
        ],
        "HasNestedGroups": false,
        "Left": -4512.0497204013172,
        "Top": -1600.7106980181588,
        "Width": 3823.0,
        "Height": 1538.0,
        "FontSize": 36.0,
        "InitialTop": -1527.7106980181588,
        "InitialHeight": 1474.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5bb6580b9d10491f9f1f23d90c28c754",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2404215ffc2c4afa9614331a555b437e",
          "a1f4df2ff8434486a643c653fcf53787",
          "8807f05fe05d4763a174deb7ff8863e3",
          "852b8ef9499847458b72627ed032ffc3",
          "64f483c2eee341e283be12ba5a5a1f38",
          "4045f327d3ff49fc863220e089dbc6a8",
          "d4d4c057dfdc402ba5860eb50e71cd98",
          "2db682ccff114626ae85d8097145e5e3",
          "52fb5e7afd0e4151870f7c1da31c5ecb",
          "41fa4c61c9d14f6fbcaf9fb49f6f5fd1",
          "243236ac3d754c5eb5fad9c4d7aa8269",
          "0af6212e4f0946008bbd8cb5b42d06e1",
          "c77ac4f0ec5745bbb9464e92a0eaf409",
          "f15a99d8bb2d437eaf03dd422d7f2d5c",
          "6b764432d3744d1c988da469de411376",
          "e0f1b0139564417e811abe6982603e5d"
        ],
        "HasNestedGroups": false,
        "Left": 12812.275171917212,
        "Top": 986.69720361262694,
        "Width": 1900.0,
        "Height": 874.99999999999977,
        "FontSize": 36.0,
        "InitialTop": 1059.6972036126269,
        "InitialHeight": 694.99999999999977,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "4386c18e55d14220825262e4a1dbca43",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Shear plate;Clip angle).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6458.1518631270174,
        "Top": 661.41439318280572,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "506614825fda4465a46f0e053404340e"
      },
      {
        "Id": "f08b4e6c5c5e4a6e89e98785ebcc9ff2",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. B to C;Flange). Leave blank to place any connection types..",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1035.6202928381363,
        "Top": 872.08701582630692,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "90e9b33fd7384dc299f1335b0b89b0dd"
      }
    ],
    "X": 4520.5233702770247,
    "Y": 1415.4687683695333,
    "Zoom": 0.47735755110166583
  }
}