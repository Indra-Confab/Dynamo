{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places connections in beam to beam geometric situations. Works only on connection types with attached ranges of applicability.",
  "Name": "Beam to beam by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Name": "2.1. Main Beam Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Name": "2.2. Main Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "b3c95697e6434508865fdae8d3004ce9",
      "Name": "3.1. Secondary Beam Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "58fe1afbbe604fb2b32af81f27d247b3",
      "Name": "3.2. Secondary Beam Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "1a354d3aadb941fb9fdd9ccb8b76dee7",
      "Name": "4.1. Angle between beams (degrees, 0-90) from",
      "Type": "number",
      "Value": "90",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "81a7a51aff0b462ab0295d1b64fcea29",
      "Name": "4.2. Angle between beams (degrees, 0-90) to",
      "Type": "number",
      "Value": "90",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "d4aa9022c65b43829a11aebf1c816525",
      "Name": "5. Library file path",
      "Type": "string",
      "Value": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.2WB.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "72fe204d3a844a1097b09048ecf1f7df",
      "Name": "6. Connection family to place",
      "Type": "string",
      "Value": "Clip angle",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
      "Name": "7. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "df79766745b34d1e9cd497f983e0cbf0",
      "Name": "8. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00365d5f6f75422f8c6283350f8b70c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd2d123c3d94abca7e9992dcda22716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "374e1ff6640649faa07f47bcccb7bd7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b23a70c2bc1c4e5cb776ee65c63f7b46",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a1278f73f11427cb6e848169c233eda",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42b5e54d628b45e4bb1d812a1bdd3400",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "12abfb80ffa74a4c80e36ca5b6059b8c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "488a86843f5540f79ac3761cf6af27cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
      "Inputs": [
        {
          "Id": "35fe42d556bb4d2fa87f919abc4a898e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae7be74142a47fba54135b055a34926",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f96b73bb21c445a19f87f5609e3e2f67",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00992a65f91e4c27ad1f48c9992fbffc",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2edc041e63044911ac298aa3b6e87f56",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d153e5c52e14e3f87bc968a49379386",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n\"X\";",
      "Id": "90b8f7ad4af7496a960da48abc152285",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6210ffcc0f814da9a0095e5fe9736b41",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a3a5c5919cc42278ff49e5fb36da936",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3357bbf9a4954b30b3362e500a8292a1",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "41563a8003714c4aa18135c3678b78ff",
      "Inputs": [
        {
          "Id": "03362dd0d0a845ec825c9f233c9a3357",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "956ce6b2f3a44fd1add03d79f6a757e5",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "9d1cec5ec9ad4df5b4536a3603d17fab",
      "Inputs": [
        {
          "Id": "4795a0d54f9048c29485d60bcc31aed7",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9666db81c3444e0da1ede81e58862eae",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d31663f1eb74331bab5ebb304405ab4",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ad960e167924ca7891c3170a99ca6d5",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d956e1915ce4526aa0bfc19c363ae90",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "db13cb72be7e4d458bc9a1e8e171c01c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65d77ae3e25247f2a91982d24ca4e5e5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b3c95697e6434508865fdae8d3004ce9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f66ee711f33948519bc9af2deeda5732",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "58fe1afbbe604fb2b32af81f27d247b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28e0124a23fe4c5bbd0611ed2b278a25",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 90.0,
      "Id": "1a354d3aadb941fb9fdd9ccb8b76dee7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2d016498d6e455d9465f12fbfa6d200",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 90.0,
      "Id": "81a7a51aff0b462ab0295d1b64fcea29",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6fbe7ea75e054bec95ab95a792baa957",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenAxes@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,string,string,double,double",
      "Id": "088b89d25d914ad7b3fcece05185975f",
      "Inputs": [
        {
          "Id": "73bd6794068e418cb98942202586e525",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79647c5d64e14d228085d34bbfba67a8",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c70e785d67694f7ab41ea9e94807d0a6",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3aa92835871840f991ceede2bcc1ef5d",
          "Name": "axisFirst",
          "Description": "The first structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48895b281e0b4056b47b91bd69e6b8a3",
          "Name": "axisSecond",
          "Description": "The second structure data element's reference axis (can be X, Y or Z specified as a case insensitive string).\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f4a0e3625784c7d83a9285b1409d697",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d74e4f6580ca4baebd11a64acc5187d5",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83b27f37132d4a56a4d418fcb7df1efb",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b452b086df8f420fab5fbaef4fe3feed",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. N, M, the range, and the axes are specified by the user.\n\nFilter.ByAngleBetweenAxes (node: ConnectionNode, indexFirst: int, indexSecond: int, axisFirst: string, axisSecond: string, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "76b289957dbb49ffbf62bc8588d5acac",
      "Inputs": [
        {
          "Id": "c6a0b2a8c2714ca39e493c0539c4bee2",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e040668a9ff3495aad4f93e3627e3352",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a465565e92b4c08924d3986866c8a51",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c52cb3af62f4487ab03ca30d5038a083",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d0d892cf1e5404381f6544d9ddaa0ad",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n\"Body\";",
      "Id": "53c0be61116842f2911654f7c79b6bfd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d59b350221d142d38e2507eb674da199",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1216aefc2684a2e9beb907af234c437",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.2WB.rvt",
      "InputValue": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.2WB.rvt",
      "NodeType": "ExtensionNode",
      "Id": "d4aa9022c65b43829a11aebf1c816525",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "983c76b632f045ae83f0201e7040ba7f",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Clip angle",
      "Id": "72fe204d3a844a1097b09048ecf1f7df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "affa3f451d6d4d86b8021daee4224c3c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "81761ea300ba405aad83f5b8fa2e9f5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "004601c42df64065b1aa7f9a1d0efda7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "8a92947807364762874c012b8432daa7",
      "Inputs": [
        {
          "Id": "9260557c56aa427a837ff8328d6f0bc0",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6828fd3147794b02bffb36da46bd75d5",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33cc9aeaaa6d4d459fbba81765dc3769",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "91c70c5dda0243e7b4e8f92de39246b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "15748548c9864e13a26442840c368853",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "3ce9b8b19a9b469f905db02517f9d17f",
      "Inputs": [
        {
          "Id": "cbdbaa73a2514f49b02c066fd978888e",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72579d76eeee4f98b51fbfccd1fc5f5f",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd680d5226f7433d9a08c7599ab6d099",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "71ca4d37985a4d5181639a072b928286",
      "Inputs": [
        {
          "Id": "8243cd424878419e9bb4c433d6461700",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77759a599d42424bb0cc01233c3cdcdc",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eae992000a544a4a9022c5a881e42f98",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "1fc1ba03bc174352898611929e5b7761",
      "Inputs": [
        {
          "Id": "e7a87c70fe5148c59793dad56cad1085",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4d2dcc387e94a8785ae8dd899ca4ac0",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "44f717fef6ef4c4aa2310468f1d83346",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "4e121fc4004d4dfeaed4d7cb1c40d24e",
      "Inputs": [
        {
          "Id": "7341144e178140008ce175a1cc90483d",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcc785c95b1543ccba55ef006648a317",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "16a4ae907f6040939207eb105a030e63",
      "Inputs": [
        {
          "Id": "3606df721d804995b5e8a33e3def1e73",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccc5cee4da124b1e9d673ebda520358c",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "369fdb7a392b46fb804ef530bfd503ca",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03a292bf41c44239b33ba72d52a4b125",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "eb888b92c99743fcbb24631dd387cf2f",
      "Inputs": [
        {
          "Id": "9ebb1f33c3e64f33b7f31910a7ddae8e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82bc2de00c73425fbeb2ffb5ea77dd60",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00f344350f954a179085a39b3cfb98c4",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32b6878c25f241ff9acb08141dc79cb6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "352392610eef4466af95cbb801d891d8",
      "Inputs": [
        {
          "Id": "d8bfbf10b7c8424b9fac8c848d018c12",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1399236c209846da966f0b526b1d246e",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da2a0eda810f434ebc0d145fb9bf6aa7",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85c3cea6f14c4645b97378af35150373",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "de9e20a0d72642f6948bb159f1bc7377",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb28ecf59dd544ba8096108c244c66ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "783f910f186b4dd1a7e05475f1ff7d88",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe85924cdb9341319b72a7a3dd5c948c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "b224c11463074a8f84a2b5448d51cacd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b67eb3a5c57044d08b88974c90e7ddc8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "abd49926613647e28ed35eef6d8e5166",
      "Inputs": [
        {
          "Id": "187f3e7089284aa69d224d4bfad1d2e3",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9514d03072542c6ac4d84b29213d432",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09cadf62a3ad497fa250c0445722c856",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "616972644e294dddab25f53c2d889cd9",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f0d13bb5ef2d47a9b119a24296180e40",
      "Inputs": [
        {
          "Id": "faf19b56ce374c7e8706123140d4e69e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee5c79be0a6845b5991c45ca41bcbe5e",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15d55b6625c34e53ae3d163a72bab25d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbedae5d7e814564b28044712b8d21c3",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "8a9e83016d1a47379a7215ac64a279a4",
      "Inputs": [
        {
          "Id": "dd292dda75c24b01a212ebcd27758da0",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b8ef2042e45400582a83d1e6f03c6d5",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa4d70959f494cfdade0ec4670e60e76",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d68e6933e3254a2eb3c5ab0ce3ad11fe",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "e20d82ca66d348fc946d9333a6ac10eb",
      "Inputs": [
        {
          "Id": "b119f22fc08d4febbd2871349b16a6e1",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e39216c5df64fcf850dffb305e46755",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac2a6c31013544ca8b3b0c59bf65b363",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "262a66bd577648cab4d48726f4b3b690",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "a7734101dcd84f5ba62334e0edc03b7d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a16097bc2654eeebae443b5ed0ccbee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e3b26e6a784047d6aff33fd85a7d6192",
      "Inputs": [
        {
          "Id": "4e808942375249818afb0d8f72634ae6",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f86ae3748007431087e0a2c775a98862",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab8671ba22c241598a4f14670b7c8b00",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fde792d3ad2d4e7baa3d8bfa617cfca1",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "1fe67851ffbb4a079795bff6a90ed319",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "acc5268d43f4482abfda6705e7a3daa7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "e87d7cc83f3344b1b6f79db6de5c1ff2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3d3dd63e27248fe9289704ea69186e1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "4776ded489f3423ca4ab3b2e47c916af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee632e59f2224cb6a86174ec8df0cbdc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "e2c179b37dd048cf8e145790b98e093c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f046b0d7c08e40fda23047c7d9a6e9aa",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "7fb8e8e7797e4c8ea58405566c689f1b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e892284b20524d05ac2b5a1fdf6abcac",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, from {applicable_number} applicable",
      "Id": "b93a44df7d78450eb26ec38df963e5ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5ec5c3d5e7c347f3ae4964785f839f9c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "07d5b41cb10f4d1287a6b4f949a80f2f",
      "Inputs": [
        {
          "Id": "d8aeaadb26624cd7bd0ffbe2ac707da5",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e1f0202d36a4fb8a34990f78511a637",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "575c5e453e48491ca4849b3b94824018",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "816894bc3aae4a7bb0d9c1a8c1539e19",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6773675f29024074b6c7dd0276324186",
      "Inputs": [
        {
          "Id": "e2fc6d3d80c34171a0c8694f20956430",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fbf7723635244339684e4989501af0d",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "fa9e126e6b604ec0868b4f83cec7ca36",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e0fba2e937d4a08bf8f7e7f97090cc9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "7307549c111a48bb933541f1410524d2",
      "Inputs": [
        {
          "Id": "941d1b369d82419e945c713c0989c2c9",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caa246d10e054cf9a3fc049da93b5817",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aea129e877d84944b5bc93add3f36aa5",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "adcd5aca8efc43cb8f198c5049189c01",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f620fb1fe2041d88167996f7f420a98",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c2e01f29f1f441abbf4883ae6efcc2be",
      "Inputs": [
        {
          "Id": "6bf73b0241bf41b59e70282678d71128",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f72c5cf556349e19af952862d645344",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41342d6221a34c9289c040872ba58e8f",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f442c2e083f24b9784c828e62564cf68",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9eac2467414c416e949276361d8073c1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b39ac2ba3cad4761a51afe5992f2c0f5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f13acedcaa93452eaa5511159e827cec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "94b5c9ddcc3b453aa71aa87cba3d8dea",
      "Inputs": [
        {
          "Id": "1a4a00b24589460cadffa49954a4c0df",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf8eea0542404bdfa0279287b2de1eb2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed60dabd9980412e942723925b431333",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0ca716511615489a94498944fa33025f",
      "Inputs": [
        {
          "Id": "b4ba48d41b084aefaef22ec1656d92f8",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10f53b4fd6ea473ba16bb4a1f67a392a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "56dc77dc760b4654941114614e1a1a9e",
      "Inputs": [
        {
          "Id": "9420a650e03b4c338e300b2cfa07531f",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6443aa3d38c64403a94655133b74967c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "fb52f919084343e78739ebcb2f929bdb",
      "Inputs": [
        {
          "Id": "873f0d411c3e4fcba23e4a60705fbdf8",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09c733e99e24497a9d5d035ab95cd913",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff4f1d049fff4bb184afe92a43d4c058",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "874243ae20314320a4be3a056459108a",
      "Inputs": [
        {
          "Id": "e91bdee91703429b9988ae1a258a1a6b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "792176cbeae74359a57aa7c45373cfe8",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b65bf3fdd104773a7077d4e94ac26b5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7603807ecae2403b919bcea0308d5e61",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "b8702b8cbbb3479aa85880aa02d60c9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d991fb07fef486bbc333631cdc94b1f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "4c3e5449548c43d5969f569cfbfdef61",
      "Inputs": [
        {
          "Id": "f3a45e5f16c74008962aa0e4229c5d04",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "558f9279578b4f76898e86fb0da740ed",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "75f2eed080404f728ce905cdd642fa03",
      "Inputs": [
        {
          "Id": "6dd92879669c4d3eb0200a895493b9d7",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "371a45db50b8415ba5561374ec8bc5d4",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca30ff53d84c46778e2ea142e9ee7a8e",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d50dda3cd5034b60b54c75e08563f485",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f335c2c14bed4874b36a15cdbdcae725",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "e3bbf2e4ee93414fa45f87529c7a31af",
      "Inputs": [
        {
          "Id": "a860925db0c242eabac911f5ce7e7ade",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a09788801aa9465fa88268d7a23c4cc7",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1680185e68c54ebe9b2794d69b547710",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d31210d478434c8d928a8fbf0a696c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "df79766745b34d1e9cd497f983e0cbf0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "daae3d5ef27c42e28299f9b22c6d48ac",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "93b5b4f65e7743f09b97eaea66310a4f",
      "Inputs": [
        {
          "Id": "d88d2c7964bb4855b1678adffe1a4cbc",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32760aa9a36c486aa0e34ba9f31b3c85",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af3f86d9fafb41d2ba4f1340183924d3",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "70db52313bda4962a79fd557505303fd",
      "Inputs": [
        {
          "Id": "02073fc4bc6c440e9ee7a88342953fb2",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac2ed70c911e4a888969fbcdec17e938",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "42078771f99245f4b9694f5829200947",
      "Inputs": [
        {
          "Id": "ed1366bdad024e3594cb27a03534680e",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a9181038b344107baddba2174353dc2",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d8ab4e208dc4b72a1ea8e97e8c91e46",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "1fcddca9e96d4050906d519aaefa323b",
      "Inputs": [
        {
          "Id": "ccb93bdec3cf4fa7b73b38baea413348",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34869b15612c447a98b663517aed97ae",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c14d7ac1125a4281a94c855dc3158fa1",
      "Inputs": [
        {
          "Id": "76ab9dffdc1345f8bfe9e0da7af6a2ee",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb8fefafceb341cd9f83874813d3df30",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "37b545a9ee774de58907177df6152b31",
      "Inputs": [
        {
          "Id": "7a9d0ccb6c014e8782fda336a8bb69e9",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5327164ee7d45ec8ed10bad8a583abd",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7527a5a4d9c14ef69abb152834d83cc9",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b36212e1d6c84f47bfec689f29ac1cd1",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40ba271de00943119613b05b91585d5e",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13a916fd942d428eb09d4ab5ebf86f5d",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2e4dfbde999a46cbb6af39bcc7b3a35f",
      "Inputs": [
        {
          "Id": "e7337ea3fbce4301a93e50dac98db305",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2feb31af69fe4c3684b7bf0f053047d3",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "314b0273b8504fd6a964c25a83dc5ccc",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "86282165c6044e399c09b185849d7915",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d97b671575f1421b8b5f3f2d309cacb3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "e8e843d8e4534dbdb6458fa7e2272380",
      "Inputs": [
        {
          "Id": "2bab943a0d6a4776b04d6bd41e225b62",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51c0209c1ed94c5ca09d2bb26a4af947",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "f1426c89fe474451adfa39f9a92c1fac",
      "Inputs": [
        {
          "Id": "ed465ad5dc6746a68f4b936f423dae4d",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3760a7f7fce540218eaf3a2d24c63f7a",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "9b465ee88745413ca57aa3d73dc2198f",
      "Inputs": [
        {
          "Id": "340fdc7cb581453d985bfa1eef4dc044",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e222ba73f1a34987a46d33c1692b306f",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "81a02b4bc3054900a6f0f8c83643e3c6",
      "Inputs": [
        {
          "Id": "6fa90f37e3254bc0be0a43b5a5bf7195",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5cb9de51547140d6a91af699513e7a97",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f3044798ea041e282448c9b215c387d",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "252a30e243fe49bc8822cc7ef8db32e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ae9a14487594c4f8404b9922ed77514",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c1e49591e7cf496a91a33574b475e636",
      "Inputs": [
        {
          "Id": "13bede18629e4b8e879d26c5b868b2ca",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "18f8e3c49a89440895e354511c93d719",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee8dbee0410b4fc3a40df04bba6d0dfb",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "9e1937daf02242b2b02794afb34b5d00",
      "Inputs": [
        {
          "Id": "7b971fc640d74c8db7839f7ee1367956",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a7b73fc512242f4bdd5e26c11ac275a",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36a68310058d4a7b8a9f0e62444afe3d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a112056b684344f3b8286a412f20f8b4",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "e197209a332f4b9ba3a2658eca7bad91",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ef2edbb0f0c54b9c9d852ea87379bbcd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "47afe6a6f75b463daa9097f7e8b9ed03",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df9c617ec7a84a1291ea89fc47fccc55",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "523e6ba2108445968898264884bbf068",
      "Inputs": [
        {
          "Id": "0f0ef2c014c04329ac6027456ddc8dca",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de91496d30c64b379ca8afa681496b38",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03ceb55b3b384160bb7ddc5bf6e31c54",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4a0c6be7bd847519ae8a923f01e5a2d",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "7c3a83dace094e43bd8c168ed77fbacb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "028d4dd59bf940d1bdc79d71afcde784",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fe4d73468a1942108b1f3961ddfe6d66",
      "Inputs": [
        {
          "Id": "9e96666eb66f4fe3b48e0bd9fb51a241",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd3a18ad0fb24ceb897a3ca272b13a89",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3544ddab53214fdeaacce34c43f01836",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "b221d16f59de413abbbe7270f72507ca",
      "Inputs": [
        {
          "Id": "0dd04772a12c4d369e684b04325d2c4c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "152082cb9919466c8f403470b1e977fd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "3adbc9184e5b46ca8026dbdae9583968",
      "Inputs": [
        {
          "Id": "e1913a81af114119a722c90cac0e8c5c",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed63d3ed06ab4d0ab0584a5a730a4839",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad6fae91e1514c4f9c852d7322bfd74b",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "ee990307f145450faf4e05adbe462bc7",
      "Inputs": [
        {
          "Id": "941c02c46a944fbdb5d31a9a9455452b",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92ac79896bd4418eb3fd7517e22b800a",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edc87a4be4484433971c18326bfbcaef",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "9e618f6bca67433b8f4438b186d788e2",
      "Inputs": [
        {
          "Id": "005825a8c44d4ee689750a366978114f",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92081d0c7d884a97b7cbfc57b52dd325",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb9efa931ccf49b199eee8add57f3977",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae6a6c5478064203b757ce83bc0b4291",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "20c33458b9184e9fa4ec7025ae3646f7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f197d2e8d85410aa931f05d0424d3a8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "0de6122c62c1415a88cd6d6d50ebbed1",
      "Inputs": [
        {
          "Id": "d91886cc442846848aa5c6eed23a61e0",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "433f944fadcb4a5b9d955dd1a8bacb19",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7eaea43671d45c4a8e38fcd57ee993b",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55c726aa13aa40eea111436cbadd5a45",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "c282b9b8afdc493190f61ab674160df9",
      "Inputs": [
        {
          "Id": "7cb88790107c4ca6b31275b25752b405",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "16b75a45e43246f7ad8bfffdb275dcde",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c0c33ca0ae94bd3b8e79b6fc34f8d8a",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "4dac41b20b9d40be9c7483161cb209c6",
      "Inputs": [
        {
          "Id": "347ceb54699a44539a3608e0a8477d4f",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d917e345826c44dfb67a0b98ee79eb2b",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d32422ed6fc4ee39c0ded758d16dedd",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "51a2392cdd184c0f90425e346e2cb91e",
      "Inputs": [
        {
          "Id": "e468b8c5b89141749aad12d6293306d5",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94aa2421adab4282a610a53aa04036ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "1669a98364d04a1097ebbf48e9f101c7",
      "Inputs": [
        {
          "Id": "517e29c6e7e04197aa2c60d83d3920cd",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71150c54dffa49199ab6d7176cbc7c52",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4193e32cd05e4514ab481842118422d1",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "8fcf0136bdc149d8bdc888d4a3640fcb",
      "Inputs": [
        {
          "Id": "db6da0d58834493e9d1a3cdeeef9326d",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "304ce76f4edd4c0a8a76044d742788d2",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7c41d82f5444209a23c220a683b714a",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "00b309ddcd3e41069683ca1e90881274",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06758d24133843f9a42278cc3f419087",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5c8e6d83ec344f81ac5613ad05ced01d",
      "Inputs": [
        {
          "Id": "74d62a1271224915a65d9df7d5bdff52",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf97277ad40641f8b581dbd2691bbc13",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c45007a0b47f4e3cb32ed203338fa66b",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b175d7d64921460b90e17ee33c34584d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "5414d88bc2d54c34b45e4aa078266246",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "acaf94e8d4c1428297ab7f0e6ff61a9a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "e0de922cc46e4601962144d205bd754e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4f0e1566011d49d08f504d3648b98d9d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "a03dfbf47de34e5fba7c7c11ec9e040d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "795c44bb6f15409aa50eee15d751d9b0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "cc01055f6fd441678c2fc9c86e4adf3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b8f297e031094feb8f991f6487e7bebd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "90ec98dfd7f44e28be44e4d79317afb7",
      "Inputs": [
        {
          "Id": "22904946c42f453fbdce5b91a6f62ae1",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a767ba80738494fbf05a13148ba04bb",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49a9c009738842c5975de0b53bd6e350",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "314bb463e0ed486a9b48859d6382d06d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bfee5cb4f88247e28b6a2b772f995353",
      "Inputs": [
        {
          "Id": "b8749ab414504e609ab88cdc2a880e53",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e555f0da256645e08fe3c3471126dc9d",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3da21670b743414c92004b8e9ef07e7c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7340432273dd410184feb9473f042e23",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e58ce67838934ac3a323e0a38b65903e",
      "Inputs": [
        {
          "Id": "eef23bc434ff4dea89ed84e151d17068",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59d35eb75962486eafff4cc4324d9173",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9996fa0ed57483ba29a98c8fe6da80c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36deffc188394fb1a4379c035c53167d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "0c93b7933dc14f398c9d900c0b11c647",
      "Inputs": [
        {
          "Id": "4e754bcf870c4f0c8038a07f4be73f2e",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6df2c9c9eab44034ab7a8b0758ed21f8",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83c832249d6b48cc9dc09b8318fc9450",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "5fd8e0051ebb44e289d8c68b948180db",
      "Inputs": [
        {
          "Id": "eb25e519e55c4674a1a277b962a2e835",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3dc9ce12cdfa493bb0e0df86e4782fbc",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf7a048d93ae44329f0ba7b7bd25953e",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "310bb36ae7634899b0c3399ce9f116f6",
      "Inputs": [
        {
          "Id": "bcff0db74c0748c99a8a4b7c6a1aded7",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5075d94002214a9ea145eaa8081cd9cc",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00f80b52ac3146e9879ed4c4c7db6999",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "909f3b0acfff43bb81a7ae1d95dfa879",
      "Inputs": [
        {
          "Id": "bff5818570b64baba2e2471e36259aad",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a7ffb261d634d18a19931c93e3b63a4",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "9901f06a29bf4a6e9938e7984168ac4b",
      "Inputs": [
        {
          "Id": "bf3c23b18c184bc4a3f2b39337db88c1",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e38bf6d7b004ddab944ecc98070336a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "c6a0b2a8c2714ca39e493c0539c4bee2",
      "Id": "93e86e32f1bd4186bad28b47c53b26d2",
      "IsHidden": "False"
    },
    {
      "Start": "00365d5f6f75422f8c6283350f8b70c6",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "90a0a503e9814ac0bc9a4134e5988c48",
      "IsHidden": "False"
    },
    {
      "Start": "1bd2d123c3d94abca7e9992dcda22716",
      "End": "6ae7be74142a47fba54135b055a34926",
      "Id": "3b0c384d6a3946f38b2db725ea0f9d3c",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "f96b73bb21c445a19f87f5609e3e2f67",
      "Id": "70fd202a19ff4348933af5eee5ff6366",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "00992a65f91e4c27ad1f48c9992fbffc",
      "Id": "6ba4f1548de545e79356b840cd5ff72a",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "73bd6794068e418cb98942202586e525",
      "Id": "8332ac2ef51e4582846d5212c2c798a7",
      "IsHidden": "False"
    },
    {
      "Start": "374e1ff6640649faa07f47bcccb7bd7f",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c052f00c89dc4165bbd99e33b7dbfb30",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "873f0d411c3e4fcba23e4a60705fbdf8",
      "Id": "2b2f5d2127af4175ab4526d30de555da",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "eb9f6beadc4f4d60901712fb5b246bc9",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "e5f1d801fbcf40d882f2b21972a4f09b",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "a5327164ee7d45ec8ed10bad8a583abd",
      "Id": "cd34ad6f46f54574af492439f87b2dd8",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "e7337ea3fbce4301a93e50dac98db305",
      "Id": "2b3440a9d87e4d40a9a2d4d73608a00b",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "4829426565a8404888a989bc69af587b",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "17061815ca91449883befa22d7ef3c73",
      "IsHidden": "False"
    },
    {
      "Start": "8a1278f73f11427cb6e848169c233eda",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "6bf73b0241bf41b59e70282678d71128",
      "Id": "02b157f4081f4c38a9b300e57e4540af",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "bcff0db74c0748c99a8a4b7c6a1aded7",
      "Id": "dcd66febaccc4e5d96ddcb087b334911",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "da2a0eda810f434ebc0d145fb9bf6aa7",
      "Id": "898139b3cbb84ab792fe59c821ddea9e",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "00f344350f954a179085a39b3cfb98c4",
      "Id": "847e020970424143a3d3a0e91fe34007",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "369fdb7a392b46fb804ef530bfd503ca",
      "Id": "ca6cbc6660d44fe2af0d8ffb69abf9f0",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "e7a87c70fe5148c59793dad56cad1085",
      "Id": "4182e559623b4aff858b0fdabd3c3e15",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "15d55b6625c34e53ae3d163a72bab25d",
      "Id": "c3908f31583e45008a85eeb338a8b854",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "d8aeaadb26624cd7bd0ffbe2ac707da5",
      "Id": "33b8820781244f2cbe2d3ee0f7eb6f66",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "c4d2dcc387e94a8785ae8dd899ca4ac0",
      "Id": "07f3d16e7bbd4c069bd119d18fd0114a",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "09cadf62a3ad497fa250c0445722c856",
      "Id": "713fbd268eaa4504a99d7243b4f0228c",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "e2fc6d3d80c34171a0c8694f20956430",
      "Id": "17b082b5db5c4ffa8cc3f9898ff4ae07",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "1b688ef88f2849cea8586b891ae4fbce",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "aa4d70959f494cfdade0ec4670e60e76",
      "Id": "905cd00264394cb9870e7e91d60ab025",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "42b5e54d628b45e4bb1d812a1bdd3400",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "f3a45e5f16c74008962aa0e4229c5d04",
      "Id": "30d303cc4898409dab9a7a28b829e8f2",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "a860925db0c242eabac911f5ce7e7ade",
      "Id": "96ec6bdf156845db9bb2ccb179acd326",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "ccb93bdec3cf4fa7b73b38baea413348",
      "Id": "0625bbd80e1e467188d45103d9fd471e",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "bf3c23b18c184bc4a3f2b39337db88c1",
      "Id": "c0df30f8716b4e9982b6b53ccacbf4d6",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "2edc041e63044911ac298aa3b6e87f56",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "716dbdfff7b34f21a2d70e7df269914b",
      "IsHidden": "False"
    },
    {
      "Start": "6210ffcc0f814da9a0095e5fe9736b41",
      "End": "79647c5d64e14d228085d34bbfba67a8",
      "Id": "2bb98103e2a2469c85b8d857631638dd",
      "IsHidden": "False"
    },
    {
      "Start": "5a3a5c5919cc42278ff49e5fb36da936",
      "End": "c70e785d67694f7ab41ea9e94807d0a6",
      "Id": "fe01c3ebfc37461393a9aa85b7f994f3",
      "IsHidden": "False"
    },
    {
      "Start": "3357bbf9a4954b30b3362e500a8292a1",
      "End": "3aa92835871840f991ceede2bcc1ef5d",
      "Id": "223f866f37474deb9407e98afb50ba74",
      "IsHidden": "False"
    },
    {
      "Start": "3357bbf9a4954b30b3362e500a8292a1",
      "End": "48895b281e0b4056b47b91bd69e6b8a3",
      "Id": "35ffd564f53d401eb4f891502e70cf84",
      "IsHidden": "False"
    },
    {
      "Start": "956ce6b2f3a44fd1add03d79f6a757e5",
      "End": "9260557c56aa427a837ff8328d6f0bc0",
      "Id": "38c3bb0d5beb407fa6554487dc0f5bad",
      "IsHidden": "False"
    },
    {
      "Start": "2ad960e167924ca7891c3170a99ca6d5",
      "End": "35fe42d556bb4d2fa87f919abc4a898e",
      "Id": "7830a00dd05a4d35b00861052c3650a5",
      "IsHidden": "False"
    },
    {
      "Start": "65d77ae3e25247f2a91982d24ca4e5e5",
      "End": "9666db81c3444e0da1ede81e58862eae",
      "Id": "c3eb6ece86d84a4db669cde35e5dba7e",
      "IsHidden": "False"
    },
    {
      "Start": "f66ee711f33948519bc9af2deeda5732",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "3ee81dfc65fb4aacae1331737a8f5827",
      "IsHidden": "False"
    },
    {
      "Start": "28e0124a23fe4c5bbd0611ed2b278a25",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "9f138766ae194e95b6817db66cc608c6",
      "IsHidden": "False"
    },
    {
      "Start": "b2d016498d6e455d9465f12fbfa6d200",
      "End": "6f4a0e3625784c7d83a9285b1409d697",
      "Id": "faee602ac58c48b6b126b2532a536142",
      "IsHidden": "False"
    },
    {
      "Start": "6fbe7ea75e054bec95ab95a792baa957",
      "End": "d74e4f6580ca4baebd11a64acc5187d5",
      "Id": "12e083a93f934cb582d30e0b5a7c17ee",
      "IsHidden": "False"
    },
    {
      "Start": "83b27f37132d4a56a4d418fcb7df1efb",
      "End": "03362dd0d0a845ec825c9f233c9a3357",
      "Id": "4354f0068e794c9f8fae47d9b2f1f4f6",
      "IsHidden": "False"
    },
    {
      "Start": "c52cb3af62f4487ab03ca30d5038a083",
      "End": "4795a0d54f9048c29485d60bcc31aed7",
      "Id": "4197d3b963924fd4b9b1f38ea5883956",
      "IsHidden": "False"
    },
    {
      "Start": "d59b350221d142d38e2507eb674da199",
      "End": "e040668a9ff3495aad4f93e3627e3352",
      "Id": "1bd48e9759d744ea84fa3f8073cad97e",
      "IsHidden": "False"
    },
    {
      "Start": "c1216aefc2684a2e9beb907af234c437",
      "End": "1a465565e92b4c08924d3986866c8a51",
      "Id": "eb34447721c849b6a63adb260fe36205",
      "IsHidden": "False"
    },
    {
      "Start": "983c76b632f045ae83f0201e7040ba7f",
      "End": "77759a599d42424bb0cc01233c3cdcdc",
      "Id": "9f8f0f09828a446db3ed30c9499afa23",
      "IsHidden": "False"
    },
    {
      "Start": "affa3f451d6d4d86b8021daee4224c3c",
      "End": "ed1366bdad024e3594cb27a03534680e",
      "Id": "bf2dce657854442bb33570c220952a7e",
      "IsHidden": "False"
    },
    {
      "Start": "004601c42df64065b1aa7f9a1d0efda7",
      "End": "72579d76eeee4f98b51fbfccd1fc5f5f",
      "Id": "95ba0d45ca9640c7b4726e7003a1df6f",
      "IsHidden": "False"
    },
    {
      "Start": "33cc9aeaaa6d4d459fbba81765dc3769",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "64761318efe64cd08aef40d91751a856",
      "IsHidden": "False"
    },
    {
      "Start": "33cc9aeaaa6d4d459fbba81765dc3769",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "ffe3d8a3f8854e8ab5cc1c153431c2bc",
      "IsHidden": "False"
    },
    {
      "Start": "15748548c9864e13a26442840c368853",
      "End": "6828fd3147794b02bffb36da46bd75d5",
      "Id": "139d0137d7dd456dbc23cb6ecb9a7020",
      "IsHidden": "False"
    },
    {
      "Start": "bd680d5226f7433d9a08c7599ab6d099",
      "End": "12abfb80ffa74a4c80e36ca5b6059b8c",
      "Id": "4c41fb4cef2b4b278d87e70f3d34ead9",
      "IsHidden": "False"
    },
    {
      "Start": "eae992000a544a4a9022c5a881e42f98",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "52a5ef4200754895a9253f3179514a83",
      "IsHidden": "False"
    },
    {
      "Start": "44f717fef6ef4c4aa2310468f1d83346",
      "End": "7341144e178140008ce175a1cc90483d",
      "Id": "ec2ba4ed744b462785bc8b2bf9e97d96",
      "IsHidden": "False"
    },
    {
      "Start": "dcc785c95b1543ccba55ef006648a317",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "560ca6e02da14801b9f91715bac4d864",
      "IsHidden": "False"
    },
    {
      "Start": "03a292bf41c44239b33ba72d52a4b125",
      "End": "e91bdee91703429b9988ae1a258a1a6b",
      "Id": "7e1e4fbaa2494eb6b968da3337eec19d",
      "IsHidden": "False"
    },
    {
      "Start": "32b6878c25f241ff9acb08141dc79cb6",
      "End": "d8bfbf10b7c8424b9fac8c848d018c12",
      "Id": "96330d94c73b4129bb7d1eaaaf243112",
      "IsHidden": "False"
    },
    {
      "Start": "85c3cea6f14c4645b97378af35150373",
      "End": "575c5e453e48491ca4849b3b94824018",
      "Id": "52c17ee2e8094d508ae9151cb8d88d40",
      "IsHidden": "False"
    },
    {
      "Start": "bb28ecf59dd544ba8096108c244c66ed",
      "End": "ccc5cee4da124b1e9d673ebda520358c",
      "Id": "0b5a964125f6478ea0ddbd82e875c68a",
      "IsHidden": "False"
    },
    {
      "Start": "fe85924cdb9341319b72a7a3dd5c948c",
      "End": "82bc2de00c73425fbeb2ffb5ea77dd60",
      "Id": "7c419594735242cea11cbb29eaa7cdcb",
      "IsHidden": "False"
    },
    {
      "Start": "b67eb3a5c57044d08b88974c90e7ddc8",
      "End": "1399236c209846da966f0b526b1d246e",
      "Id": "6919a4dfd4544a68a665ec8a797e52df",
      "IsHidden": "False"
    },
    {
      "Start": "616972644e294dddab25f53c2d889cd9",
      "End": "ab8671ba22c241598a4f14670b7c8b00",
      "Id": "36005e9b5566469faebcc58d60277f05",
      "IsHidden": "False"
    },
    {
      "Start": "cbedae5d7e814564b28044712b8d21c3",
      "End": "dd292dda75c24b01a212ebcd27758da0",
      "Id": "0565d3842a6b4877a5597b7fb4c296ba",
      "IsHidden": "False"
    },
    {
      "Start": "d68e6933e3254a2eb3c5ab0ce3ad11fe",
      "End": "187f3e7089284aa69d224d4bfad1d2e3",
      "Id": "c428460df8ae4152909526dc3875cc6c",
      "IsHidden": "False"
    },
    {
      "Start": "262a66bd577648cab4d48726f4b3b690",
      "End": "4e808942375249818afb0d8f72634ae6",
      "Id": "72d7674c9a8f4d71816ec92a9995a84a",
      "IsHidden": "False"
    },
    {
      "Start": "6a16097bc2654eeebae443b5ed0ccbee",
      "End": "b119f22fc08d4febbd2871349b16a6e1",
      "Id": "b4e0b1f05fb24a76ad6abe4776dd47b8",
      "IsHidden": "False"
    },
    {
      "Start": "fde792d3ad2d4e7baa3d8bfa617cfca1",
      "End": "cf97277ad40641f8b581dbd2691bbc13",
      "Id": "d8f9cbc8d3194dcc96f415417d5a7ff9",
      "IsHidden": "False"
    },
    {
      "Start": "acc5268d43f4482abfda6705e7a3daa7",
      "End": "f86ae3748007431087e0a2c775a98862",
      "Id": "fc87f53a3a404055b39ca6f70c231646",
      "IsHidden": "False"
    },
    {
      "Start": "f3d3dd63e27248fe9289704ea69186e1",
      "End": "3606df721d804995b5e8a33e3def1e73",
      "Id": "4a1af41f75ed446691ea7ec5a02dd774",
      "IsHidden": "False"
    },
    {
      "Start": "ee632e59f2224cb6a86174ec8df0cbdc",
      "End": "ee5c79be0a6845b5991c45ca41bcbe5e",
      "Id": "a209dc5d47c34a61a78de6dec39d1984",
      "IsHidden": "False"
    },
    {
      "Start": "f046b0d7c08e40fda23047c7d9a6e9aa",
      "End": "f9514d03072542c6ac4d84b29213d432",
      "Id": "80fe898665ce442485fb658410a00f1a",
      "IsHidden": "False"
    },
    {
      "Start": "e892284b20524d05ac2b5a1fdf6abcac",
      "End": "1b8ef2042e45400582a83d1e6f03c6d5",
      "Id": "6abef4851e1f493a839c145330e8b739",
      "IsHidden": "False"
    },
    {
      "Start": "5ec5c3d5e7c347f3ae4964785f839f9c",
      "End": "faf19b56ce374c7e8706123140d4e69e",
      "Id": "a702adb1e34247a592ab172f81d061e3",
      "IsHidden": "False"
    },
    {
      "Start": "816894bc3aae4a7bb0d9c1a8c1539e19",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "88fa090d8fb2483db87b85bc2c45e478",
      "IsHidden": "False"
    },
    {
      "Start": "6fbf7723635244339684e4989501af0d",
      "End": "941d1b369d82419e945c713c0989c2c9",
      "Id": "cf46e982ee824f6da80e52cb48bbd1e0",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "caa246d10e054cf9a3fc049da93b5817",
      "Id": "79174663dc5643c88e8132ef3dac978a",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "6df2c9c9eab44034ab7a8b0758ed21f8",
      "Id": "5e87b32c97674025acd70a2dbf2b75bb",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "3dc9ce12cdfa493bb0e0df86e4782fbc",
      "Id": "1b5f24070f2245779b3bade1d3692a67",
      "IsHidden": "False"
    },
    {
      "Start": "8e0fba2e937d4a08bf8f7e7f97090cc9",
      "End": "5075d94002214a9ea145eaa8081cd9cc",
      "Id": "773a60792bba47a28ca52e5d81b6dd82",
      "IsHidden": "False"
    },
    {
      "Start": "aea129e877d84944b5bc93add3f36aa5",
      "End": "74d62a1271224915a65d9df7d5bdff52",
      "Id": "f1a4656480a040e6be3dde1e2bdfa9a2",
      "IsHidden": "False"
    },
    {
      "Start": "7f620fb1fe2041d88167996f7f420a98",
      "End": "c45007a0b47f4e3cb32ed203338fa66b",
      "Id": "7e47d0fc37f644cbba798a54ebeeab4d",
      "IsHidden": "False"
    },
    {
      "Start": "41342d6221a34c9289c040872ba58e8f",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "b7d8e9bb516344aaa45078e17f8d55b6",
      "IsHidden": "False"
    },
    {
      "Start": "9eac2467414c416e949276361d8073c1",
      "End": "9f72c5cf556349e19af952862d645344",
      "Id": "141022cec3e1487596e28e4387868aea",
      "IsHidden": "False"
    },
    {
      "Start": "f13acedcaa93452eaa5511159e827cec",
      "End": "09c733e99e24497a9d5d035ab95cd913",
      "Id": "f2548bc24cd24012a1bce6f5abb096c3",
      "IsHidden": "False"
    },
    {
      "Start": "ed60dabd9980412e942723925b431333",
      "End": "b4ba48d41b084aefaef22ec1656d92f8",
      "Id": "c0e857b4894d4220bb389c1af3f464fb",
      "IsHidden": "False"
    },
    {
      "Start": "10f53b4fd6ea473ba16bb4a1f67a392a",
      "End": "9420a650e03b4c338e300b2cfa07531f",
      "Id": "661a56c3b0144a349ff3f15217053741",
      "IsHidden": "False"
    },
    {
      "Start": "6443aa3d38c64403a94655133b74967c",
      "End": "1b65bf3fdd104773a7077d4e94ac26b5",
      "Id": "22bc815fe911425aae27a813563cae38",
      "IsHidden": "False"
    },
    {
      "Start": "ff4f1d049fff4bb184afe92a43d4c058",
      "End": "1a4a00b24589460cadffa49954a4c0df",
      "Id": "73f0340abbbb4e10b3ec930860a08726",
      "IsHidden": "False"
    },
    {
      "Start": "7603807ecae2403b919bcea0308d5e61",
      "End": "9ebb1f33c3e64f33b7f31910a7ddae8e",
      "Id": "da0e920bea3146bfa138439e93271b3e",
      "IsHidden": "False"
    },
    {
      "Start": "8d991fb07fef486bbc333631cdc94b1f",
      "End": "792176cbeae74359a57aa7c45373cfe8",
      "Id": "c368e90960e54d5695c1b4f2083b8956",
      "IsHidden": "False"
    },
    {
      "Start": "558f9279578b4f76898e86fb0da740ed",
      "End": "6dd92879669c4d3eb0200a895493b9d7",
      "Id": "8bcef543870f420188108fdb39acfb46",
      "IsHidden": "False"
    },
    {
      "Start": "d50dda3cd5034b60b54c75e08563f485",
      "End": "02073fc4bc6c440e9ee7a88342953fb2",
      "Id": "7950d204d4f1415187346fea4e181f32",
      "IsHidden": "False"
    },
    {
      "Start": "f335c2c14bed4874b36a15cdbdcae725",
      "End": "d88d2c7964bb4855b1678adffe1a4cbc",
      "Id": "adf81ed2060e4f4388cabcbbd1d57213",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "35bd536b69e64c298380cb7b5a9f00dc",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "7527a5a4d9c14ef69abb152834d83cc9",
      "Id": "74e46f7f9cdf42e7a4ff7ad60b3f2a90",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "e468b8c5b89141749aad12d6293306d5",
      "Id": "bb5f60ba49d249e899d0064b59992386",
      "IsHidden": "False"
    },
    {
      "Start": "1680185e68c54ebe9b2794d69b547710",
      "End": "bff5818570b64baba2e2471e36259aad",
      "Id": "3033530f407b4d7abcb7fcde89ed1b2d",
      "IsHidden": "False"
    },
    {
      "Start": "daae3d5ef27c42e28299f9b22c6d48ac",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "c594e08bdc624413ad9052390db5bb33",
      "IsHidden": "False"
    },
    {
      "Start": "daae3d5ef27c42e28299f9b22c6d48ac",
      "End": "b36212e1d6c84f47bfec689f29ac1cd1",
      "Id": "0663d063aa29442598f6878fbfb9d25b",
      "IsHidden": "False"
    },
    {
      "Start": "af3f86d9fafb41d2ba4f1340183924d3",
      "End": "371a45db50b8415ba5561374ec8bc5d4",
      "Id": "7ea8b71664214b08b7b2d83b2bc25b23",
      "IsHidden": "False"
    },
    {
      "Start": "ac2ed70c911e4a888969fbcdec17e938",
      "End": "a09788801aa9465fa88268d7a23c4cc7",
      "Id": "4296b835dd5847d1abd3a6480440db88",
      "IsHidden": "False"
    },
    {
      "Start": "5d8ab4e208dc4b72a1ea8e97e8c91e46",
      "End": "8243cd424878419e9bb4c433d6461700",
      "Id": "24a67a82f1d44d13b4a77d1c027d29b2",
      "IsHidden": "False"
    },
    {
      "Start": "5d8ab4e208dc4b72a1ea8e97e8c91e46",
      "End": "cbdbaa73a2514f49b02c066fd978888e",
      "Id": "60060f762ab84f12a627adaa8c33759d",
      "IsHidden": "False"
    },
    {
      "Start": "34869b15612c447a98b663517aed97ae",
      "End": "76ab9dffdc1345f8bfe9e0da7af6a2ee",
      "Id": "c1580c42a98744c1b00f1a9a227d146f",
      "IsHidden": "False"
    },
    {
      "Start": "fb8fefafceb341cd9f83874813d3df30",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "64ad10e9dc024792ae406fcd334e06f1",
      "IsHidden": "False"
    },
    {
      "Start": "13a916fd942d428eb09d4ab5ebf86f5d",
      "End": "e1913a81af114119a722c90cac0e8c5c",
      "Id": "80f76f97a9254a52be1c4f9cb3a6afba",
      "IsHidden": "False"
    },
    {
      "Start": "314b0273b8504fd6a964c25a83dc5ccc",
      "End": "7a9d0ccb6c014e8782fda336a8bb69e9",
      "Id": "5d1b07f6176c4b298fefa2dd35dcfc7a",
      "IsHidden": "False"
    },
    {
      "Start": "314b0273b8504fd6a964c25a83dc5ccc",
      "End": "2bab943a0d6a4776b04d6bd41e225b62",
      "Id": "b87fa32faae049799ca132ecf5f88241",
      "IsHidden": "False"
    },
    {
      "Start": "d97b671575f1421b8b5f3f2d309cacb3",
      "End": "2feb31af69fe4c3684b7bf0f053047d3",
      "Id": "e83b16d08d2f4d68911d3161eb7ade57",
      "IsHidden": "False"
    },
    {
      "Start": "51c0209c1ed94c5ca09d2bb26a4af947",
      "End": "ed465ad5dc6746a68f4b936f423dae4d",
      "Id": "96ae10bd25b549d5944727ac28855e5f",
      "IsHidden": "False"
    },
    {
      "Start": "3760a7f7fce540218eaf3a2d24c63f7a",
      "End": "340fdc7cb581453d985bfa1eef4dc044",
      "Id": "23f0b3cfe6814560a4f08312d7fbe170",
      "IsHidden": "False"
    },
    {
      "Start": "3760a7f7fce540218eaf3a2d24c63f7a",
      "End": "0dd04772a12c4d369e684b04325d2c4c",
      "Id": "9b39c0913e41410b98545188ad47b222",
      "IsHidden": "False"
    },
    {
      "Start": "e222ba73f1a34987a46d33c1692b306f",
      "End": "18f8e3c49a89440895e354511c93d719",
      "Id": "e01db502e1a14c89ab6e0ce41fc5e5bf",
      "IsHidden": "False"
    },
    {
      "Start": "2f3044798ea041e282448c9b215c387d",
      "End": "36a68310058d4a7b8a9f0e62444afe3d",
      "Id": "37699bdfe3854afa90b35f4183985808",
      "IsHidden": "False"
    },
    {
      "Start": "7ae9a14487594c4f8404b9922ed77514",
      "End": "6fa90f37e3254bc0be0a43b5a5bf7195",
      "Id": "192c650710eb47158d7521ce8288f66e",
      "IsHidden": "False"
    },
    {
      "Start": "7ae9a14487594c4f8404b9922ed77514",
      "End": "13bede18629e4b8e879d26c5b868b2ca",
      "Id": "003f144d7b114e77a7f1159b2e3ba650",
      "IsHidden": "False"
    },
    {
      "Start": "ee8dbee0410b4fc3a40df04bba6d0dfb",
      "End": "03ceb55b3b384160bb7ddc5bf6e31c54",
      "Id": "3863c6c3ebf54032ad86cfd66226de37",
      "IsHidden": "False"
    },
    {
      "Start": "a112056b684344f3b8286a412f20f8b4",
      "End": "0f0ef2c014c04329ac6027456ddc8dca",
      "Id": "6fd295f3cd304db38fb2ce4664aae1ff",
      "IsHidden": "False"
    },
    {
      "Start": "ef2edbb0f0c54b9c9d852ea87379bbcd",
      "End": "7b971fc640d74c8db7839f7ee1367956",
      "Id": "6702a0a9622b40428ac04608b3315de5",
      "IsHidden": "False"
    },
    {
      "Start": "df9c617ec7a84a1291ea89fc47fccc55",
      "End": "7a7b73fc512242f4bdd5e26c11ac275a",
      "Id": "7212cb8989c641409a78df94fa8c7d2d",
      "IsHidden": "False"
    },
    {
      "Start": "c4a0c6be7bd847519ae8a923f01e5a2d",
      "End": "9e96666eb66f4fe3b48e0bd9fb51a241",
      "Id": "60c0034e88c043769bc8cd3af11b41f3",
      "IsHidden": "False"
    },
    {
      "Start": "028d4dd59bf940d1bdc79d71afcde784",
      "End": "de91496d30c64b379ca8afa681496b38",
      "Id": "e2f822fb0f3141229ba365a77588e581",
      "IsHidden": "False"
    },
    {
      "Start": "3544ddab53214fdeaacce34c43f01836",
      "End": "db6da0d58834493e9d1a3cdeeef9326d",
      "Id": "61dc30f236734b208c7279a0a2f5908f",
      "IsHidden": "False"
    },
    {
      "Start": "152082cb9919466c8f403470b1e977fd",
      "End": "5cb9de51547140d6a91af699513e7a97",
      "Id": "031839d022104ff986e969ee4d2f84e5",
      "IsHidden": "False"
    },
    {
      "Start": "ed63d3ed06ab4d0ab0584a5a730a4839",
      "End": "7cb88790107c4ca6b31275b25752b405",
      "Id": "c1f66e033a8b4f37bf8f5253f897b58e",
      "IsHidden": "False"
    },
    {
      "Start": "ad6fae91e1514c4f9c852d7322bfd74b",
      "End": "941c02c46a944fbdb5d31a9a9455452b",
      "Id": "a50cbe2c2df04c85909d61ebfc134858",
      "IsHidden": "False"
    },
    {
      "Start": "92ac79896bd4418eb3fd7517e22b800a",
      "End": "347ceb54699a44539a3608e0a8477d4f",
      "Id": "3d1b75dea5154075a1b2121a029d6415",
      "IsHidden": "False"
    },
    {
      "Start": "edc87a4be4484433971c18326bfbcaef",
      "End": "005825a8c44d4ee689750a366978114f",
      "Id": "f071cc8765bd4939916ac91fb447af01",
      "IsHidden": "False"
    },
    {
      "Start": "edc87a4be4484433971c18326bfbcaef",
      "End": "d91886cc442846848aa5c6eed23a61e0",
      "Id": "484ff2070f324730af623c482805e95d",
      "IsHidden": "False"
    },
    {
      "Start": "ae6a6c5478064203b757ce83bc0b4291",
      "End": "433f944fadcb4a5b9d955dd1a8bacb19",
      "Id": "0cd587be1ffd42bfbdd46459e1ec460f",
      "IsHidden": "False"
    },
    {
      "Start": "8f197d2e8d85410aa931f05d0424d3a8",
      "End": "92081d0c7d884a97b7cbfc57b52dd325",
      "Id": "b7c96c40dac448fc9c95260bab6beddd",
      "IsHidden": "False"
    },
    {
      "Start": "f7eaea43671d45c4a8e38fcd57ee993b",
      "End": "d917e345826c44dfb67a0b98ee79eb2b",
      "Id": "f1b485823f54450ea28831fbf19dbe65",
      "IsHidden": "False"
    },
    {
      "Start": "3c0c33ca0ae94bd3b8e79b6fc34f8d8a",
      "End": "71150c54dffa49199ab6d7176cbc7c52",
      "Id": "eb4fa898c7af4d47adc8f12ec5a4e299",
      "IsHidden": "False"
    },
    {
      "Start": "3d32422ed6fc4ee39c0ded758d16dedd",
      "End": "16b75a45e43246f7ad8bfffdb275dcde",
      "Id": "7a59298ddc334d77802ae98b84f825be",
      "IsHidden": "False"
    },
    {
      "Start": "94aa2421adab4282a610a53aa04036ac",
      "End": "517e29c6e7e04197aa2c60d83d3920cd",
      "Id": "37f623315d864dc9a2441b66b14920b4",
      "IsHidden": "False"
    },
    {
      "Start": "4193e32cd05e4514ab481842118422d1",
      "End": "304ce76f4edd4c0a8a76044d742788d2",
      "Id": "2bbe4d42e9cf42bb89aaa22ed6732872",
      "IsHidden": "False"
    },
    {
      "Start": "06758d24133843f9a42278cc3f419087",
      "End": "32760aa9a36c486aa0e34ba9f31b3c85",
      "Id": "06d9b5aabdc74d2f97eb919fd151734b",
      "IsHidden": "False"
    },
    {
      "Start": "b175d7d64921460b90e17ee33c34584d",
      "End": "8a767ba80738494fbf05a13148ba04bb",
      "Id": "c4b5797d9b4d4d55842616a880d0f982",
      "IsHidden": "False"
    },
    {
      "Start": "acaf94e8d4c1428297ab7f0e6ff61a9a",
      "End": "0a9181038b344107baddba2174353dc2",
      "Id": "9562201b075144bb9f87c1162241885b",
      "IsHidden": "False"
    },
    {
      "Start": "4f0e1566011d49d08f504d3648b98d9d",
      "End": "49a9c009738842c5975de0b53bd6e350",
      "Id": "90371bbdc9744f97a30c22835ca3988a",
      "IsHidden": "False"
    },
    {
      "Start": "795c44bb6f15409aa50eee15d751d9b0",
      "End": "3da21670b743414c92004b8e9ef07e7c",
      "Id": "1c2ebbfd0d364721b2496d0f0fe7c191",
      "IsHidden": "False"
    },
    {
      "Start": "b8f297e031094feb8f991f6487e7bebd",
      "End": "f9996fa0ed57483ba29a98c8fe6da80c",
      "Id": "4955c9ba567442acb04869071b43d38e",
      "IsHidden": "False"
    },
    {
      "Start": "314bb463e0ed486a9b48859d6382d06d",
      "End": "e555f0da256645e08fe3c3471126dc9d",
      "Id": "a1a3575c875344309753ae51fe153325",
      "IsHidden": "False"
    },
    {
      "Start": "7340432273dd410184feb9473f042e23",
      "End": "59d35eb75962486eafff4cc4324d9173",
      "Id": "48aab310b4d74ff68acc7f51d2de1413",
      "IsHidden": "False"
    },
    {
      "Start": "36deffc188394fb1a4379c035c53167d",
      "End": "7e1f0202d36a4fb8a34990f78511a637",
      "Id": "953af3e6ccfc4c7ebc781dcd6530c258",
      "IsHidden": "False"
    },
    {
      "Start": "83c832249d6b48cc9dc09b8318fc9450",
      "End": "22904946c42f453fbdce5b91a6f62ae1",
      "Id": "11bbafd3ec6c4070800d2159b1fdd2a6",
      "IsHidden": "False"
    },
    {
      "Start": "cf7a048d93ae44329f0ba7b7bd25953e",
      "End": "b8749ab414504e609ab88cdc2a880e53",
      "Id": "028867fbc32f432297401114cfc91bce",
      "IsHidden": "False"
    },
    {
      "Start": "00f80b52ac3146e9879ed4c4c7db6999",
      "End": "eef23bc434ff4dea89ed84e151d17068",
      "Id": "a4e7be3c9bac406e90608aef4380ad43",
      "IsHidden": "False"
    },
    {
      "Start": "7a7ffb261d634d18a19931c93e3b63a4",
      "End": "4e754bcf870c4f0c8038a07f4be73f2e",
      "Id": "37dca98610f44dc5ba21b5aa8c355e43",
      "IsHidden": "False"
    },
    {
      "Start": "7e38bf6d7b004ddab944ecc98070336a",
      "End": "eb25e519e55c4674a1a277b962a2e835",
      "Id": "7493a7fbc71446e198261b1f01a41db9",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TNw96Nw96i3e9G73qwJdw96Nw96i3e9G73oAl3D3o3D3qLd70bvegCXcPejcPeot3vRu96AJdw96Nw96i3e9G73oAl3D3o3D3qLd70bvegCXcPeiot3vRQBHu96N3vUW6jdVCJd3vRu96i3UbqAJd3vRu96i3UbqAJd3vRu96i3UbqAJd3vRu96i3UbqAJd3vRu96i3UbqAJd3vRUW6igCPdRuqLdRupgS7qN1RNIFUsx2qOrE4FRR3YuOLdJLs5x+5XK/8AfRwv60AWt1C/McAEn2pE0++nBz5NoM9TmVvy4A/WrA0G2IP2hpLsd1nbKf8AfIwv6VN0BR+3QmQxo/myf3IQXP6dPxqRVu2UMLGQKegaRA34jOP1q7/alpbgxW4MzJx5Vqm7HtxwPxxWdqmp+IFZk0/RYmHaW5ulH/jo/wARS5gHfaCoJkt7mHnHzwk/+g7qSG+t7h3SKZJJE5eNW+ZMkjkdR0PX0rJ02HxNcXUzavDJJFsAjjt5kRM5OeA2emOpNasVvPbxhE06SJB0VDHj9GqkBPuo3VU+1SCTYbC+B/veSCv5hqf57/8APrdD/tif6U9ALG6iqkl9HBs85Zod7hF8yFxlj0A4ooArSapFHLJH910OCZiIUJ7AM3X6rmtC106a8w7XkMaY+5bAOf8Avs8f+OiqrMcEdR6dq8a8eTfZvGmpmMmJt0R3Rkqf9UncU3cR70uk2FmomnAkaMZ866feVx3y3T8MVi6l8T/D2mgrFefb3HG2xHmDpn733R+deC3erXGobPtVzPdBBhRcStIF+m4nFRfa+2ajl7hc9P1j4yX8kMv9n2UNmFVislwxlY4HHyjAH5mvP9S8Ra9rzJLfaxeS9HEcchijB/3FwD+OazLi7/0eXn+A/wAq3Ws1ijUuQowAM9+OnvXxfEbqxdKNKTV77Nq+x9nw6qP72VWKdrbpO299zntD8QeO/t+sLqmqz21glwBpb2moSu8kG3kyhuFbd2HH5ZMui+KPiCuqawNT1yRNNEyf2W1tcO0rRbfm87cMbt3THv7Vp6F8LdV0e+1rULOx13U11e6F3Il5cL5duQgXZCsjKUQjsM9B6CjRvhRrOhatreowaHrtxLq86XE0dxeQyxRMqbQIlMvyKR1A9uwArxPq2PkpShz6pW+Lyv106663+Z7H1rARcYz5NG7/AA+dumvTTp8jY0nx7rX9nwmXWLqSX5gzMwycMR6e1XI/iFrcWdurzkejpG3/ALLXLHwJ4wiLgeHLzbvdh80R4LEjo/oaT/hC/F3/AELt8PwT/wCKr9Jw8WqMFPeyv62Pzqu0603Ha7t6XOwX4ma4v/MSJ+sMf/xNTL8U9aX/AJe42/3oV/oK4k+C/Fq/8y/ff98r/jTW8IeK16+HtQ/CMH+tdHKjE9Q8Da9c+INV1W6u52nmVIVXPCxqS+VUdFBwM+uBnOKKwfhXY6xpd7q8d7ps1qzfZ/8Aj6UoMDeWwRkFgCPl68jOBzRTA9CmmSFkDuFZ87F/ib6Dqa8O+Jd55fjbVSwaNR5RPmLt48lOcHp+Ne1x20UM0ssKGCWVt0kkLFGkIGAWI68VlTeEdKn1mXV5bVbjUZCpMt0onUEKFBCuDggADIxViPE9F0rVPEjAaVp1zfqTt8yGP93n/fOFH513GnfBfV/JE+tajY6LD/d3ec/XofuqD9Ca9SkvryVVRrpkjUYC28Yjz9TyfyxVeOFI5TKEzKesrEs//fR5qdQ0Of034deFdLyTZ3fiCfH371tsWcf3flXB+hrWuNB0+7YbtK0yBQdw8u2V2B9QzDA4/wBmr272pM+1RKlCes1f1NI1Jw+F2KVn4b0nT5Xlt9Ot45ZCGaTywWJGefQHk9AOtWzZWx/5dof+/Yp2fajPtWkYqKtFWRDbk7t3Yz7Dbf8APvF/3wKX7Fbf8+8X/fAp2fajPtTEN+xW3/PvH/3wKPsdt/z7x/8AfAp2fajPtQBJGqxqqIoRF6KowBRTA3I4ooAi3cn/ABo3f5zUW/k8mjf7mqAl3f5zRu/zmot/uaN/uaAJd3+c0bv85qLf7mjf7mgCXd/nNG7/ADmot/uaN/uaAJd3+c0bv85qLf7mjf7mgCXd/nNG7/Oai3+5o3+5oAl3cj/Giot/I5NFAEe4880bj60UVQBuPrRuPrRRQAbj60bj60UUAG4+tG4+tFFABuPrRuPrRRQAbj60bj60UUAG48c0UUUgP//Z",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2274.4752676917042,
        "Y": -895.61180115708476
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1916.4752676917042,
        "Y": -895.61180115708476
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -855.43916169986,
        "Y": -722.70609356283546
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1109.43916169986,
        "Y": -688.56609356283548
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 45.560838300139949,
        "Y": -346.56609356283553
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Main Beam Slope Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 45.560838300139949,
        "Y": -194.70609356283546
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Main Slope Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 45.560838300139949,
        "Y": -42.706093562835463
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1133.56083830014,
        "Y": -86.706093562835576
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 568.56083830014,
        "Y": -86.56609356283559
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5984.54126006674,
        "Y": 654.283468422205
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3498.4213404472489,
        "Y": 683.82869441862965
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3945.4213404472489,
        "Y": 695.84039640381582
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4818.3825764775311,
        "Y": 791.54383775296048
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4564.3825764775311,
        "Y": 825.68383775296047
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5233.3825764775311,
        "Y": 524.60652639821762
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5233.3825764775311,
        "Y": 1058.4811491077035
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5616.45738551933,
        "Y": 863.365969267384
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15533.224405092373,
        "Y": 478.4520833848552
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7026.36951141523,
        "Y": 429.43601420087435
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6772.36951141523,
        "Y": 463.57601420087428
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7441.36951141523,
        "Y": 429.43601420087435
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7789.36951141523,
        "Y": 429.43601420087435
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7463.8490696258823,
        "Y": 4.6992246935907787
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7048.8490696258823,
        "Y": 4.6992246935907787
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7811.8490696258823,
        "Y": 4.6992246935907787
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6794.8490696258823,
        "Y": 38.839224693590793
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8097.36951141523,
        "Y": 429.43601420087435
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8119.8490696258823,
        "Y": 4.6992246935907787
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7036.4723254839291,
        "Y": -791.71845917095175
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6782.4723254839291,
        "Y": -757.57845917095176
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7451.4723254839291,
        "Y": -791.71845917095175
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7799.4723254839291,
        "Y": -791.71845917095175
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8107.4723254839291,
        "Y": -791.71845917095175
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7279.735097188377,
        "Y": 955.84341058946313
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7757.735097188377,
        "Y": 955.84341058946313
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8806.735097188377,
        "Y": 955.84341058946313
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14883.224405092373,
        "Y": 478.4520833848552
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7258.87905403674,
        "Y": 1384.0503760783336
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7694.87905403674,
        "Y": 1367.0503760783336
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8084.87905403674,
        "Y": 1429.5183101395783
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8392.87905403674,
        "Y": 1429.5183101395783
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6864.735097188377,
        "Y": 955.84341058946313
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6610.735097188377,
        "Y": 989.98341058946323
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 123.76651487356935,
        "Y": 1112.3505436961943
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2559.1371810671817,
        "Y": 1154.0421768452125
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2048.1371810671817,
        "Y": 1228.0421768452125
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1625.1371810671817,
        "Y": 1228.0421768452125
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3070.1371810671817,
        "Y": 1154.1821768452126
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3067.2998503367862,
        "Y": 1327.8516412834158
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3917.9710535517825,
        "Y": 1124.5411809727439
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3919.4665225283052,
        "Y": 1464.4250285500707
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "62536ed7d8f64353aa7e5bd504d6f54d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 568.56083830014,
        "Y": -337.70609356283552
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "90b8f7ad4af7496a960da48abc152285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1133.56083830014,
        "Y": 165.85390643716437
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "41563a8003714c4aa18135c3678b78ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2641.4943786566396,
        "Y": 166.75305821290391
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "9d1cec5ec9ad4df5b4536a3603d17fab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 45.560838300139949,
        "Y": -562.70609356283558
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db13cb72be7e4d458bc9a1e8e171c01c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -362.43916169986005,
        "Y": -437.56609356283553
      },
      {
        "ShowGeometry": true,
        "Name": "3.1. Secondary Beam Slope Angle (degrees) from",
        "Id": "b3c95697e6434508865fdae8d3004ce9",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 568.56083830014,
        "Y": 65.293906437164424
      },
      {
        "ShowGeometry": true,
        "Name": "3.2. Secondary Beam Slope Angle (degrees) to",
        "Id": "58fe1afbbe604fb2b32af81f27d247b3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 568.56083830014,
        "Y": 216.29390643716454
      },
      {
        "ShowGeometry": true,
        "Name": "4.1. Angle between beams (degrees, 0-90) from",
        "Id": "1a354d3aadb941fb9fdd9ccb8b76dee7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1133.56083830014,
        "Y": 345.29390643716454
      },
      {
        "ShowGeometry": true,
        "Name": "4.2. Angle between beams (degrees, 0-90) to",
        "Id": "81a7a51aff0b462ab0295d1b64fcea29",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1133.56083830014,
        "Y": 496.29390643716454
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenAxes",
        "Id": "088b89d25d914ad7b3fcece05185975f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1654.56083830014,
        "Y": 121.29390643716442
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "76b289957dbb49ffbf62bc8588d5acac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -362.43916169986005,
        "Y": -653.70609356283546
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "53c0be61116842f2911654f7c79b6bfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -855.43916169986,
        "Y": -541.42609356283549
      },
      {
        "ShowGeometry": true,
        "Name": "5. Library file path",
        "Id": "d4aa9022c65b43829a11aebf1c816525",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.4665225283052,
        "Y": 1498.4250285500707
      },
      {
        "ShowGeometry": true,
        "Name": "6. Connection family to place",
        "Id": "72fe204d3a844a1097b09048ecf1f7df",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6375.8980116704934,
        "Y": 962.16796952651578
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "81761ea300ba405aad83f5b8fa2e9f5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4704.9710535517825,
        "Y": 1158.681180972744
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "8a92947807364762874c012b8432daa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3097.4943786566396,
        "Y": 225.75305821290391
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91c70c5dda0243e7b4e8f92de39246b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2641.4943786566396,
        "Y": 318.8930582129039
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "3ce9b8b19a9b469f905db02517f9d17f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4450.9710535517825,
        "Y": 1124.5411809727439
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "71ca4d37985a4d5181639a072b928286",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4452.4665225283052,
        "Y": 1464.4250285500707
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "1fc1ba03bc174352898611929e5b7761",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8193.735097188377,
        "Y": 955.84341058946313
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "4e121fc4004d4dfeaed4d7cb1c40d24e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8498.735097188377,
        "Y": 955.84341058946313
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "16a4ae907f6040939207eb105a030e63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10196.26891780762,
        "Y": -119.34356444839216
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "eb888b92c99743fcbb24631dd387cf2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11004.26891780762,
        "Y": 62.656435551607842
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "352392610eef4466af95cbb801d891d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11408.26891780762,
        "Y": 153.65643555160784
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "de9e20a0d72642f6948bb159f1bc7377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9851.26891780762,
        "Y": 72.656435551607842
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "783f910f186b4dd1a7e05475f1ff7d88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10600.26891780762,
        "Y": 187.65643555160784
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b224c11463074a8f84a2b5448d51cacd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11004.26891780762,
        "Y": 278.65643555160784
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "abd49926613647e28ed35eef6d8e5166",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10839.523089945224,
        "Y": 1254.2537228854931
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f0d13bb5ef2d47a9b119a24296180e40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10031.523089945224,
        "Y": 1071.2537228854931
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "8a9e83016d1a47379a7215ac64a279a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10435.523089945224,
        "Y": 1163.2537228854931
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "e20d82ca66d348fc946d9333a6ac10eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11882.371435770479,
        "Y": 1165.025896863262
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a7734101dcd84f5ba62334e0edc03b7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11628.371435770479,
        "Y": 1165.1658968632623
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "e3b26e6a784047d6aff33fd85a7d6192",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12304.371435770479,
        "Y": 1179.025896863262
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1fe67851ffbb4a079795bff6a90ed319",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11882.371435770479,
        "Y": 1382.025896863262
      },
      {
        "ShowGeometry": true,
        "Name": "Template for totals",
        "Id": "e87d7cc83f3344b1b6f79db6de5c1ff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9851.26891780762,
        "Y": -277.34356444839216
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4776ded489f3423ca4ab3b2e47c916af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9671.5230899452235,
        "Y": 1207.2537228854931
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e2c179b37dd048cf8e145790b98e093c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10435.523089945224,
        "Y": 1379.2537228854931
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7fb8e8e7797e4c8ea58405566c689f1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10031.523089945224,
        "Y": 1289.2537228854931
      },
      {
        "ShowGeometry": true,
        "Name": "Template for each row",
        "Id": "b93a44df7d78450eb26ec38df963e5ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9671.5230899452235,
        "Y": 969.25372288549318
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "07d5b41cb10f4d1287a6b4f949a80f2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15130.224405092373,
        "Y": 478.4520833848552
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6773675f29024074b6c7dd0276324186",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12802.498100283146,
        "Y": 1470.4445542352473
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fa9e126e6b604ec0868b4f83cec7ca36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12802.498100283146,
        "Y": 1317.5845542352472
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "7307549c111a48bb933541f1410524d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13110.498100283146,
        "Y": 1457.4445542352469
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "adcd5aca8efc43cb8f198c5049189c01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13110.498100283146,
        "Y": 1639.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c2e01f29f1f441abbf4883ae6efcc2be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6843.87905403674,
        "Y": 1384.0503760783336
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f442c2e083f24b9784c828e62564cf68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6589.87905403674,
        "Y": 1418.1903760783337
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b39ac2ba3cad4761a51afe5992f2c0f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6786.7233899203893,
        "Y": -376.68434340276133
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "94b5c9ddcc3b453aa71aa87cba3d8dea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7455.7233899203893,
        "Y": -410.82434340276131
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "0ca716511615489a94498944fa33025f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7803.7233899203893,
        "Y": -410.82434340276131
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "56dc77dc760b4654941114614e1a1a9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8111.7233899203893,
        "Y": -410.82434340276131
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "fb52f919084343e78739ebcb2f929bdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7040.7233899203893,
        "Y": -410.82434340276131
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "874243ae20314320a4be3a056459108a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10600.26891780762,
        "Y": -28.343564448392158
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b8702b8cbbb3479aa85880aa02d60c9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10196.26891780762,
        "Y": 96.656435551607842
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "4c3e5449548c43d5969f569cfbfdef61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1723.2072087880119,
        "Y": 1083.7195190136561
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "75f2eed080404f728ce905cdd642fa03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2099.2072087880119,
        "Y": 1142.7195190136561
      },
      {
        "ShowGeometry": true,
        "Name": "7. Filter connection type name",
        "Id": "6463f6560f0a4c589f1f739e2f9cbe29",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1326.2072087880119,
        "Y": 1176.7195190136561
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "e3bbf2e4ee93414fa45f87529c7a31af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2686.2072087880119,
        "Y": 1108.7195190136561
      },
      {
        "ShowGeometry": true,
        "Name": "8. Select analysis results",
        "Id": "df79766745b34d1e9cd497f983e0cbf0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3498.4213404472489,
        "Y": 834.84039640381582
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "93b5b4f65e7743f09b97eaea66310a4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1723.2072087880119,
        "Y": 1235.7195190136561
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "70db52313bda4962a79fd557505303fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2415.2072087880119,
        "Y": 1142.7195190136561
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "42078771f99245f4b9694f5829200947",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5991.8980116704934,
        "Y": 1021.1679695265155
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "1fcddca9e96d4050906d519aaefa323b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -827.23348512643065,
        "Y": 1146.3505436961943
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "c14d7ac1125a4281a94c855dc3158fa1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -391.23348512643065,
        "Y": 1146.3505436961943
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "37b545a9ee774de58907177df6152b31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6294.090310933173,
        "Y": 3218.4756431675573
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2e4dfbde999a46cbb6af39bcc7b3a35f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5879.090310933173,
        "Y": 2856.2683579186496
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "86282165c6044e399c09b185849d7915",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5625.090310933173,
        "Y": 2890.4083579186495
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "e8e843d8e4534dbdb6458fa7e2272380",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6915.6188119698136,
        "Y": 2818.7117127992738
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "f1426c89fe474451adfa39f9a92c1fac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7360.6188119698136,
        "Y": 2818.7117127992738
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "9b465ee88745413ca57aa3d73dc2198f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7759.6188119698136,
        "Y": 2910.1417127992731
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "81a02b4bc3054900a6f0f8c83643e3c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8748.4140737888483,
        "Y": 2848.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "252a30e243fe49bc8822cc7ef8db32e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8494.4140737888483,
        "Y": 2939.7514607386388
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "c1e49591e7cf496a91a33574b475e636",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9170.4140737888483,
        "Y": 3031.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "9e1937daf02242b2b02794afb34b5d00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9170.4140737888483,
        "Y": 2663.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e197209a332f4b9ba3a2658eca7bad91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8748.4140737888483,
        "Y": 2546.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "47afe6a6f75b463daa9097f7e8b9ed03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8748.4140737888483,
        "Y": 2697.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "523e6ba2108445968898264884bbf068",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9592.4140737888483,
        "Y": 2824.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7c3a83dace094e43bd8c168ed77fbacb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9170.4140737888483,
        "Y": 2880.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "fe4d73468a1942108b1f3961ddfe6d66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9996.4140737888483,
        "Y": 2824.1114607386389
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b221d16f59de413abbbe7270f72507ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7759.6188119698136,
        "Y": 2727.281712799273
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "3adbc9184e5b46ca8026dbdae9583968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7433.4753293295989,
        "Y": 3577.1262832970906
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "ee990307f145450faf4e05adbe462bc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7827.4753293295989,
        "Y": 3590.12628329709
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "9e618f6bca67433b8f4438b186d788e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8221.475329329598,
        "Y": 3700.12628329709
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "20c33458b9184e9fa4ec7025ae3646f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7827.4753293295989,
        "Y": 3776.26628329709
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "0de6122c62c1415a88cd6d6d50ebbed1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8606.475329329598,
        "Y": 3666.12628329709
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "c282b9b8afdc493190f61ab674160df9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9335.475329329598,
        "Y": 3598.12628329709
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "4dac41b20b9d40be9c7483161cb209c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8941.475329329598,
        "Y": 3632.12628329709
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "51a2392cdd184c0f90425e346e2cb91e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11566.078564894697,
        "Y": 2471.6978377480245
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "1669a98364d04a1097ebbf48e9f101c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12077.078564894697,
        "Y": 2471.5578377480247
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "8fcf0136bdc149d8bdc888d4a3640fcb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12471.078564894697,
        "Y": 2437.5578377480247
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "00b309ddcd3e41069683ca1e90881274",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1326.2072087880119,
        "Y": 1328.7195190136561
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "5c8e6d83ec344f81ac5613ad05ced01d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13453.498100283146,
        "Y": 1505.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5414d88bc2d54c34b45e4aa078266246",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6375.8980116704934,
        "Y": 1114.1679695265157
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e0de922cc46e4601962144d205bd754e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13453.498100283146,
        "Y": 1721.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a03dfbf47de34e5fba7c7c11ec9e040d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13800.498100283146,
        "Y": 1667.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "cc01055f6fd441678c2fc9c86e4adf3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14147.498100283146,
        "Y": 1645.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "90ec98dfd7f44e28be44e4d79317afb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13800.498100283146,
        "Y": 1450.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "bfee5cb4f88247e28b6a2b772f995353",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14147.498100283146,
        "Y": 1428.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "e58ce67838934ac3a323e0a38b65903e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14494.498100283146,
        "Y": 1406.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "0c93b7933dc14f398c9d900c0b11c647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13453.498100283146,
        "Y": 1323.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "5fd8e0051ebb44e289d8c68b948180db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13800.498100283146,
        "Y": 1269.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "310bb36ae7634899b0c3399ce9f116f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14147.498100283146,
        "Y": 1247.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "909f3b0acfff43bb81a7ae1d95dfa879",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13110.498100283146,
        "Y": 1305.4445542352471
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "9901f06a29bf4a6e9938e7984168ac4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13453.498100283146,
        "Y": 1172.4445542352471
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "62536ed7d8f64353aa7e5bd504d6f54d",
          "90b8f7ad4af7496a960da48abc152285",
          "9d1cec5ec9ad4df5b4536a3603d17fab",
          "db13cb72be7e4d458bc9a1e8e171c01c",
          "b3c95697e6434508865fdae8d3004ce9",
          "58fe1afbbe604fb2b32af81f27d247b3",
          "1a354d3aadb941fb9fdd9ccb8b76dee7",
          "81a7a51aff0b462ab0295d1b64fcea29",
          "088b89d25d914ad7b3fcece05185975f",
          "76b289957dbb49ffbf62bc8588d5acac",
          "53c0be61116842f2911654f7c79b6bfd",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -1119.43916169986,
        "Top": -795.70609356283546,
        "Width": 3062.0,
        "Height": 1428.0,
        "FontSize": 36.0,
        "InitialTop": -722.70609356283546,
        "InitialHeight": 1364.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "81761ea300ba405aad83f5b8fa2e9f5a",
          "3ce9b8b19a9b469f905db02517f9d17f"
        ],
        "HasNestedGroups": false,
        "Left": -4714.9710535517825,
        "Top": 1051.5411809727439,
        "Width": 1203.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 1124.5411809727439,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "46ec41b71daf42dca401a9dc8eb59e77",
          "d4aa9022c65b43829a11aebf1c816525",
          "71ca4d37985a4d5181639a072b928286"
        ],
        "HasNestedGroups": false,
        "Left": -4989.4665225283052,
        "Top": 1391.4250285500707,
        "Width": 1476.0,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1464.4250285500707,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4554.3825764775311,
        "Top": 408.60652639821762,
        "Width": 861.0,
        "Height": 785.87462270948583,
        "FontSize": 36.0,
        "InitialTop": 524.60652639821762,
        "InitialHeight": 678.87462270948583,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (beam to beam)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6762.36951141523,
        "Top": 356.43601420087435,
        "Width": 1555.9999999999991,
        "Height": 243.13999999999993,
        "FontSize": 36.0,
        "InitialTop": 429.43601420087435,
        "InitialHeight": 179.13999999999993,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6772.4723254839291,
        "Top": -864.71845917095175,
        "Width": 1556.0000000000009,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -791.71845917095175,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6784.8490696258823,
        "Top": -68.300775306409221,
        "Width": 1555.9999999999991,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 4.6992246935907787,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "809e0ab45e464576aa8783e69d0af647",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "4e121fc4004d4dfeaed4d7cb1c40d24e",
          "1fc1ba03bc174352898611929e5b7761"
        ],
        "HasNestedGroups": false,
        "Left": 6600.735097188377,
        "Top": 882.84341058946313,
        "Width": 2427.0,
        "Height": 243.14000000000021,
        "FontSize": 36.0,
        "InitialTop": 955.84341058946313,
        "InitialHeight": 179.14000000000021,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "c2e01f29f1f441abbf4883ae6efcc2be",
          "f442c2e083f24b9784c828e62564cf68"
        ],
        "HasNestedGroups": false,
        "Left": 6579.87905403674,
        "Top": 1294.0503760783336,
        "Width": 2034.0000000000009,
        "Height": 271.4679340612447,
        "FontSize": 36.0,
        "InitialTop": 1367.0503760783336,
        "InitialHeight": 207.4679340612447,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "c14d7ac1125a4281a94c855dc3158fa1",
          "1fcddca9e96d4050906d519aaefa323b"
        ],
        "HasNestedGroups": false,
        "Left": -837.23348512643065,
        "Top": 1039.3505436961943,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 1112.3505436961943,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -3080.1371810671817,
        "Top": 1081.0421768452125,
        "Width": 1687.0,
        "Height": 382.80946443820335,
        "FontSize": 36.0,
        "InitialTop": 1154.0421768452125,
        "InitialHeight": 318.80946443820335,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "4359ce10bfcb4091b8d1e1f48fd4139a",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e20d82ca66d348fc946d9333a6ac10eb",
          "a7734101dcd84f5ba62334e0edc03b7d",
          "e3b26e6a784047d6aff33fd85a7d6192",
          "1fe67851ffbb4a079795bff6a90ed319"
        ],
        "HasNestedGroups": false,
        "Left": 11618.371435770479,
        "Top": 1092.025896863262,
        "Width": 894.0,
        "Height": 426.0,
        "FontSize": 36.0,
        "InitialTop": 1165.025896863262,
        "InitialHeight": 362.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "780accb67af74e2495fb3817953f6dee",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b39ac2ba3cad4761a51afe5992f2c0f5",
          "94b5c9ddcc3b453aa71aa87cba3d8dea",
          "0ca716511615489a94498944fa33025f",
          "56dc77dc760b4654941114614e1a1a9e",
          "fb52f919084343e78739ebcb2f929bdb"
        ],
        "HasNestedGroups": false,
        "Left": 6776.7233899203893,
        "Top": -483.82434340276131,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -410.82434340276131,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "852191142e9346fdad10bf40668c6fe2",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c3e5449548c43d5969f569cfbfdef61",
          "75f2eed080404f728ce905cdd642fa03",
          "e3bbf2e4ee93414fa45f87529c7a31af",
          "93b5b4f65e7743f09b97eaea66310a4f",
          "70db52313bda4962a79fd557505303fd",
          "00b309ddcd3e41069683ca1e90881274",
          "6463f6560f0a4c589f1f739e2f9cbe29",
          "cd04101c1a67465e9b700a27664c0076"
        ],
        "HasNestedGroups": false,
        "Left": 1316.2072087880119,
        "Top": 1010.7195190136561,
        "Width": 1615.0,
        "Height": 454.0,
        "FontSize": 36.0,
        "InitialTop": 1083.7195190136561,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "36d99dbfca1348588ec6b1aec1295509",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -2284.4752676917042,
        "Top": -968.61180115708476,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -895.61180115708476,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "497285c3697a4fd6837e3c4e137cb9b5",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72fe204d3a844a1097b09048ecf1f7df",
          "42078771f99245f4b9694f5829200947",
          "5414d88bc2d54c34b45e4aa078266246",
          "67f85a02ec914524ad255050e3a04219"
        ],
        "HasNestedGroups": false,
        "Left": -6389.8980116704934,
        "Top": 824.16796952651578,
        "Width": 684.0,
        "Height": 425.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 897.16796952651578,
        "InitialHeight": 328.92630637423554,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9255b48b795f417cb3ab0887c76af9c7",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "abd49926613647e28ed35eef6d8e5166",
          "f0d13bb5ef2d47a9b119a24296180e40",
          "8a9e83016d1a47379a7215ac64a279a4",
          "4776ded489f3423ca4ab3b2e47c916af",
          "e2c179b37dd048cf8e145790b98e093c",
          "7fb8e8e7797e4c8ea58405566c689f1b",
          "b93a44df7d78450eb26ec38df963e5ef"
        ],
        "HasNestedGroups": false,
        "Left": 9661.5230899452235,
        "Top": 896.25372288549318,
        "Width": 1417.0,
        "Height": 618.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 969.25372288549318,
        "InitialHeight": 554.99999999999989,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "2518cc0280954ddbaeb757282f14f877",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "07d5b41cb10f4d1287a6b4f949a80f2f"
        ],
        "HasNestedGroups": false,
        "Left": 14873.224405092373,
        "Top": 405.4520833848552,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 478.4520833848552,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "f7bc2bdf50a04f9b977b9e94e70c015f",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "16a4ae907f6040939207eb105a030e63",
          "eb888b92c99743fcbb24631dd387cf2f",
          "352392610eef4466af95cbb801d891d8",
          "de9e20a0d72642f6948bb159f1bc7377",
          "783f910f186b4dd1a7e05475f1ff7d88",
          "b224c11463074a8f84a2b5448d51cacd",
          "e87d7cc83f3344b1b6f79db6de5c1ff2",
          "874243ae20314320a4be3a056459108a",
          "b8702b8cbbb3479aa85880aa02d60c9a"
        ],
        "HasNestedGroups": false,
        "Left": 9841.26891780762,
        "Top": -350.34356444839216,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -277.34356444839216,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "58bba532325c410e9a992ba80e07573f",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "41563a8003714c4aa18135c3678b78ff",
          "8a92947807364762874c012b8432daa7",
          "91c70c5dda0243e7b4e8f92de39246b2"
        ],
        "HasNestedGroups": false,
        "Left": 2631.4943786566396,
        "Top": 93.753058212903909,
        "Width": 713.0,
        "Height": 361.14,
        "FontSize": 36.0,
        "InitialTop": 166.75305821290391,
        "InitialHeight": 297.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "278aa3d95592458289da2c98fe5cae38",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "df79766745b34d1e9cd497f983e0cbf0"
        ],
        "HasNestedGroups": false,
        "Left": 3488.4213404472489,
        "Top": 610.82869441862965,
        "Width": 823.99999999999955,
        "Height": 360.01170198518616,
        "FontSize": 36.0,
        "InitialTop": 683.82869441862965,
        "InitialHeight": 296.01170198518616,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "fd388ca6f3f84bb68c50c46092881843",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "37b545a9ee774de58907177df6152b31",
          "2e4dfbde999a46cbb6af39bcc7b3a35f",
          "86282165c6044e399c09b185849d7915"
        ],
        "HasNestedGroups": false,
        "Left": 5615.090310933173,
        "Top": 2783.2683579186496,
        "Width": 994.0,
        "Height": 671.20728524890774,
        "FontSize": 36.0,
        "InitialTop": 2856.2683579186496,
        "InitialHeight": 507.20728524890774,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "370cf016194041e2a679b8c5c654c61a",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e8e843d8e4534dbdb6458fa7e2272380",
          "f1426c89fe474451adfa39f9a92c1fac",
          "9b465ee88745413ca57aa3d73dc2198f",
          "b221d16f59de413abbbe7270f72507ca"
        ],
        "HasNestedGroups": false,
        "Left": 6905.6188119698136,
        "Top": 2654.281712799273,
        "Width": 1275.0,
        "Height": 391.86000000000013,
        "FontSize": 36.0,
        "InitialTop": 2727.281712799273,
        "InitialHeight": 327.86000000000013,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "96ad424ddd6b44d5a2ef860444267260",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "81a02b4bc3054900a6f0f8c83643e3c6",
          "252a30e243fe49bc8822cc7ef8db32e3",
          "c1e49591e7cf496a91a33574b475e636",
          "9e1937daf02242b2b02794afb34b5d00",
          "e197209a332f4b9ba3a2658eca7bad91",
          "47afe6a6f75b463daa9097f7e8b9ed03",
          "523e6ba2108445968898264884bbf068",
          "7c3a83dace094e43bd8c168ed77fbacb",
          "fe4d73468a1942108b1f3961ddfe6d66"
        ],
        "HasNestedGroups": false,
        "Left": 8484.4140737888483,
        "Top": 2473.1114607386389,
        "Width": 1712.0,
        "Height": 724.0,
        "FontSize": 36.0,
        "InitialTop": 2546.1114607386389,
        "InitialHeight": 630.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "0ef3a439f6464a5d99d0eee2827ed8cf",
        "Title": "Recreate the structure",
        "DescriptionText": "Situations where nothing was applicable, and why",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "51a2392cdd184c0f90425e346e2cb91e",
          "1669a98364d04a1097ebbf48e9f101c7",
          "8fcf0136bdc149d8bdc888d4a3640fcb"
        ],
        "HasNestedGroups": false,
        "Left": 11556.078564894697,
        "Top": 2364.5578377480247,
        "Width": 1183.0,
        "Height": 273.0,
        "FontSize": 36.0,
        "InitialTop": 2437.5578377480247,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "844c0824207144b486883c18fc9f0a48",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3adbc9184e5b46ca8026dbdae9583968",
          "ee990307f145450faf4e05adbe462bc7",
          "9e618f6bca67433b8f4438b186d788e2",
          "20c33458b9184e9fa4ec7025ae3646f7",
          "0de6122c62c1415a88cd6d6d50ebbed1",
          "c282b9b8afdc493190f61ab674160df9",
          "4dac41b20b9d40be9c7483161cb209c6"
        ],
        "HasNestedGroups": false,
        "Left": 7423.4753293295989,
        "Top": 3504.1262832970906,
        "Width": 2179.9999999999991,
        "Height": 408.13999999999942,
        "FontSize": 36.0,
        "InitialTop": 3577.1262832970906,
        "InitialHeight": 344.13999999999942,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "57c0171bbd9745059c10d21e0d101b97",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6773675f29024074b6c7dd0276324186",
          "fa9e126e6b604ec0868b4f83cec7ca36",
          "7307549c111a48bb933541f1410524d2",
          "adcd5aca8efc43cb8f198c5049189c01",
          "5c8e6d83ec344f81ac5613ad05ced01d",
          "e0de922cc46e4601962144d205bd754e",
          "a03dfbf47de34e5fba7c7c11ec9e040d",
          "cc01055f6fd441678c2fc9c86e4adf3c",
          "90ec98dfd7f44e28be44e4d79317afb7",
          "bfee5cb4f88247e28b6a2b772f995353",
          "e58ce67838934ac3a323e0a38b65903e",
          "0c93b7933dc14f398c9d900c0b11c647",
          "5fd8e0051ebb44e289d8c68b948180db",
          "310bb36ae7634899b0c3399ce9f116f6",
          "909f3b0acfff43bb81a7ae1d95dfa879",
          "9901f06a29bf4a6e9938e7984168ac4b"
        ],
        "HasNestedGroups": false,
        "Left": 12792.498100283146,
        "Top": 1099.4445542352471,
        "Width": 1900.0,
        "Height": 874.0,
        "FontSize": 36.0,
        "InitialTop": 1172.4445542352471,
        "InitialHeight": 694.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "67f85a02ec914524ad255050e3a04219",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Shear plate;Clip angle).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6379.8980116704934,
        "Top": 897.16796952651578,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "72fe204d3a844a1097b09048ecf1f7df"
      },
      {
        "Id": "cd04101c1a67465e9b700a27664c0076",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. B to B;Web). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1326.2072087880119,
        "Top": 1093.7195190136561,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "6463f6560f0a4c589f1f739e2f9cbe29"
      }
    ],
    "X": 1114.5173392717979,
    "Y": 483.0247618987645,
    "Zoom": 0.48327688284612336
  }
}