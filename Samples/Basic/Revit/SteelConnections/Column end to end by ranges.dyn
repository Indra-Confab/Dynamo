{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places connections in column end to end geometric situations. Works only on connection types with attached ranges of applicability.",
  "Name": "Column end to end by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Name": "2.1. Column Slant Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Name": "2.2. Column Slant Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Name": "3. Library file path",
      "Type": "string",
      "Value": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 14.3.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Name": "4. Connection family to place",
      "Type": "string",
      "Value": "Splice joint",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "f920e27dafb444ab889adbe6e5c3500b",
      "Name": "5. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "610cd6ee21c04178ab33fecaf114bb6d",
      "Name": "6. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00365d5f6f75422f8c6283350f8b70c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd2d123c3d94abca7e9992dcda22716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "374e1ff6640649faa07f47bcccb7bd7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "596909f5799446a7820a3e674d2f49c7",
      "Inputs": [
        {
          "Id": "31a2a03e186b41f68176345589f851fe",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e2c7e481b8f4c97b05b11b5cadf98fc",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5587e93c96a1461bbf95cde6a7300220",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "881d3b5066d2416ea41953ba13ced78d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f830726134164f5691f1c2dd7e22e7cb",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b12606021e4dbda2be3dfc4f977dc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "3db0ae870aae4d4e8fccea48976c3b33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab334ee1abe949b5ac4be2c72a8b2772",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19ef94231bb245bf9f8d0335d2470c6c",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "145ece1505dd4e13b5adb581f63e7bf8",
      "Inputs": [
        {
          "Id": "1901e0d33af342ebaa77014a352c0c32",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcf786854a0f4dd3be94e87cc2b56554",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9ff16241fe7408d97349addfede0721",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3e6b35fdf5e421fac487c209e921316",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df853b25b16449ba80be54e810da58b9",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "e1d42da2f0d04115ba4c333d965e15ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6af4a39229064ca09d4e222acb42e2bc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 14.3.rvt",
      "InputValue": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 14.3.rvt",
      "NodeType": "ExtensionNode",
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7cb4c5a4d7744158b43d117c10964990",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b23a70c2bc1c4e5cb776ee65c63f7b46",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Splice joint",
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68aba1580a084fcc909abd9f22159f2b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "774bfec08d6646eab975b1a78194a1d4",
      "Inputs": [
        {
          "Id": "b2554cedec674fd9aa2f7fc35bab7008",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49f4b92ce2e64014a68344d009952029",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e1355331b64e7e850e717a10fd4c5e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b9b1b2e8c2648da8d551ba065b0040a",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f46b862733e044d69c1a4ec177003746",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07dbbb1674e54a9e8f6b2a156c204109",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d19b07df0f1247c09fd1a6d579459e44",
      "Inputs": [
        {
          "Id": "8c806428de07439c88b2c7d80368cc46",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "435b20457d424320a532552c70a09bd3",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "094ae248e07d4f5f9a8503e6355a10dc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b52cd842fe44268a9e03f873a26c3b2",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "96c57129254344e6bd1c6abb9e1202f3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "12abfb80ffa74a4c80e36ca5b6059b8c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "488a86843f5540f79ac3761cf6af27cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenBeams@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,double,double",
      "Id": "459b9a4619d64a2087410d17c30d3e78",
      "Inputs": [
        {
          "Id": "2cd60bde32814abbabdfc8ab677a24f3",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b371cc84bc44600a493c7d3a522544e",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "912f3c93d1004055835c52059a381fe2",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b257d1270f064a26b99599b5939bb523",
          "Name": "rangeStart",
          "Description": "A value between 0 and 180 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d180742b1c24acf99599bafa591ca04",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 180 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c30d0a882e0a4e01866419b0e1346a83",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cba86de3adc84938b32f4cc66aaec2e5",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. This is similar to ByAngleBetweenAxes except it only measures the angle using the X axis, and for the case where the structural elements meet end to end the angle can be between 0-180 degrees instead of 0-90 degrees.\n\nFilter.ByAngleBetweenBeams (node: ConnectionNode, indexFirst: int, indexSecond: int, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n180.0 - x;\n180.0;",
      "Id": "90b8f7ad4af7496a960da48abc152285",
      "Inputs": [
        {
          "Id": "b01b2cc5e20147eeba09e037fb923d1e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "450910c1b2764a999b2aa0ae3a6b76e3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09aa6924dade4144b4e176f2e0fddf05",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "160656823036451f952e9afc63fa8347",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c875f419b94b4578a6d0e81da628aa22",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "5516255dde41412eb0a025a606082bd9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94f91ca38df440cb8c4b1cc63011d25f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "41563a8003714c4aa18135c3678b78ff",
      "Inputs": [
        {
          "Id": "03362dd0d0a845ec825c9f233c9a3357",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "956ce6b2f3a44fd1add03d79f6a757e5",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlantAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4df84c2338344abcb8811edeabb2a86b",
      "Inputs": [
        {
          "Id": "af0619cf3ba54c51998a3cd7b688bf7e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dafb264330f746aebd5955dcb22f777a",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "511e9e58c36648efb95b80d378011f44",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4101364eb5e4b73aea8e682c4ab472e",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd59fb4e69ae45488fefb8ea43c30e5a",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4c774d4441b4c01a6472e9a30d338de",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slant angle (angle between the axis of the element and the vertical axis).\n\nFilter.BySlantAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlantAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "1e0aaacea6b146bc968e477636fb7fb3",
      "Inputs": [
        {
          "Id": "4202a3d8194a48d68631c2cf43f018a3",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20f8a2a15d7343da9a3b68a14d74242a",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b206f2ab51564003b5afb9726a84cf21",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "373f45da26084ba5a3f5efbad79f43df",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af92b3ff1dc04a52bbc63434afffb473",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dca9d7176d144f1bcf1d27adac41636",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slant angle (angle between the axis of the element and the vertical axis).\n\nFilter.BySlantAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "0958affa5a0e424d8a683a4e48879189",
      "Inputs": [
        {
          "Id": "4be9f37f616d45a7854c315538e8059f",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "912f852d3ae64697a76402f9a70c8d91",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0923e18cd87440c6ae2212f7e06053eb",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "052d358905314baaba3001b3d75cd1a1",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b22de565b04a4cd981a69560bf70c297",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "fea95e7cfabe407c93d18c70a3aab15f",
      "Inputs": [
        {
          "Id": "c92c2bb8e0b5457fa51a9ba199fd69b1",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b022b32952004be8bc639df06a4cb3e1",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38a8c1fc0eec49c89855b16d35485662",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c873f8fd43b41c28c309fc7173b39b0",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8af1226de8804bfa8ee5ec08d842d313",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "cc0cd0d13a0d4e4a90dafcc325b210b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "650aa939ca464a449a7661f1e2a6b093",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "c4fdb7af70434f8cbd622b683a45235a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bad36c91b9894521a148cc4327ac67dd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "3a222cada7c14e9a99cd83c0e597d0a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "83e2a46d8f54439bb2bf62e506770bd5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "9ed185b157e540ab8b371cba38a9ad11",
      "Inputs": [
        {
          "Id": "5ada637ab68c44688598d4168a164e4a",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e44e0e32232b4dd396d215823ad57c3f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "441c3c0358314b6ca2737f4d3dba6c19",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b71fa9b66fcc4c528fc64c822f416487",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d763d5446da748fe8721fa82b8bf16bd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "74b25cbf36a54f55b07d9a5d741b3d2d",
      "Inputs": [
        {
          "Id": "8e48f201efd84cca99daeff2984777ce",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "241f8acad3c148a88056caf7aee3d51b",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55c1b78feacd4f1b83d008fbb1b666d7",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "c3294096c29f4c56875f710760082477",
      "Inputs": [
        {
          "Id": "cf8c8b6a593b4e959600973dc1d2cf6b",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4eb98357dc87402499ea3ac6c857bf61",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3419e521ed6c40cb9d9ad640ea56ee87",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "e8eb84cc6fea41b5a81ebd13cb4349ab",
      "Inputs": [
        {
          "Id": "a924f51945c04d779240fd18109a828b",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4400ad952c13494e8ba2131850cd7593",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "f213a9fc880c402e8ec6341a4a2943b7",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "aba76b77473b4148b30827d38a0b687e",
      "Inputs": [
        {
          "Id": "104ebd21b4694a1fa408a91efad62ff7",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ac890ee85244ca1b943c289e208504f",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, of {applicable_number} applicable",
      "Id": "e4fdd4c2a05a4f1eb586693bd3993c41",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e54adc87e0094511bfb888686bffadfa",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bef15ab0ecea422cb9901cc7aff788e7",
      "Inputs": [
        {
          "Id": "7da675f4b54245d4acda282901a56ff4",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "285752f6deb84a5db5e17917989648c9",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e466599790aa455baff158c795f5ab8e",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a65270f546a143a3a7503fd8f2ecad09",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f0fd46a3267c423fbceba87cec3a4085",
      "Inputs": [
        {
          "Id": "c5a73fc10620443dbc649d4c6839f182",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "195b5e16084d4c0a90e99621150a9ecf",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "434e1c46e23f4a07b82028947af370f7",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "595ae11ccde544f288e9e7f89e6199fe",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "2468dcc70fe5421183de6f7d978397d8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a839e0e6e11e4ac8b541f4c43c90dbbd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "79c559e34215461f88a3166b07a690ff",
      "Inputs": [
        {
          "Id": "71115d16427b40e89531b6261d554b54",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3fe3717a6194b4bb29ce694fffc7ff9",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b64ac976423e46dab04dfc42893ff4fe",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4df3b78c6264d41b78ed675bd6cd9f3",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "c1d6f36f88424c5f9c634ccb2df3a3a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "270d658ab0a34d18b3e187b8eb199ac8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "055d903f163a4916878680c9df14060c",
      "Inputs": [
        {
          "Id": "3d0f71b3a6b24418b5ae4e068950d0e4",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3c6cb7894754323812a662beb494277",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e73c750dca0d4ee1b06b1559bb70a699",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcbb10f998864a85a5967e7abf0314a2",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "c61f9993137c4f848a829146db4fa500",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e37195eb4604d33b02e61039498bbe2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "a4a6a1cd3d2f41c9a3f297d996b87711",
      "Inputs": [
        {
          "Id": "ae313dc12c9e4f0786beb6fcb91eb88b",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11a766fbb5a2463281aca41e69fb52d2",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "723601ba829b45f89b6cdafcfff6e0fa",
      "Inputs": [
        {
          "Id": "d06dde0aed754d4f9cdc0d2276dc03bf",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "972e3f4076644038967b10da09c2d527",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3b417318bc745c1811353a61403f016",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "d442c2259b6f4259aeb1468147aa041f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "17b94e3742f048278c26b82bc3f028d0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "64fa4268479d4befab81e989f8ff8675",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25fdb24775c74b5abc380747e05f1db9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "f0e3b935957448649a4e9f965f9251bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91f86faf06fb490ea22f48d91086b094",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "05d5549b14834d34a934db2d94701a8d",
      "Inputs": [
        {
          "Id": "430c6c8eee914b518f0c03dff6ffcb0f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "432c26c402c24ccf9e22d780044903ca",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82bccf012b894c5fbec5f3dedb25693a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f346dff7c8264a3d9f31a4070634c3ec",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "48333a768e92468389d20f705538de6a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "efd7695186be4cbd8e40617bd6e568af",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "162a8b453d1a449a95df81095326396b",
      "Inputs": [
        {
          "Id": "bb80084fa1454ee788d0cac7a92b8a9d",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65072928177f4c3c9a6fa7c06f5adbf0",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "156c0ffacbef497ab6398e6e9517eb49",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec99bce21c2143baa399e728d5563a76",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "0dd2255129d94e4dbd276ed8aad108d9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "506cf2d8f6ad441b94601da3eaf88d3b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "c8de3c9ae02b480c8c81d17bfcca4a3f",
      "Inputs": [
        {
          "Id": "1beb9422749a43d28f001421581ead76",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b42b7429ca7423aa9540c2220b83cf1",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0feb94c2bd0748a1ad01e491f9e14286",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79bc681c64cb4632bd114482e85993ef",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "6b06f759ee46449d89fa6768a3ca1596",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "58208072833e4b22b0d8ba7f7c45ccb5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "e8ba84859b6f44a38a0d363965fd6186",
      "Inputs": [
        {
          "Id": "1255504daf024562a25c666b80398dbc",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65620b7336b447a19b82a9e15f4ceaf3",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9c5ab40280f4eb4853e3c65a9a4a9fd",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b2ddd35006324337bba333c3c626863e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0add46cac3054bea95c1754d3f4088c4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "a76ce6fb5bf0431cb02e357dbd12e7e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ded55fde0fe482896ac3bdf386ef7f4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "979dfc82ddcb4845ae6a5e816751e72f",
      "Inputs": [
        {
          "Id": "f491213cefcf4aa8b0b2a0117d47de73",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6655cbaa6d3f401bafc90f62640acf84",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f43d968425a74755991541698ba04c50",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "ce38572efc144e74bddcddebc60ee597",
      "Inputs": [
        {
          "Id": "c1684541621f4272b3384006ba73e1dc",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6b616baa6ab415bab01490058181c12",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "cd6f5227cdd44d979b924f719cc79f37",
      "Inputs": [
        {
          "Id": "44cde5fc2a5f42c59f47686870e21888",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a81cdae5a2c4e83ae0204c6e8a06bd2",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "ffa25fe4749f49caaa5a829391400880",
      "Inputs": [
        {
          "Id": "6b2dd8e938244171bf1a9096fc056d26",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "466baa0ea5584e109d715d58b3c69706",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9442d1c758b14a34aae095ada58a1fe6",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "a9b1fb3330374a64976a8166bb3a31e2",
      "Inputs": [
        {
          "Id": "9a023beb21ad4a0ab5a19d85c48f909b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b99a8c27024c4e5e8d40f0d2586a5756",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbdddbbb16fa43bba6fbe98a73e29e26",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3c910f0a073492da9cf46831bd20fbf",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "7e5af59958704febaef31e4eddd674ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ba1d13803f0344afbb0c4292455b5246",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "5588abca85a2485a831d76786554c0a5",
      "Inputs": [
        {
          "Id": "aa2b6571489b4098bc719fd44fd43b54",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2ddb76301804927a00dc666b7f46779",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "6a9c2e400b1746e1b9cdc455b8e8cf3a",
      "Inputs": [
        {
          "Id": "20eed04fe21449a9ba6879d30327dd06",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "25eb7afd624f47adbd3e4ddc80f3b87e",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "347c7aee5909411a954e3cc718fa77cc",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdc73c4ffe7049028f826b7f65489487",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "f920e27dafb444ab889adbe6e5c3500b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8498dafd56a414d89dbc520a3fcacbe",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "7889ef8e35e342dea0d60000412c6017",
      "Inputs": [
        {
          "Id": "06982d9b412645b18bf1a4d548af9e35",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57f55aacf9714607871901d35d56a71c",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14f0ec740b4441db976e5cfac04337bc",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f83b8012e5c4180b557f4b940957c52",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "610cd6ee21c04178ab33fecaf114bb6d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "418bdf95908343cd8df3a25e0341cc5f",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "132b39a825af47f09a6b5235cf08e61f",
      "Inputs": [
        {
          "Id": "afd2aab789ce4491a58059d95cd1a550",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8fbaca68be54f708765cf153eaa4289",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f77118de2424f1c9e0515b32c758099",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "a082f8889b5c4258ba13ea474e29b4aa",
      "Inputs": [
        {
          "Id": "d81b966a0d634256b40cc7640d9d1711",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99baf55f3e604d6ca5d1e1b2a7a889e0",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c2a1a3823d7a46b68de65eff170a955d",
      "Inputs": [
        {
          "Id": "ffc62efefaa54a3da65cdabee1a735e4",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e9b02b1e57c4f449e7e1e0bb495a160",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72e05b3f7b9f4767a7ed6d432d06d8ee",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2f45d5a6639548be8e8c5f94247c47e5",
      "Inputs": [
        {
          "Id": "be00c584d26346c5bb8e3c74a57a8dd7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "411d27f277b645f7b3b01c548b3ac2ae",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "66b944acaaf744228de80d558910558d",
      "Inputs": [
        {
          "Id": "242c796ea50b4b50aef97a5c4f54c3bf",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a5bd483ab7b446f953b08c033d192ed",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "6b8fc4c98ffc48f7ba981352faf4b21d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b7024d7f37a442e8a47b84a1e513cd26",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6d0fa7d27b7f4b098289d0c52f1ac94f",
      "Inputs": [
        {
          "Id": "09696efbcc1a4d558c5fa59aa1301601",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd469bd5374a4922bb0372ff14819025",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4b17896fe224343a82cdf8cfde17a17",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e546e52284b4f0b9e127ca53336a211",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "0ac33ec0417e403896aa55f6ff34a802",
      "Inputs": [
        {
          "Id": "fa0ad8d894fa40f98c31bc64d759fdfe",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa79aa1118694b1f99f455182fbe0323",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8a63b8af50a41f5a7b8b62a7713f0d1",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "8d7eabc4b520443cb7c00f0a640eac6d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b05ac5b013542828c256c31fe272e04",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "cb2d18af1b2245ac826dc04f9df4bedc",
      "Inputs": [
        {
          "Id": "c1066269c8bb415cac0381d335a79c1e",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "162fed8467624cfe9a40ace26b7616cf",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ee4a4b85cf1421ea2a91a83067f818c",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ec6bee3233a4f51b503c989742ff956",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b8d5d65a8494c1dbcdddb96a2014ced",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b23a668c7bc4a35a1fe0bb70c4ea97f",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "97f003d957d4498a885abc5226b07b5b",
      "Inputs": [
        {
          "Id": "d2b0b3c6ebc34cee86567cbaa8da90c2",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a9cb0ce896e4bcb9c014119b80ac093",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "cf48068f7e6f44c58dd824576fa32d9a",
      "Inputs": [
        {
          "Id": "54af3a5131694732b9ffea7039f1b7cd",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "741289e34df845bcb6ad356d891891aa",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "92e0807a1e454669a84e3e49fe49bd43",
      "Inputs": [
        {
          "Id": "47454ef65e824b64bbfa6e6ad1a5c59d",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "192654f773db48de89cee12ae557b81c",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "f81779f4c44a4fd1823a1d2556d5be9d",
      "Inputs": [
        {
          "Id": "8a7a9fd886fd42c8a2e6b05c5296cd5f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0429673f9640464ea4397e47d475a9d8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text} ({element_ids_numbers})",
      "Id": "568ea06d53db4ffd8303f9a562dc0103",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ef84f8bc188499995fcba4773528c8d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "5d78e5cf67ea4469ba0f9b27dd93ba47",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7526dc4012bf4e488d436dce28bad74a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "b7fd4e39dbd845b1b89436c9ad1397e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8dcaa7bbcb3c415e899f898e264c2594",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "b322c53c730345a6a8568779e19fc6e3",
      "Inputs": [
        {
          "Id": "b24528a39e364077bfe8c9931f272d50",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c187f43accf949eab8cd6540c6837063",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8a72e072427401e94492fe7a3c6aa76",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4eec7ca3fc134dd6b1eb2a25357816d7",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "93ebb974da25476194698b280e2a9411",
      "Inputs": [
        {
          "Id": "5a35ebc7dfbb46d0b4b51c942de3bfa7",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8da060ef52c43728c68b2285e120209",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "589c43326d8c4ec4abe1e62e8aa26083",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c70ef2b21b8c4865b285b22b38c65f7f",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3836e7acc3094fbe963ca6258738365e",
      "Inputs": [
        {
          "Id": "b15c65eb5bdc47f9bc4b19b2ca494d0e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35aebe6188a14d5bb0bb8789e41ef3fa",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76f71c008c2f445cb2225e60841dfd5e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "fb996189687d428697cf14c1d59711b4",
      "Inputs": [
        {
          "Id": "957c3a6b5b714308bfe565e0192e119e",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "11f4a488526840b9917d5a7a78031631",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0f64a343b044df695d2af7624c8460b",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "85f7512ab47a4d7a8c34a2eae81c524c",
      "Inputs": [
        {
          "Id": "ac2b14442900426dbb46ef589cb0afc8",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "616db27c1822417bb24b3a6ee393f025",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02f2ea2b6aa143b48d16a9fd41e8fe28",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "b72cead1f76242cf8263ab1b022bf423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c30c6b0b17b7481d9327d27d18028478",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "d1c8cb10aa4345b09ee7d778bd8c780d",
      "Inputs": [
        {
          "Id": "4b177875495045fc9b038e4ec5f797d6",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "617718e654f047a181c75b400b26fcbe",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4930ee6b088f4a13b56b988ed18db2ab",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "a8f4d118022840058efa72b5882ba7d3",
      "Inputs": [
        {
          "Id": "2fbf74a3f05c42858768c9b24c740f37",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d7034074ba74ee1a3aafc4724a93cfe",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b32cd2cd63c432e8744ffcba1e9b107",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "cdc2812f2dc1475f997579e1cf3beaff",
      "Inputs": [
        {
          "Id": "eced07bf2fde4977a5f7ff8a86bc286f",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e258b273d1ae48d9b8698611571b0b24",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f13aa7d922844cc8a5d6afbb080a095",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "1f6ed4fa87d34c46aa06fbb21bf08e7f",
      "Inputs": [
        {
          "Id": "c31fe0e18b614f18a370c2fdc3bbf276",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "64b3d7bd0b0d40a4a6c0138992955ef7",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ffc8dfd06e448f6965d9f91fe2af87c",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "f1a634ef036c4836b9d0cd79bc91e23f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "14f9678da713446a98ca49adea85a829",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "ff24a91a101e4ae6b3eb99f81e1fb754",
      "Inputs": [
        {
          "Id": "66195786b12b4299a1f1ef62f983f2f1",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "308bc985eff547ff87ea3ef28501d4ee",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba3f69a715b343cd95b99c2507931d5e",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "201ec90d706a445391bc19b580058dd0",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "e5f3638ae3a94b8d95278e9f50be1bf6",
      "Inputs": [
        {
          "Id": "102651ba902c45e49aa15581c7564d17",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6aea1245f854567a7054a0042aba4ed",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91a19c8352944619970fc90ce5c243ec",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "638660d8bd024298ba9c13832d134bcd",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "af5023f83f304ae1ba56472f38d146e6",
      "Inputs": [
        {
          "Id": "0fc7450176f74d67bf46a3da696fe9c9",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16b36d6d99b349aaab1bd49fe77f914e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "24942385eec64cf0826bd76f6d412b6e",
      "Inputs": [
        {
          "Id": "5d261b0f09e04172963f68908a4a27b5",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7db029477683490cb0f4978273383d61",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e625e4597fcf4060b4abe8ea04cc8902",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "6d90eab9761b4102838b9806a008b8bc",
      "Inputs": [
        {
          "Id": "1bc7cfeecc7b4cb899921064d9b89edb",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8240913374404fc9ac2b73ade9b80272",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8f4c0234dc14abcb517536fb55049e5",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "f33695f590a94efa8b47719cda2624d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61f5deebc70143a993e5240cb59bb097",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "2ea267044c4f4444aaed82a7ab2a5887",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3bb089a8ba314a86ad8dcd94e81f5e46",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "385fceab551a47e090364aaa29c90de7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d6a26cfac784f689c8591f7b0f605f4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "91d4906387384754aaf275f0ac7d8d64",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad381cd0dfde4d46aab23c329dc3d4c2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8fc7a9ed089743159dc06d963647e130",
      "Inputs": [
        {
          "Id": "97a0f40b2ab342a9b907240c74f8c793",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "deea0a2d79f54eb2a5e08fc26c168fb2",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8125c5ea8288455aa21c54126ccc5ee9",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8b61a01e1584ab7b0d0b31ef99de719",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6f575fe4563847f2a72f2219e7adf0c6",
      "Inputs": [
        {
          "Id": "1cdae718899d48919a1019393156c5f1",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48c26d4a6f7d489ea80c2fe3dd20c822",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6aa0f6a073b4d37af1138c02c374583",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "409fc2232e614b8d8ba5cd46ec08b5ba",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "7b22188d771f40259529f60ea16ae15a",
      "Inputs": [
        {
          "Id": "d1ea0aed2cbc46f783d2faed11954244",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca7c9c2c65dc4e2a876063e78fd50aec",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4ba4f1ae9ee4e67aeec4d46ade2a397",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "674725cc70ce4d82b5a1adbee28bf860",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "f601877d574f44a0ac894e73fa0568df",
      "Inputs": [
        {
          "Id": "1c3c26855df24a0bbc59084fdce3c917",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fcfdfdeb14342b4ad6280313d28f20c",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f83e48a437b44cc381c62994a3a8a6e4",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "b4ed490bc4ce4a5995551440c89291cc",
      "Inputs": [
        {
          "Id": "3aecb891269f4362b063b1fa758a3b32",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52ce76aa704146afbfecc848050f6b84",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe8e36b37b634540bb84ae23f25ef079",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "5e010da0fad445b88bcb6f79d1454848",
      "Inputs": [
        {
          "Id": "e059384278df41eeb414508206d4bad8",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e0538f1ca8840c49d38448b4e8c9ff3",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd9d29ded89544d591568d4a6fc20c17",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b41da54a897c4d47a164235013aec4bb",
      "Inputs": [
        {
          "Id": "e2bcda9ec98c4d9282b8745b7b03c0ba",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b16bd16dae348148a5fb9f34130f2c4",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "d7e53beae4474495b13ed16e42769470",
      "Inputs": [
        {
          "Id": "a3dfac9016b840898f5cad44c74f90e9",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9cde028b9e8740d3b6e80287dd4e2dd6",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "4be9f37f616d45a7854c315538e8059f",
      "Id": "eb8622eb58854e57a124b047f8840725",
      "IsHidden": "False"
    },
    {
      "Start": "00365d5f6f75422f8c6283350f8b70c6",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "90a0a503e9814ac0bc9a4134e5988c48",
      "IsHidden": "False"
    },
    {
      "Start": "1bd2d123c3d94abca7e9992dcda22716",
      "End": "dafb264330f746aebd5955dcb22f777a",
      "Id": "31ac2ef091cf42ae8a353d85dd222706",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "511e9e58c36648efb95b80d378011f44",
      "Id": "a5f3394a058e4cc79b1ffea2d248cc41",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "b206f2ab51564003b5afb9726a84cf21",
      "Id": "3ca48da01d9a4cf8abd1f4143023cf06",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "373f45da26084ba5a3f5efbad79f43df",
      "Id": "9c4fd1faf13141e289aad6340558aa7c",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "c4101364eb5e4b73aea8e682c4ab472e",
      "Id": "04f47fcc10854e32976c5a45b329b8f3",
      "IsHidden": "False"
    },
    {
      "Start": "374e1ff6640649faa07f47bcccb7bd7f",
      "End": "20f8a2a15d7343da9a3b68a14d74242a",
      "Id": "80f1637a270a44649970807294996694",
      "IsHidden": "False"
    },
    {
      "Start": "881d3b5066d2416ea41953ba13ced78d",
      "End": "1901e0d33af342ebaa77014a352c0c32",
      "Id": "b2c6b815a2d441ba845ecca322e013e5",
      "IsHidden": "False"
    },
    {
      "Start": "d0b12606021e4dbda2be3dfc4f977dc3",
      "End": "2e2c7e481b8f4c97b05b11b5cadf98fc",
      "Id": "531fd8a51b8747e3b59409e00debd515",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "5587e93c96a1461bbf95cde6a7300220",
      "Id": "4d128a78f44b4228b96e1210e441cc29",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "a9ff16241fe7408d97349addfede0721",
      "Id": "c8dc7fbad4a44ffe8e0e562a71f23577",
      "IsHidden": "False"
    },
    {
      "Start": "e3e6b35fdf5e421fac487c209e921316",
      "End": "03362dd0d0a845ec825c9f233c9a3357",
      "Id": "022a9e1cb04044708080e1bce6bc2b6d",
      "IsHidden": "False"
    },
    {
      "Start": "6af4a39229064ca09d4e222acb42e2bc",
      "End": "fcf786854a0f4dd3be94e87cc2b56554",
      "Id": "20cd8b8267ee4c67913593908e1f7278",
      "IsHidden": "False"
    },
    {
      "Start": "7cb4c5a4d7744158b43d117c10964990",
      "End": "4eb98357dc87402499ea3ac6c857bf61",
      "Id": "35cb56ab39cf4638aae8a8edd4603d0e",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "6b2dd8e938244171bf1a9096fc056d26",
      "Id": "7745ead4c11d4d0896934f161738c5ff",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "eb9f6beadc4f4d60901712fb5b246bc9",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "e5f1d801fbcf40d882f2b21972a4f09b",
      "IsHidden": "False"
    },
    {
      "Start": "b23a70c2bc1c4e5cb776ee65c63f7b46",
      "End": "162fed8467624cfe9a40ace26b7616cf",
      "Id": "e91958c14a9f44008152348f12d732db",
      "IsHidden": "False"
    },
    {
      "Start": "68aba1580a084fcc909abd9f22159f2b",
      "End": "ffc62efefaa54a3da65cdabee1a735e4",
      "Id": "1c49a94b22d84dc9905c6bb586276ddb",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "fa0ad8d894fa40f98c31bc64d759fdfe",
      "Id": "57bb481b04c1488ea3aa0bbc50d5ae93",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "4829426565a8404888a989bc69af587b",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "17061815ca91449883befa22d7ef3c73",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "1255504daf024562a25c666b80398dbc",
      "Id": "5c9f05d3dd9441e6bddf503e51333323",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "e059384278df41eeb414508206d4bad8",
      "Id": "cb614251e7594362b1b06381e25e4259",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "0feb94c2bd0748a1ad01e491f9e14286",
      "Id": "e119bf2fa90546cb9c2a3e83bd9e7203",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "156c0ffacbef497ab6398e6e9517eb49",
      "Id": "a3dc4f6ee0b541ab86f328747e54202b",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "82bccf012b894c5fbec5f3dedb25693a",
      "Id": "36beabf14c3b49f19b4990c88d0fc50e",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "a924f51945c04d779240fd18109a828b",
      "Id": "b867db96163d450a9841d5a6dea592f7",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "434e1c46e23f4a07b82028947af370f7",
      "Id": "2a7f67c448ff4c17adbbbbc0a731f432",
      "IsHidden": "False"
    },
    {
      "Start": "4b9b1b2e8c2648da8d551ba065b0040a",
      "End": "8c806428de07439c88b2c7d80368cc46",
      "Id": "d5a5faf947bd4c6e9d534f34f26dc29a",
      "IsHidden": "False"
    },
    {
      "Start": "f46b862733e044d69c1a4ec177003746",
      "End": "b2554cedec674fd9aa2f7fc35bab7008",
      "Id": "0eb2a939fab04aac99db2f4637a5f005",
      "IsHidden": "False"
    },
    {
      "Start": "07dbbb1674e54a9e8f6b2a156c204109",
      "End": "435b20457d424320a532552c70a09bd3",
      "Id": "05731ca6b12f462e8690ecedec35ac89",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "7da675f4b54245d4acda282901a56ff4",
      "Id": "8ac76d9ff00b46b6bb9b91b8f5e9819f",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "4400ad952c13494e8ba2131850cd7593",
      "Id": "8de13bd695fc4408a015570843f18ab3",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "e73c750dca0d4ee1b06b1559bb70a699",
      "Id": "366adc1b0dcc4d059bcfcc3362545343",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "ae313dc12c9e4f0786beb6fcb91eb88b",
      "Id": "278d9c1b2f4e4425848456a2b4498ca0",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "3d003ee2ea6f4cc89a3e27eac8bf95ba",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "b64ac976423e46dab04dfc42893ff4fe",
      "Id": "576fce908b6647458de161be4dfc2424",
      "IsHidden": "False"
    },
    {
      "Start": "8b52cd842fe44268a9e03f873a26c3b2",
      "End": "fd469bd5374a4922bb0372ff14819025",
      "Id": "2347fbacd45f4521867af9555720a792",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "96c57129254344e6bd1c6abb9e1202f3",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "aa2b6571489b4098bc719fd44fd43b54",
      "Id": "860aa1ee986d4cc1a52d60d2077b359c",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "06982d9b412645b18bf1a4d548af9e35",
      "Id": "33c14d26f49b42b18ce7c95e844515cf",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "242c796ea50b4b50aef97a5c4f54c3bf",
      "Id": "ffb4e1a1698f4557bec966df492e1c95",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "a3dfac9016b840898f5cad44c74f90e9",
      "Id": "81f71ec63bbb458fa8b98a813be9c04a",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "488a86843f5540f79ac3761cf6af27cf",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "c30d0a882e0a4e01866419b0e1346a83",
      "End": "31a2a03e186b41f68176345589f851fe",
      "Id": "d4b45f1786c04b5c807c6dc694d9b71b",
      "IsHidden": "False"
    },
    {
      "Start": "450910c1b2764a999b2aa0ae3a6b76e3",
      "End": "4b371cc84bc44600a493c7d3a522544e",
      "Id": "b2a692e74f304210a338aa5df63df7df",
      "IsHidden": "False"
    },
    {
      "Start": "09aa6924dade4144b4e176f2e0fddf05",
      "End": "912f3c93d1004055835c52059a381fe2",
      "Id": "4b4ba32f61064199b653660a0139c79e",
      "IsHidden": "False"
    },
    {
      "Start": "160656823036451f952e9afc63fa8347",
      "End": "b257d1270f064a26b99599b5939bb523",
      "Id": "5f3fca59d59849cb93cef62cb1c616e1",
      "IsHidden": "False"
    },
    {
      "Start": "c875f419b94b4578a6d0e81da628aa22",
      "End": "3d180742b1c24acf99599bafa591ca04",
      "Id": "afc102f328c94f8c86963cdbb8e8048c",
      "IsHidden": "False"
    },
    {
      "Start": "94f91ca38df440cb8c4b1cc63011d25f",
      "End": "b01b2cc5e20147eeba09e037fb923d1e",
      "Id": "26db719e9e7c42d399b8df2a8cdb5806",
      "IsHidden": "False"
    },
    {
      "Start": "956ce6b2f3a44fd1add03d79f6a757e5",
      "End": "5ada637ab68c44688598d4168a164e4a",
      "Id": "a9f4815d13994d61a98bc57d679f4a81",
      "IsHidden": "False"
    },
    {
      "Start": "cd59fb4e69ae45488fefb8ea43c30e5a",
      "End": "4202a3d8194a48d68631c2cf43f018a3",
      "Id": "c227f13deeff485581503011508cd6a7",
      "IsHidden": "False"
    },
    {
      "Start": "af92b3ff1dc04a52bbc63434afffb473",
      "End": "2cd60bde32814abbabdfc8ab677a24f3",
      "Id": "fa4f62f7b59043ffb290c574883d8b6a",
      "IsHidden": "False"
    },
    {
      "Start": "052d358905314baaba3001b3d75cd1a1",
      "End": "c92c2bb8e0b5457fa51a9ba199fd69b1",
      "Id": "998866abd9f344a19f57f3e210947ed3",
      "IsHidden": "False"
    },
    {
      "Start": "3c873f8fd43b41c28c309fc7173b39b0",
      "End": "af0619cf3ba54c51998a3cd7b688bf7e",
      "Id": "24391414cade46cd912f833a05016db4",
      "IsHidden": "False"
    },
    {
      "Start": "650aa939ca464a449a7661f1e2a6b093",
      "End": "912f852d3ae64697a76402f9a70c8d91",
      "Id": "39a24dd64ff14d739b37409e84be11d4",
      "IsHidden": "False"
    },
    {
      "Start": "bad36c91b9894521a148cc4327ac67dd",
      "End": "b022b32952004be8bc639df06a4cb3e1",
      "Id": "b2c182b93aa54ace939a360cb2b37086",
      "IsHidden": "False"
    },
    {
      "Start": "83e2a46d8f54439bb2bf62e506770bd5",
      "End": "241f8acad3c148a88056caf7aee3d51b",
      "Id": "d0e209eb5c1c4cbaa141aee4576b4711",
      "IsHidden": "False"
    },
    {
      "Start": "441c3c0358314b6ca2737f4d3dba6c19",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "d282def6d10247f7a80c3921cc35f7df",
      "IsHidden": "False"
    },
    {
      "Start": "441c3c0358314b6ca2737f4d3dba6c19",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "ac25398ef4494a91bab46195dad6db54",
      "IsHidden": "False"
    },
    {
      "Start": "d763d5446da748fe8721fa82b8bf16bd",
      "End": "e44e0e32232b4dd396d215823ad57c3f",
      "Id": "ddad3398a6a14e649a3a084537ced3cd",
      "IsHidden": "False"
    },
    {
      "Start": "55c1b78feacd4f1b83d008fbb1b666d7",
      "End": "12abfb80ffa74a4c80e36ca5b6059b8c",
      "Id": "5dc3ea8a55be4e7abebec0795e330b09",
      "IsHidden": "False"
    },
    {
      "Start": "3419e521ed6c40cb9d9ad640ea56ee87",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "377797ad5e7a4941b8f1c8c0925f2c5a",
      "IsHidden": "False"
    },
    {
      "Start": "f213a9fc880c402e8ec6341a4a2943b7",
      "End": "104ebd21b4694a1fa408a91efad62ff7",
      "Id": "9cbdc66f6b064125aef9e617cf2c1b37",
      "IsHidden": "False"
    },
    {
      "Start": "8ac890ee85244ca1b943c289e208504f",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "1a2fa4e2c7a9456a875042252b769311",
      "IsHidden": "False"
    },
    {
      "Start": "e54adc87e0094511bfb888686bffadfa",
      "End": "c5a73fc10620443dbc649d4c6839f182",
      "Id": "4fa4643cff904b4c9c68d1d185598831",
      "IsHidden": "False"
    },
    {
      "Start": "a65270f546a143a3a7503fd8f2ecad09",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "e38dc2ba75d44df5807365283cd09c82",
      "IsHidden": "False"
    },
    {
      "Start": "595ae11ccde544f288e9e7f89e6199fe",
      "End": "71115d16427b40e89531b6261d554b54",
      "Id": "716555919ada4ebdac3657ee2ea31a5a",
      "IsHidden": "False"
    },
    {
      "Start": "a839e0e6e11e4ac8b541f4c43c90dbbd",
      "End": "195b5e16084d4c0a90e99621150a9ecf",
      "Id": "bd096de2be4d4fb5a046974cc4d19869",
      "IsHidden": "False"
    },
    {
      "Start": "f4df3b78c6264d41b78ed675bd6cd9f3",
      "End": "3d0f71b3a6b24418b5ae4e068950d0e4",
      "Id": "fc3c9d76e95e4a3a8e6d53e29ec3796e",
      "IsHidden": "False"
    },
    {
      "Start": "270d658ab0a34d18b3e187b8eb199ac8",
      "End": "b3fe3717a6194b4bb29ce694fffc7ff9",
      "Id": "ea728b42bba34f588a3ab09d28d4dd30",
      "IsHidden": "False"
    },
    {
      "Start": "fcbb10f998864a85a5967e7abf0314a2",
      "End": "094ae248e07d4f5f9a8503e6355a10dc",
      "Id": "2a22c7c91a5547e99632167a276ae81e",
      "IsHidden": "False"
    },
    {
      "Start": "3e37195eb4604d33b02e61039498bbe2",
      "End": "b3c6cb7894754323812a662beb494277",
      "Id": "0b7a9977d76f4b89bd5a2d1d0d08ffb6",
      "IsHidden": "False"
    },
    {
      "Start": "11a766fbb5a2463281aca41e69fb52d2",
      "End": "d06dde0aed754d4f9cdc0d2276dc03bf",
      "Id": "927a0b92d445406e8cd28b1465bf486e",
      "IsHidden": "False"
    },
    {
      "Start": "f3b417318bc745c1811353a61403f016",
      "End": "09696efbcc1a4d558c5fa59aa1301601",
      "Id": "f3457fe4ec144d25b69417dabc8ad060",
      "IsHidden": "False"
    },
    {
      "Start": "17b94e3742f048278c26b82bc3f028d0",
      "End": "972e3f4076644038967b10da09c2d527",
      "Id": "3fcc339362184ac6a4053046e8151ab1",
      "IsHidden": "False"
    },
    {
      "Start": "17b94e3742f048278c26b82bc3f028d0",
      "End": "1fcfdfdeb14342b4ad6280313d28f20c",
      "Id": "fa2e5a688bed4c19a22bfccf644fbe4a",
      "IsHidden": "False"
    },
    {
      "Start": "17b94e3742f048278c26b82bc3f028d0",
      "End": "52ce76aa704146afbfecc848050f6b84",
      "Id": "a481dab4e25f4a1a9ee26ec5b41e34ff",
      "IsHidden": "False"
    },
    {
      "Start": "17b94e3742f048278c26b82bc3f028d0",
      "End": "8e0538f1ca8840c49d38448b4e8c9ff3",
      "Id": "b1952bda5673443aaaa9283e49917d71",
      "IsHidden": "False"
    },
    {
      "Start": "25fdb24775c74b5abc380747e05f1db9",
      "End": "f4b17896fe224343a82cdf8cfde17a17",
      "Id": "d3cd68d0ca034143ae2c30653b321cf7",
      "IsHidden": "False"
    },
    {
      "Start": "91f86faf06fb490ea22f48d91086b094",
      "End": "430c6c8eee914b518f0c03dff6ffcb0f",
      "Id": "4ab2bf5261ee417a947a4bed52113125",
      "IsHidden": "False"
    },
    {
      "Start": "f346dff7c8264a3d9f31a4070634c3ec",
      "End": "9a023beb21ad4a0ab5a19d85c48f909b",
      "Id": "a54ba9240e2343d7b5281808676702f3",
      "IsHidden": "False"
    },
    {
      "Start": "efd7695186be4cbd8e40617bd6e568af",
      "End": "432c26c402c24ccf9e22d780044903ca",
      "Id": "d840822b43d24a869cb4e18f895b9132",
      "IsHidden": "False"
    },
    {
      "Start": "ec99bce21c2143baa399e728d5563a76",
      "End": "1beb9422749a43d28f001421581ead76",
      "Id": "25e2ef147f964f38bf26adbbd17a6cb8",
      "IsHidden": "False"
    },
    {
      "Start": "506cf2d8f6ad441b94601da3eaf88d3b",
      "End": "65072928177f4c3c9a6fa7c06f5adbf0",
      "Id": "5bff4d3226d74725bf0c770586392894",
      "IsHidden": "False"
    },
    {
      "Start": "79bc681c64cb4632bd114482e85993ef",
      "End": "e466599790aa455baff158c795f5ab8e",
      "Id": "088530878ec1429d95d6e8ce7c5c3935",
      "IsHidden": "False"
    },
    {
      "Start": "58208072833e4b22b0d8ba7f7c45ccb5",
      "End": "8b42b7429ca7423aa9540c2220b83cf1",
      "Id": "86be839377bd4e72b1d1a3a716cc80fe",
      "IsHidden": "False"
    },
    {
      "Start": "d9c5ab40280f4eb4853e3c65a9a4a9fd",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "fe656c04cd51429b931ca36144fb90c3",
      "IsHidden": "False"
    },
    {
      "Start": "0add46cac3054bea95c1754d3f4088c4",
      "End": "65620b7336b447a19b82a9e15f4ceaf3",
      "Id": "830571162fda418e831dbb14b969268e",
      "IsHidden": "False"
    },
    {
      "Start": "8ded55fde0fe482896ac3bdf386ef7f4",
      "End": "466baa0ea5584e109d715d58b3c69706",
      "Id": "17904ccc07ff499a89d1354cfa265aa9",
      "IsHidden": "False"
    },
    {
      "Start": "f43d968425a74755991541698ba04c50",
      "End": "c1684541621f4272b3384006ba73e1dc",
      "Id": "a3b5d7ee6b3f455d94a90a4b88883738",
      "IsHidden": "False"
    },
    {
      "Start": "f6b616baa6ab415bab01490058181c12",
      "End": "44cde5fc2a5f42c59f47686870e21888",
      "Id": "6c58b02b44034c5a9c1443b0ef9a4ac9",
      "IsHidden": "False"
    },
    {
      "Start": "7a81cdae5a2c4e83ae0204c6e8a06bd2",
      "End": "fbdddbbb16fa43bba6fbe98a73e29e26",
      "Id": "26194777c6dc46a29671563d90e6a4bc",
      "IsHidden": "False"
    },
    {
      "Start": "9442d1c758b14a34aae095ada58a1fe6",
      "End": "f491213cefcf4aa8b0b2a0117d47de73",
      "Id": "c4e7505ee30d45fab1d7f930a5febff4",
      "IsHidden": "False"
    },
    {
      "Start": "a3c910f0a073492da9cf46831bd20fbf",
      "End": "bb80084fa1454ee788d0cac7a92b8a9d",
      "Id": "a9d2b2ae02f1487da5de515d62341d26",
      "IsHidden": "False"
    },
    {
      "Start": "ba1d13803f0344afbb0c4292455b5246",
      "End": "b99a8c27024c4e5e8d40f0d2586a5756",
      "Id": "55049b1dbfce4e9d8746b15180a7f70a",
      "IsHidden": "False"
    },
    {
      "Start": "f2ddb76301804927a00dc666b7f46779",
      "End": "20eed04fe21449a9ba6879d30327dd06",
      "Id": "be527fea17284686b1120c6bf45091f8",
      "IsHidden": "False"
    },
    {
      "Start": "bdc73c4ffe7049028f826b7f65489487",
      "End": "d81b966a0d634256b40cc7640d9d1711",
      "Id": "b302625b825e4140b8c2d917ffae7f2e",
      "IsHidden": "False"
    },
    {
      "Start": "e8498dafd56a414d89dbc520a3fcacbe",
      "End": "afd2aab789ce4491a58059d95cd1a550",
      "Id": "d9da639115054a8f827a4d92427e3f61",
      "IsHidden": "False"
    },
    {
      "Start": "14f0ec740b4441db976e5cfac04337bc",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "4a53748a5ce54b95a000fdabf2027a65",
      "IsHidden": "False"
    },
    {
      "Start": "14f0ec740b4441db976e5cfac04337bc",
      "End": "4ee4a4b85cf1421ea2a91a83067f818c",
      "Id": "0024db961c59455e8a50762dade56b10",
      "IsHidden": "False"
    },
    {
      "Start": "14f0ec740b4441db976e5cfac04337bc",
      "End": "0fc7450176f74d67bf46a3da696fe9c9",
      "Id": "dbb13d474c2746aea025bb8f66ff3ee9",
      "IsHidden": "False"
    },
    {
      "Start": "14f0ec740b4441db976e5cfac04337bc",
      "End": "e2bcda9ec98c4d9282b8745b7b03c0ba",
      "Id": "2b3ce28558654b8789ce22cdb485e16b",
      "IsHidden": "False"
    },
    {
      "Start": "418bdf95908343cd8df3a25e0341cc5f",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "3a5e09077a244970872fbe7bae96077a",
      "IsHidden": "False"
    },
    {
      "Start": "418bdf95908343cd8df3a25e0341cc5f",
      "End": "2ec6bee3233a4f51b503c989742ff956",
      "Id": "65c3cf3e52cf40e4a1fb674f6394f834",
      "IsHidden": "False"
    },
    {
      "Start": "0f77118de2424f1c9e0515b32c758099",
      "End": "25eb7afd624f47adbd3e4ddc80f3b87e",
      "Id": "45f000b385534eee9115fc71398ef9db",
      "IsHidden": "False"
    },
    {
      "Start": "99baf55f3e604d6ca5d1e1b2a7a889e0",
      "End": "57f55aacf9714607871901d35d56a71c",
      "Id": "f1f3f8254a5a4176b5c7c30df25e414c",
      "IsHidden": "False"
    },
    {
      "Start": "72e05b3f7b9f4767a7ed6d432d06d8ee",
      "End": "8e48f201efd84cca99daeff2984777ce",
      "Id": "447b0dff4ec248c286ba2a1672cfff9f",
      "IsHidden": "False"
    },
    {
      "Start": "72e05b3f7b9f4767a7ed6d432d06d8ee",
      "End": "cf8c8b6a593b4e959600973dc1d2cf6b",
      "Id": "98106e40026d4d5c88b131022ca3113a",
      "IsHidden": "False"
    },
    {
      "Start": "411d27f277b645f7b3b01c548b3ac2ae",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "a0a8731b5792461e958cb188ef0e45a9",
      "IsHidden": "False"
    },
    {
      "Start": "2a5bd483ab7b446f953b08c033d192ed",
      "End": "be00c584d26346c5bb8e3c74a57a8dd7",
      "Id": "87605f8100e64c9384a8e4d662f2ef9b",
      "IsHidden": "False"
    },
    {
      "Start": "b7024d7f37a442e8a47b84a1e513cd26",
      "End": "d8fbaca68be54f708765cf153eaa4289",
      "Id": "6e81a9324e124c74a21146c59f02ed2b",
      "IsHidden": "False"
    },
    {
      "Start": "6e546e52284b4f0b9e127ca53336a211",
      "End": "deea0a2d79f54eb2a5e08fc26c168fb2",
      "Id": "1a95421ae91c49f584f52eb72efbcb52",
      "IsHidden": "False"
    },
    {
      "Start": "b8a63b8af50a41f5a7b8b62a7713f0d1",
      "End": "c1066269c8bb415cac0381d335a79c1e",
      "Id": "36cf2edbe94e4c0ebc28c564dc88c98d",
      "IsHidden": "False"
    },
    {
      "Start": "b8a63b8af50a41f5a7b8b62a7713f0d1",
      "End": "d2b0b3c6ebc34cee86567cbaa8da90c2",
      "Id": "6844bd9d29464253af23d5c1aadfd7df",
      "IsHidden": "False"
    },
    {
      "Start": "9b05ac5b013542828c256c31fe272e04",
      "End": "aa79aa1118694b1f99f455182fbe0323",
      "Id": "a931a22aabbd4b0da2ed7f2c384fe144",
      "IsHidden": "False"
    },
    {
      "Start": "0b23a668c7bc4a35a1fe0bb70c4ea97f",
      "End": "4b177875495045fc9b038e4ec5f797d6",
      "Id": "0216f65a5e5c4778a793bd8943eead2b",
      "IsHidden": "False"
    },
    {
      "Start": "1a9cb0ce896e4bcb9c014119b80ac093",
      "End": "54af3a5131694732b9ffea7039f1b7cd",
      "Id": "57e34ad87d9b4379a2c8c1d4c4694b24",
      "IsHidden": "False"
    },
    {
      "Start": "741289e34df845bcb6ad356d891891aa",
      "End": "47454ef65e824b64bbfa6e6ad1a5c59d",
      "Id": "4e438460c69b46b1b87709008bd3cc87",
      "IsHidden": "False"
    },
    {
      "Start": "741289e34df845bcb6ad356d891891aa",
      "End": "8a7a9fd886fd42c8a2e6b05c5296cd5f",
      "Id": "be3ccf29cd4c4a459d7d0c59b514fa82",
      "IsHidden": "False"
    },
    {
      "Start": "192654f773db48de89cee12ae557b81c",
      "End": "616db27c1822417bb24b3a6ee393f025",
      "Id": "49343572148b42fbbcb6bc2b76d25e7f",
      "IsHidden": "False"
    },
    {
      "Start": "0429673f9640464ea4397e47d475a9d8",
      "End": "11f4a488526840b9917d5a7a78031631",
      "Id": "1825aa99128448d384ac5ca84781c258",
      "IsHidden": "False"
    },
    {
      "Start": "8ef84f8bc188499995fcba4773528c8d",
      "End": "b24528a39e364077bfe8c9931f272d50",
      "Id": "1c3dcdae462a4badaf7707ba947b1c66",
      "IsHidden": "False"
    },
    {
      "Start": "7526dc4012bf4e488d436dce28bad74a",
      "End": "c187f43accf949eab8cd6540c6837063",
      "Id": "c1ad9a352ef8401db432e13955dec6a4",
      "IsHidden": "False"
    },
    {
      "Start": "8dcaa7bbcb3c415e899f898e264c2594",
      "End": "f8da060ef52c43728c68b2285e120209",
      "Id": "3a56e77a129f47bebf99cdf0ea24db95",
      "IsHidden": "False"
    },
    {
      "Start": "4eec7ca3fc134dd6b1eb2a25357816d7",
      "End": "5a35ebc7dfbb46d0b4b51c942de3bfa7",
      "Id": "b713bdc002da4862864a238ae542a425",
      "IsHidden": "False"
    },
    {
      "Start": "c70ef2b21b8c4865b285b22b38c65f7f",
      "End": "b15c65eb5bdc47f9bc4b19b2ca494d0e",
      "Id": "824e6cfa14ed459fa00fbda3e8cca90d",
      "IsHidden": "False"
    },
    {
      "Start": "76f71c008c2f445cb2225e60841dfd5e",
      "End": "5d261b0f09e04172963f68908a4a27b5",
      "Id": "9d74d3070bfc4ddd8d100f1bfa3e61e2",
      "IsHidden": "False"
    },
    {
      "Start": "a0f64a343b044df695d2af7624c8460b",
      "End": "b8a72e072427401e94492fe7a3c6aa76",
      "Id": "f0c91f3b55ee4f78b3f02ed27a9dc73d",
      "IsHidden": "False"
    },
    {
      "Start": "02f2ea2b6aa143b48d16a9fd41e8fe28",
      "End": "589c43326d8c4ec4abe1e62e8aa26083",
      "Id": "2236b2dae7df4bd78984ec56ca42c323",
      "IsHidden": "False"
    },
    {
      "Start": "c30c6b0b17b7481d9327d27d18028478",
      "End": "957c3a6b5b714308bfe565e0192e119e",
      "Id": "66cc274eccd348cc88d54ca8f6682135",
      "IsHidden": "False"
    },
    {
      "Start": "c30c6b0b17b7481d9327d27d18028478",
      "End": "ac2b14442900426dbb46ef589cb0afc8",
      "Id": "e9488f3a7d1c4f308c043a97fcd9f75d",
      "IsHidden": "False"
    },
    {
      "Start": "617718e654f047a181c75b400b26fcbe",
      "End": "eced07bf2fde4977a5f7ff8a86bc286f",
      "Id": "5a5f0c09126e43569a783aad1fd25243",
      "IsHidden": "False"
    },
    {
      "Start": "4930ee6b088f4a13b56b988ed18db2ab",
      "End": "2fbf74a3f05c42858768c9b24c740f37",
      "Id": "e6fefb4d6e104cd7a445b1a9eabec25f",
      "IsHidden": "False"
    },
    {
      "Start": "8d7034074ba74ee1a3aafc4724a93cfe",
      "End": "c31fe0e18b614f18a370c2fdc3bbf276",
      "Id": "e397e0c19f714aa7b7c439cfccaece86",
      "IsHidden": "False"
    },
    {
      "Start": "8b32cd2cd63c432e8744ffcba1e9b107",
      "End": "66195786b12b4299a1f1ef62f983f2f1",
      "Id": "56567fea1547417d9a1bd8182482ab2e",
      "IsHidden": "False"
    },
    {
      "Start": "8b32cd2cd63c432e8744ffcba1e9b107",
      "End": "102651ba902c45e49aa15581c7564d17",
      "Id": "00d60794bb9b455086ed85bca1f29ec2",
      "IsHidden": "False"
    },
    {
      "Start": "1f13aa7d922844cc8a5d6afbb080a095",
      "End": "8240913374404fc9ac2b73ade9b80272",
      "Id": "30341ee3398a4c96bcaaf717ab63b63f",
      "IsHidden": "False"
    },
    {
      "Start": "6ffc8dfd06e448f6965d9f91fe2af87c",
      "End": "e258b273d1ae48d9b8698611571b0b24",
      "Id": "9a2f67e1e7924dba9521019c6926520e",
      "IsHidden": "False"
    },
    {
      "Start": "14f9678da713446a98ca49adea85a829",
      "End": "308bc985eff547ff87ea3ef28501d4ee",
      "Id": "2aec0a2fab59430982eb5ed1cb6c49f5",
      "IsHidden": "False"
    },
    {
      "Start": "201ec90d706a445391bc19b580058dd0",
      "End": "d6aea1245f854567a7054a0042aba4ed",
      "Id": "58ac96f93d654dfb97e6fbb2d02b5e06",
      "IsHidden": "False"
    },
    {
      "Start": "91a19c8352944619970fc90ce5c243ec",
      "End": "64b3d7bd0b0d40a4a6c0138992955ef7",
      "Id": "27b5e2c8545f4845bc43d1c7d1471530",
      "IsHidden": "False"
    },
    {
      "Start": "16b36d6d99b349aaab1bd49fe77f914e",
      "End": "1bc7cfeecc7b4cb899921064d9b89edb",
      "Id": "96d964c004cb4866bed0de2e90f1018f",
      "IsHidden": "False"
    },
    {
      "Start": "d8f4c0234dc14abcb517536fb55049e5",
      "End": "7db029477683490cb0f4978273383d61",
      "Id": "b9cbf22351bc4a4fa90402b659f97b4e",
      "IsHidden": "False"
    },
    {
      "Start": "61f5deebc70143a993e5240cb59bb097",
      "End": "3e9b02b1e57c4f449e7e1e0bb495a160",
      "Id": "095f69c51dd94998a9215f9299f3fbd4",
      "IsHidden": "False"
    },
    {
      "Start": "3bb089a8ba314a86ad8dcd94e81f5e46",
      "End": "8125c5ea8288455aa21c54126ccc5ee9",
      "Id": "212e05fecd474606ab0e0d5bea24cb0b",
      "IsHidden": "False"
    },
    {
      "Start": "8d6a26cfac784f689c8591f7b0f605f4",
      "End": "c6aa0f6a073b4d37af1138c02c374583",
      "Id": "433fa42514504937bb901c99a614771c",
      "IsHidden": "False"
    },
    {
      "Start": "ad381cd0dfde4d46aab23c329dc3d4c2",
      "End": "f4ba4f1ae9ee4e67aeec4d46ade2a397",
      "Id": "4ee0be6f7dbf4e0d80051ae3fc4973c0",
      "IsHidden": "False"
    },
    {
      "Start": "d8b61a01e1584ab7b0d0b31ef99de719",
      "End": "48c26d4a6f7d489ea80c2fe3dd20c822",
      "Id": "910928a978cc4967b24573c2284405d2",
      "IsHidden": "False"
    },
    {
      "Start": "409fc2232e614b8d8ba5cd46ec08b5ba",
      "End": "ca7c9c2c65dc4e2a876063e78fd50aec",
      "Id": "0d2d8080f59b491aa3dd44f02d9e1978",
      "IsHidden": "False"
    },
    {
      "Start": "674725cc70ce4d82b5a1adbee28bf860",
      "End": "285752f6deb84a5db5e17917989648c9",
      "Id": "af83dee81ceb4d2692c2e7178870dc30",
      "IsHidden": "False"
    },
    {
      "Start": "f83e48a437b44cc381c62994a3a8a6e4",
      "End": "97a0f40b2ab342a9b907240c74f8c793",
      "Id": "964eb4ae4ec445499ee8ba38fbe6bec8",
      "IsHidden": "False"
    },
    {
      "Start": "fe8e36b37b634540bb84ae23f25ef079",
      "End": "1cdae718899d48919a1019393156c5f1",
      "Id": "39b676076019456c91b4b319f57d1b92",
      "IsHidden": "False"
    },
    {
      "Start": "bd9d29ded89544d591568d4a6fc20c17",
      "End": "d1ea0aed2cbc46f783d2faed11954244",
      "Id": "3545131e43dd403a90e029064f8ccbf6",
      "IsHidden": "False"
    },
    {
      "Start": "3b16bd16dae348148a5fb9f34130f2c4",
      "End": "1c3c26855df24a0bbc59084fdce3c917",
      "Id": "ae5c084019364d2fb362288c47820eea",
      "IsHidden": "False"
    },
    {
      "Start": "9cde028b9e8740d3b6e80287dd4e2dd6",
      "End": "3aecb891269f4362b063b1fa758a3b32",
      "Id": "ea7d480c34cb425a848b1dbe11f15d10",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TfM9xR5nuKi3fSjd9KsCXzPcUeZ7iot30o3fSgCXzAASSMVyfiLxddWtrZy2UKi3uJhGZZDtdkMbtlBg7fujlh36V0sjfu36fdP8q8/8THb4d0P/AK7R/wDpPJQI6TwhrVtfC8jSaQS+duWG5YmQL5aZIyTkbt3IyOtdHvrxiNJLm5gghUvcSPiIK2whgC2Q3bAUnPXiu1lsrv8AsG5j1K+a/ZYXO3GE+6cA93x6t+QoA7LzPcUeZ7ioI2/dp0+6P5U7d9KBkvme4o8z3FRbvpRu+lAEvme4oqLd9KKAI91G6ot1G6qES7qN1RbqN1AD5G/dv/un+VcB4sbb4b0M/wDTaP8A9J5K7qRv3b/7p/lXBeMm2+F9DP8A02i/9J5KQjJ8OybvE2kj/prJ/wCiJa9A1P8A5Bl5/wBcJP8A0E15x4Xfd4q0gf8ATWT/ANES16Pqn/IMvP8ArhJ/6CaQGxG37tP90fyp26oI2/dp/uj+VO3VQyXdRuqLdRuoAl3UVFuooAiyKMio91G6mBJkUZFR7qN1ABdTR29tLJLIscaqSzucADHUmuE8auD4S0JlOQZoiCP+veSl+OEwh+FfiGQ3N9aBbcnz9MiElynvGpVst+Bqv4wbb4F8OHLH57flhg/8e0nUetYe0bqunbZJ/maumlSVS+7a/Ix/CLlvFmkf9dJf/SeWvTtU/wCQZef9cJP/AEE15T4NuF/4TTRoy3zmSUhe/wDx7y816pq//IIv+n/HvJ97p9w1d106GXK1a/UuWtzFcwK8UiyqPlLIcjI4IqbIrz34FN/xbHS/m1Rvnm51lAt3/rW/1gAGPbjpiu+3UqM/aU4zfVGtWHs6koLoyTIoyKj3Ubq1MiTIoqPdRQBFuo3VFuo3VQiXdRuqLdRuoA5j4q2cupeAdWtYL2fTppo9i3drt8yI5+8u4EZ+oNcV4m16+1TwnoSxWMsWnRvboLo4Lu4ibJGSBjaHBAz9QeB03xqP/Fr/ABB/yEv+Pc/8gc4u/wDtl/tVW8dYT4e+G8ZA32456/8AHtJ1ryKtGdXFNKbiuVbWvu+p6lOtClhk3BSfM99tl0OB8Fzm4+MHhnK6kSiXQLW7MLP/AI95f9ep/j/uZz/Fg17xrB26PqBxn/RpOv8AuGvE/A2ni4+JehXv2m6Q25mQQRykQyb7ebl1/iIxx6ZNe26x/wAgi/6f8e8nXp9w0YNOPtYylzNS3+SJxjUnSlGNk4rT5s5f4S6e2j+BbKza8ur9opJQbm9k3yvmQn5m74zj6AV2O6vP/gehh+GumJ5GpWuHm/c6xKJLpf3rf6xgzZ9uTxiu73V2YS/1end9F+Rhiv8AeJ6dWS7qN1RbqN1dZyEu6iot1FAEW4+lG4+lRUVQEu4+lG4+lRUUAYfxA8Pz+LPB+paRb3M9lLdR+WLm2l8qSLn7ytg4I+hrF+Iy+R4A8Ppndsmt13Hvi2kGa7SQ/u3+hri/iiceA9EP/TzB/wCk8tYumlU5+r0+7/hy3UbgodFqef8AgaMS/F3wxKbO8lMa3QF1FOVt4s20vEibhuZv4TtOMHpXvmsZ/si/wMn7PJgf8ANeDfDuxSf4oeH7xmlEkP2hUCzuqENby53Rg7WPTBOcc46171qv/ILvf+uEn/oJrmowlGVTm6y09LL+uhtWnGSp8vSP6v8Arqc18PfDDeDfCNlpJmmuDCXffcTNNJ8zFsM7csRnFdHuPpUEZ/dp9BTq7KcFTioLZGM5upJzfUl3H0o3H0qKirIJdx9KKiooAj3f5zRu/wA5qLd7mjd7mqsIl3f5zRu/zmot3uaN3uaLAPkb92/0PeuM+KzbfAGif9fMH/pPLXXSN+7fk9DXJ+PLW48UeDNMtNKiN3LA8M7srAKQIXUhSfvHLDp6HntUS3QHEfDN8/EDRR/tTf8ApPLXuurf8gq9/wCuEn/oJrwX4YrJD8SdIhmjeKVHnDxyKVZT9ml4IPIr3rVv+QVe/wDXCT/0E1EtwRSjb92n0Henbv8AOagjb92nJ6Cnbvc1tYCXd/nNG7/Oai3e5o3e5osBLu/zmiot3uaKLARbz6/pRvPr+lFFUAbz6/pRvPr+lFFABvPr+lG8+v6UUUAU7iO1TWNKv5oQ0tvK4E4jLOimGUYyBnBJx+NXLu8n1KNoyDbWrgqyD/WOp6gn+HPoOfcUUVPKm7gAbHA4H0o3n1/SiiqAN59f0o3n1/SiigA3n1/SiiigD//Z",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4322.2529579435295,
        "Y": -856.98449129380128
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3964.2529579435295,
        "Y": -856.98449129380128
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2715.1041781902991,
        "Y": -715.86667627257339
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2969.1041781902991,
        "Y": -681.7266762725734
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1814.1041781902991,
        "Y": -334.72667627257346
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Column Slant Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1814.1041781902991,
        "Y": -183.36667627257339
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Column Slant Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1814.1041781902991,
        "Y": -31.366676272573386
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1356.1041781902991,
        "Y": -105.7266762725734
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "596909f5799446a7820a3e674d2f49c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1147.7494019481971,
        "Y": -97.744620687392683
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 770.74940194819715,
        "Y": -116.60462068739264
      },
      {
        "ShowGeometry": true,
        "Name": "Beam Section Type",
        "Id": "3db0ae870aae4d4e8fccea48976c3b33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 770.74940194819715,
        "Y": 34.755379312607346
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "145ece1505dd4e13b5adb581f63e7bf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1577.7494019481971,
        "Y": -6.7446206873926826
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e1d42da2f0d04115ba4c333d965e15ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1147.7494019481971,
        "Y": 118.39537931260736
      },
      {
        "ShowGeometry": true,
        "Name": "3. Library file path",
        "Id": "5c1fecff026548af92d1d0d712d29ce2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4725.4724930478842,
        "Y": 1245.7896966791759
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6063.5580434913927,
        "Y": 631.21821339920837
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3420.5247477960979,
        "Y": 665.78195553552075
      },
      {
        "ShowGeometry": true,
        "Name": "4. Connection family to place",
        "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6203.8862481016931,
        "Y": 727.66812928489958
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3867.5247477960979,
        "Y": 700.08846234087935
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4802.4787158814715,
        "Y": 758.99478032631669
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4548.4787158814715,
        "Y": 793.13478032631667
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5217.4787158814715,
        "Y": 500.29355416179635
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5217.4787158814715,
        "Y": 1017.696006490837
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5647.9689003955918,
        "Y": 828.26871405229
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15455.311546652983,
        "Y": 558.44005181692773
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7333.2533235892988,
        "Y": 404.60031403565182
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7079.2533235892988,
        "Y": 438.74031403565181
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7748.2533235892988,
        "Y": 404.60031403565182
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8096.2533235892988,
        "Y": 404.60031403565182
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7757.1915853057953,
        "Y": -5.4257491416146451
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7342.1915853057953,
        "Y": -5.4257491416146451
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8105.1915853057953,
        "Y": -5.4257491416146451
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7088.1915853057953,
        "Y": 28.71425085838537
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8404.2533235892988,
        "Y": 404.60031403565182
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8413.1915853057944,
        "Y": -5.4257491416146451
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7352.0085821743178,
        "Y": -696.47501705297032
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7098.0085821743178,
        "Y": -662.33501705297033
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7767.0085821743178,
        "Y": -696.47501705297032
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8115.0085821743178,
        "Y": -696.47501705297032
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8423.0085821743178,
        "Y": -696.47501705297032
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7362.694755414328,
        "Y": 920.667030078102
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7840.694755414328,
        "Y": 920.667030078102
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8889.694755414328,
        "Y": 920.667030078102
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "774bfec08d6646eab975b1a78194a1d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11632.460162338712,
        "Y": 1154.9229758566305
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11378.460162338712,
        "Y": 1155.0629758566308
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11632.460162338712,
        "Y": 1372.0629758566308
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14805.311546652983,
        "Y": 558.44005181692773
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7350.67641115993,
        "Y": 1321.067146814438
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7786.67641115993,
        "Y": 1304.067146814438
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8176.67641115993,
        "Y": 1350.0503714462895
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8484.67641115993,
        "Y": 1350.0503714462895
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "d19b07df0f1247c09fd1a6d579459e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12054.460162338712,
        "Y": 1168.9229758566305
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6947.694755414328,
        "Y": 920.667030078102
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6693.694755414328,
        "Y": 954.807030078102
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 302.18430107168103,
        "Y": 1015.0466195792469
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2288.3812924136082,
        "Y": 957.49895214151059
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1777.3812924136082,
        "Y": 1031.4989521415105
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1354.3812924136082,
        "Y": 1031.4989521415105
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2799.3812924136082,
        "Y": 957.63895214151069
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2791.4341653373494,
        "Y": 1139.6389521415108
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3685.0048954263711,
        "Y": 850.95011453413656
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3665.4724930478842,
        "Y": 1211.7896966791759
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenBeams",
        "Id": "459b9a4619d64a2087410d17c30d3e78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -510.10417819029908,
        "Y": -138.86667627257339
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "90b8f7ad4af7496a960da48abc152285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -929.10417819029908,
        "Y": 17.693323727426559
      },
      {
        "ShowGeometry": true,
        "Name": "Colinearity tolerance (degrees)",
        "Id": "5516255dde41412eb0a025a606082bd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1356.1041781902991,
        "Y": 46.693323727426559
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "41563a8003714c4aa18135c3678b78ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2376.4814687098346,
        "Y": 50.475247413872637
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlantAngle",
        "Id": "4df84c2338344abcb8811edeabb2a86b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1356.1041781902991,
        "Y": -356.86667627257344
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlantAngle",
        "Id": "1e0aaacea6b146bc968e477636fb7fb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -929.10417819029908,
        "Y": -233.86667627257344
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "0958affa5a0e424d8a683a4e48879189",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2222.1041781902991,
        "Y": -641.86667627257339
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "fea95e7cfabe407c93d18c70a3aab15f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1814.1041781902991,
        "Y": -550.86667627257339
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cc0cd0d13a0d4e4a90dafcc325b210b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2715.1041781902991,
        "Y": -533.7266762725734
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c4fdb7af70434f8cbd622b683a45235a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2222.1041781902991,
        "Y": -425.7266762725734
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3a222cada7c14e9a99cd83c0e597d0a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4472.0048954263711,
        "Y": 885.09011453413666
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "9ed185b157e540ab8b371cba38a9ad11",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2832.4814687098346,
        "Y": 109.47524741387264
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b71fa9b66fcc4c528fc64c822f416487",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2376.4814687098346,
        "Y": 202.61524741387262
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "74b25cbf36a54f55b07d9a5d741b3d2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4218.0048954263711,
        "Y": 850.95011453413656
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "c3294096c29f4c56875f710760082477",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4198.4724930478842,
        "Y": 1211.7896966791759
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "e8eb84cc6fea41b5a81ebd13cb4349ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8276.694755414328,
        "Y": 920.667030078102
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "aba76b77473b4148b30827d38a0b687e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8581.694755414328,
        "Y": 920.667030078102
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e4fdd4c2a05a4f1eb586693bd3993c41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9513.4370802456742,
        "Y": 947.11644424315045
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "bef15ab0ecea422cb9901cc7aff788e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15052.311546652983,
        "Y": 558.44005181692773
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f0fd46a3267c423fbceba87cec3a4085",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9834.4370802456742,
        "Y": 1049.1164442431505
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2468dcc70fe5421183de6f7d978397d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9513.4370802456742,
        "Y": 1185.1164442431505
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "79c559e34215461f88a3166b07a690ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10238.437080245674,
        "Y": 1140.1164442431505
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c1d6f36f88424c5f9c634ccb2df3a3a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9834.4370802456742,
        "Y": 1265.1164442431507
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "055d903f163a4916878680c9df14060c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10642.437080245674,
        "Y": 1232.1164442431502
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c61f9993137c4f848a829146db4fa500",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10238.437080245674,
        "Y": 1358.1164442431505
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "a4a6a1cd3d2f41c9a3f297d996b87711",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12649.685873068905,
        "Y": 1416.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "723601ba829b45f89b6cdafcfff6e0fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12957.685873068905,
        "Y": 1404.137401932772
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d442c2259b6f4259aeb1468147aa041f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12649.685873068905,
        "Y": 1264.7774019327724
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "64fa4268479d4befab81e989f8ff8675",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12957.685873068905,
        "Y": 1585.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f0e3b935957448649a4e9f965f9251bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10168.271866370093,
        "Y": -157.26192280656505
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "05d5549b14834d34a934db2d94701a8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10513.271866370093,
        "Y": 0.73807719343494682
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "48333a768e92468389d20f705538de6a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10168.271866370093,
        "Y": 192.73807719343495
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "162a8b453d1a449a95df81095326396b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11321.271866370093,
        "Y": 182.73807719343495
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0dd2255129d94e4dbd276ed8aad108d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10917.271866370093,
        "Y": 307.73807719343495
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "c8de3c9ae02b480c8c81d17bfcca4a3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11725.271866370093,
        "Y": 273.73807719343495
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "6b06f759ee46449d89fa6768a3ca1596",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11321.271866370093,
        "Y": 398.73807719343495
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "e8ba84859b6f44a38a0d363965fd6186",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6935.67641115993,
        "Y": 1321.067146814438
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b2ddd35006324337bba333c3c626863e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6681.67641115993,
        "Y": 1355.2071468144381
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a76ce6fb5bf0431cb02e357dbd12e7e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7095.7073613961784,
        "Y": -306.40135812343806
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "979dfc82ddcb4845ae6a5e816751e72f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7764.7073613961784,
        "Y": -340.541358123438
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "ce38572efc144e74bddcddebc60ee597",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8112.7073613961784,
        "Y": -340.541358123438
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "cd6f5227cdd44d979b924f719cc79f37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8420.7073613961784,
        "Y": -340.541358123438
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "ffa25fe4749f49caaa5a829391400880",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7349.7073613961784,
        "Y": -340.541358123438
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "a9b1fb3330374a64976a8166bb3a31e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10917.271866370093,
        "Y": 91.738077193434947
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7e5af59958704febaef31e4eddd674ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10513.271866370093,
        "Y": 216.73807719343495
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "5588abca85a2485a831d76786554c0a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1582.61478107811,
        "Y": 928.83185013012883
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "6a9c2e400b1746e1b9cdc455b8e8cf3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1958.61478107811,
        "Y": 987.83185013012883
      },
      {
        "ShowGeometry": true,
        "Name": "5. Filter connection type name",
        "Id": "f920e27dafb444ab889adbe6e5c3500b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1185.61478107811,
        "Y": 1021.8318501301286
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "7889ef8e35e342dea0d60000412c6017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2545.61478107811,
        "Y": 953.83185013012883
      },
      {
        "ShowGeometry": true,
        "Name": "6. Select analysis results",
        "Id": "610cd6ee21c04178ab33fecaf114bb6d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3420.5247477960979,
        "Y": 818.08846234087935
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "132b39a825af47f09a6b5235cf08e61f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1582.61478107811,
        "Y": 1080.8318501301287
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "a082f8889b5c4258ba13ea474e29b4aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2274.61478107811,
        "Y": 987.83185013012883
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "c2a1a3823d7a46b68de65eff170a955d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5803.8862481016931,
        "Y": 786.66812928489946
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "2f45d5a6639548be8e8c5f94247c47e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -212.81569892831897,
        "Y": 1049.0466195792469
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "66b944acaaf744228de80d558910558d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -648.815698928319,
        "Y": 1049.0466195792469
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "6b8fc4c98ffc48f7ba981352faf4b21d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1185.61478107811,
        "Y": 1173.8318501301287
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "6d0fa7d27b7f4b098289d0c52f1ac94f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13300.685873068905,
        "Y": 1451.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "0ac33ec0417e403896aa55f6ff34a802",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5654.4674458462423,
        "Y": 2244.985841615694
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8d7eabc4b520443cb7c00f0a640eac6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5400.4674458462423,
        "Y": 2279.1258416156938
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "cb2d18af1b2245ac826dc04f9df4bedc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6069.4674458462423,
        "Y": 2546.4390737021731
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "97f003d957d4498a885abc5226b07b5b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7226.7681602550147,
        "Y": 2427.3192330726997
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "cf48068f7e6f44c58dd824576fa32d9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7671.7681602550147,
        "Y": 2427.3192330726997
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "92e0807a1e454669a84e3e49fe49bd43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8070.7681602550147,
        "Y": 2503.3192330726997
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f81779f4c44a4fd1823a1d2556d5be9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8070.7681602550147,
        "Y": 2351.3192330726997
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "568ea06d53db4ffd8303f9a562dc0103",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9389.9609589853535,
        "Y": 2254.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5d78e5cf67ea4469ba0f9b27dd93ba47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9389.9609589853535,
        "Y": 2405.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b7fd4e39dbd845b1b89436c9ad1397e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9811.9609589853535,
        "Y": 2588.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "b322c53c730345a6a8568779e19fc6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9811.9609589853535,
        "Y": 2371.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "93ebb974da25476194698b280e2a9411",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10233.960958985353,
        "Y": 2532.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "3836e7acc3094fbe963ca6258738365e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10637.960958985353,
        "Y": 2532.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "fb996189687d428697cf14c1d59711b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9389.9609589853535,
        "Y": 2556.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "85f7512ab47a4d7a8c34a2eae81c524c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9811.9609589853535,
        "Y": 2739.6677759150612
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b72cead1f76242cf8263ab1b022bf423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9135.9609589853535,
        "Y": 2648.307775915061
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "d1c8cb10aa4345b09ee7d778bd8c780d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7135.0272240313789,
        "Y": 3175.5207114543155
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "a8f4d118022840058efa72b5882ba7d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7529.0272240313789,
        "Y": 3188.5207114543155
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "cdc2812f2dc1475f997579e1cf3beaff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9037.0272240313789,
        "Y": 3196.5207114543155
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "1f6ed4fa87d34c46aa06fbb21bf08e7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8643.0272240313789,
        "Y": 3230.5207114543155
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1a634ef036c4836b9d0cd79bc91e23f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7529.0272240313789,
        "Y": 3374.6607114543153
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "ff24a91a101e4ae6b3eb99f81e1fb754",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7923.0272240313789,
        "Y": 3298.5207114543155
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "e5f3638ae3a94b8d95278e9f50be1bf6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8308.0272240313789,
        "Y": 3264.5207114543155
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "af5023f83f304ae1ba56472f38d146e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11717.157230667824,
        "Y": 2587.17147556842
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "24942385eec64cf0826bd76f6d412b6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12622.157230667824,
        "Y": 2553.0314755684203
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "6d90eab9761b4102838b9806a008b8bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12228.157230667824,
        "Y": 2587.0314755684203
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f33695f590a94efa8b47719cda2624d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6203.8862481016931,
        "Y": 879.66812928489946
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2ea267044c4f4444aaed82a7ab2a5887",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13300.685873068905,
        "Y": 1667.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "385fceab551a47e090364aaa29c90de7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13647.685873068905,
        "Y": 1613.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "91d4906387384754aaf275f0ac7d8d64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13994.685873068905,
        "Y": 1591.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "8fc7a9ed089743159dc06d963647e130",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13647.685873068905,
        "Y": 1396.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "6f575fe4563847f2a72f2219e7adf0c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13994.685873068905,
        "Y": 1374.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "7b22188d771f40259529f60ea16ae15a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14341.685873068905,
        "Y": 1352.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "f601877d574f44a0ac894e73fa0568df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13300.685873068905,
        "Y": 1270.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "b4ed490bc4ce4a5995551440c89291cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13647.685873068905,
        "Y": 1215.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "5e010da0fad445b88bcb6f79d1454848",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13994.685873068905,
        "Y": 1193.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "b41da54a897c4d47a164235013aec4bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12957.685873068905,
        "Y": 1251.1374019327723
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "d7e53beae4474495b13ed16e42769470",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13300.685873068905,
        "Y": 1117.1374019327723
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "f2ed36f3702a420cbfc747b104b73312",
          "90b8f7ad4af7496a960da48abc152285",
          "459b9a4619d64a2087410d17c30d3e78",
          "4df84c2338344abcb8811edeabb2a86b",
          "1e0aaacea6b146bc968e477636fb7fb3",
          "fea95e7cfabe407c93d18c70a3aab15f",
          "c4fdb7af70434f8cbd622b683a45235a",
          "0958affa5a0e424d8a683a4e48879189",
          "cc0cd0d13a0d4e4a90dafcc325b210b0",
          "5516255dde41412eb0a025a606082bd9",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -2979.1041781902991,
        "Top": -788.86667627257339,
        "Width": 2772.0,
        "Height": 984.56,
        "FontSize": 36.0,
        "InitialTop": -715.86667627257339,
        "InitialHeight": 907.56,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1ba97622b83a4896ac6b2b42a790702f",
        "Title": "Additional (optional) filtering: by section types",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "596909f5799446a7820a3e674d2f49c7",
          "4c0aeca86b3e4a598cd6c0ac60c2e74d",
          "3db0ae870aae4d4e8fccea48976c3b33",
          "145ece1505dd4e13b5adb581f63e7bf8",
          "e1d42da2f0d04115ba4c333d965e15ac"
        ],
        "HasNestedGroups": false,
        "Left": 760.74940194819715,
        "Top": -189.60462068739264,
        "Width": 1074.0,
        "Height": 444.0,
        "FontSize": 36.0,
        "InitialTop": -116.60462068739264,
        "InitialHeight": 380.0,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "3a222cada7c14e9a99cd83c0e597d0a4",
          "74b25cbf36a54f55b07d9a5d741b3d2d"
        ],
        "HasNestedGroups": false,
        "Left": -4482.0048954263711,
        "Top": 777.95011453413656,
        "Width": 1203.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 850.95011453413656,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c1fecff026548af92d1d0d712d29ce2",
          "46ec41b71daf42dca401a9dc8eb59e77",
          "c3294096c29f4c56875f710760082477"
        ],
        "HasNestedGroups": false,
        "Left": -4735.4724930478842,
        "Top": 1138.7896966791759,
        "Width": 1476.0,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1211.7896966791759,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4538.4787158814715,
        "Top": 384.29355416179635,
        "Width": 861.0,
        "Height": 769.40245232904078,
        "FontSize": 36.0,
        "InitialTop": 500.29355416179635,
        "InitialHeight": 662.40245232904078,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (column to column)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 7069.2533235892988,
        "Top": 331.60031403565182,
        "Width": 1556.0,
        "Height": 243.14000000000004,
        "FontSize": 36.0,
        "InitialTop": 404.60031403565182,
        "InitialHeight": 179.14000000000004,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 7088.0085821743178,
        "Top": -769.47501705297032,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -696.47501705297032,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 7078.1915853057953,
        "Top": -78.425749141614645,
        "Width": 1555.9999999999991,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -5.4257491416146451,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "809e0ab45e464576aa8783e69d0af647",
          "e8eb84cc6fea41b5a81ebd13cb4349ab",
          "aba76b77473b4148b30827d38a0b687e"
        ],
        "HasNestedGroups": false,
        "Left": 6683.694755414328,
        "Top": 847.667030078102,
        "Width": 2427.0,
        "Height": 243.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 920.667030078102,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "e8ba84859b6f44a38a0d363965fd6186",
          "b2ddd35006324337bba333c3c626863e"
        ],
        "HasNestedGroups": false,
        "Left": 6671.67641115993,
        "Top": 1231.067146814438,
        "Width": 2034.0,
        "Height": 260.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 1304.067146814438,
        "InitialHeight": 196.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "654e5f1363ce4799b114c9d1057fd75d",
        "Title": "Combine, each one line",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "774bfec08d6646eab975b1a78194a1d4",
          "ecc0331f412c4c319df6ef8ef2e250e2",
          "1c8b31c6aeef42179f9bf04ab0c50df4",
          "d19b07df0f1247c09fd1a6d579459e44"
        ],
        "HasNestedGroups": false,
        "Left": 11368.460162338712,
        "Top": 1081.9229758566305,
        "Width": 894.0,
        "Height": 426.14000000000033,
        "FontSize": 36.0,
        "InitialTop": 1154.9229758566305,
        "InitialHeight": 362.14000000000033,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "66b944acaaf744228de80d558910558d",
          "2f45d5a6639548be8e8c5f94247c47e5"
        ],
        "HasNestedGroups": false,
        "Left": -658.815698928319,
        "Top": 942.04661957924691,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 1015.0466195792469,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -2809.3812924136082,
        "Top": 884.49895214151059,
        "Width": 1687.0,
        "Height": 391.14000000000021,
        "FontSize": 36.0,
        "InitialTop": 957.49895214151059,
        "InitialHeight": 327.14000000000021,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "e145e2dcb38640298f56e57bc597d4e2",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a76ce6fb5bf0431cb02e357dbd12e7e1",
          "979dfc82ddcb4845ae6a5e816751e72f",
          "ce38572efc144e74bddcddebc60ee597",
          "cd6f5227cdd44d979b924f719cc79f37",
          "ffa25fe4749f49caaa5a829391400880"
        ],
        "HasNestedGroups": false,
        "Left": 7085.7073613961784,
        "Top": -413.541358123438,
        "Width": 1556.0,
        "Height": 243.13999999999993,
        "FontSize": 36.0,
        "InitialTop": -340.541358123438,
        "InitialHeight": 179.13999999999993,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "10fd0f371849447ea3d33cab5e33e2e6",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5588abca85a2485a831d76786554c0a5",
          "6a9c2e400b1746e1b9cdc455b8e8cf3a",
          "7889ef8e35e342dea0d60000412c6017",
          "132b39a825af47f09a6b5235cf08e61f",
          "a082f8889b5c4258ba13ea474e29b4aa",
          "6b8fc4c98ffc48f7ba981352faf4b21d",
          "f920e27dafb444ab889adbe6e5c3500b",
          "81111fba1d5049ffac130c059c42d63d"
        ],
        "HasNestedGroups": false,
        "Left": 1175.61478107811,
        "Top": 855.83185013012883,
        "Width": 1615.0,
        "Height": 453.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 928.83185013012883,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "e34c182708154d47a3895df89989723d",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -4332.2529579435295,
        "Top": -929.98449129380128,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -856.98449129380128,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4e95aa28e81d4bb3bfbed5a05d584220",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "646164bb1207481cba7fa1b3dc4fa6b0",
          "c2a1a3823d7a46b68de65eff170a955d",
          "f33695f590a94efa8b47719cda2624d7",
          "674c726df4a04f18804a62124c98fc93"
        ],
        "HasNestedGroups": false,
        "Left": -6227.8862481016931,
        "Top": 589.66812928489958,
        "Width": 710.0,
        "Height": 425.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 662.66812928489958,
        "InitialHeight": 298.96545907277368,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cafcc06c233e4d268fbe12edd750a88c",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "41563a8003714c4aa18135c3678b78ff",
          "9ed185b157e540ab8b371cba38a9ad11",
          "b71fa9b66fcc4c528fc64c822f416487"
        ],
        "HasNestedGroups": false,
        "Left": 2366.4814687098346,
        "Top": -22.524752586127363,
        "Width": 713.0,
        "Height": 361.14,
        "FontSize": 36.0,
        "InitialTop": 50.475247413872637,
        "InitialHeight": 297.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "43683ce77ec74a9d9ef6ff7eed0ff8e7",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "610cd6ee21c04178ab33fecaf114bb6d"
        ],
        "HasNestedGroups": false,
        "Left": 3410.5247477960979,
        "Top": 592.78195553552075,
        "Width": 824.00000000000045,
        "Height": 361.30650680535859,
        "FontSize": 36.0,
        "InitialTop": 665.78195553552075,
        "InitialHeight": 297.30650680535859,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "0a150ece1f2d47098140b6916c7025c5",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "bef15ab0ecea422cb9901cc7aff788e7"
        ],
        "HasNestedGroups": false,
        "Left": 14795.311546652983,
        "Top": 485.44005181692773,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 558.44005181692773,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "ecfce96f615f4de6990a1554f7d880eb",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e4fdd4c2a05a4f1eb586693bd3993c41",
          "f0fd46a3267c423fbceba87cec3a4085",
          "2468dcc70fe5421183de6f7d978397d8",
          "79c559e34215461f88a3166b07a690ff",
          "c1d6f36f88424c5f9c634ccb2df3a3a7",
          "055d903f163a4916878680c9df14060c",
          "c61f9993137c4f848a829146db4fa500"
        ],
        "HasNestedGroups": false,
        "Left": 9503.4370802456742,
        "Top": 874.11644424315045,
        "Width": 1378.0,
        "Height": 620.0,
        "FontSize": 36.0,
        "InitialTop": 947.11644424315045,
        "InitialHeight": 556.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "4501801b3bb44271a17ec6dbcfd40cf2",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f0e3b935957448649a4e9f965f9251bf",
          "05d5549b14834d34a934db2d94701a8d",
          "48333a768e92468389d20f705538de6a",
          "162a8b453d1a449a95df81095326396b",
          "0dd2255129d94e4dbd276ed8aad108d9",
          "c8de3c9ae02b480c8c81d17bfcca4a3f",
          "6b06f759ee46449d89fa6768a3ca1596",
          "a9b1fb3330374a64976a8166bb3a31e2",
          "7e5af59958704febaef31e4eddd674ac"
        ],
        "HasNestedGroups": false,
        "Left": 10158.271866370093,
        "Top": -230.26192280656505,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -157.26192280656505,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "3f7ae9e282674c0a9c9b9f2316fdf766",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0ac33ec0417e403896aa55f6ff34a802",
          "8d7eabc4b520443cb7c00f0a640eac6d",
          "cb2d18af1b2245ac826dc04f9df4bedc"
        ],
        "HasNestedGroups": false,
        "Left": 5390.4674458462423,
        "Top": 2171.985841615694,
        "Width": 994.0,
        "Height": 610.45323208647915,
        "FontSize": 36.0,
        "InitialTop": 2244.985841615694,
        "InitialHeight": 446.45323208647915,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "814d9de3b3ea45c6b87c5c0aced4ff93",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "97f003d957d4498a885abc5226b07b5b",
          "cf48068f7e6f44c58dd824576fa32d9a",
          "92e0807a1e454669a84e3e49fe49bd43",
          "f81779f4c44a4fd1823a1d2556d5be9d"
        ],
        "HasNestedGroups": false,
        "Left": 7216.7681602550147,
        "Top": 2278.3192330726997,
        "Width": 1275.0,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 2351.3192330726997,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "96890c4b47e84f9a8a0b518cad3475a6",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "568ea06d53db4ffd8303f9a562dc0103",
          "5d78e5cf67ea4469ba0f9b27dd93ba47",
          "b7fd4e39dbd845b1b89436c9ad1397e6",
          "b322c53c730345a6a8568779e19fc6e3",
          "93ebb974da25476194698b280e2a9411",
          "3836e7acc3094fbe963ca6258738365e",
          "fb996189687d428697cf14c1d59711b4",
          "85f7512ab47a4d7a8c34a2eae81c524c",
          "b72cead1f76242cf8263ab1b022bf423"
        ],
        "HasNestedGroups": false,
        "Left": 9125.9609589853535,
        "Top": 2181.6677759150612,
        "Width": 1712.0,
        "Height": 724.0,
        "FontSize": 36.0,
        "InitialTop": 2254.6677759150612,
        "InitialHeight": 630.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "6b905d08d3574ff795e97a104c8337e6",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d1c8cb10aa4345b09ee7d778bd8c780d",
          "a8f4d118022840058efa72b5882ba7d3",
          "cdc2812f2dc1475f997579e1cf3beaff",
          "1f6ed4fa87d34c46aa06fbb21bf08e7f",
          "f1a634ef036c4836b9d0cd79bc91e23f",
          "ff24a91a101e4ae6b3eb99f81e1fb754",
          "e5f3638ae3a94b8d95278e9f50be1bf6"
        ],
        "HasNestedGroups": false,
        "Left": 7125.0272240313789,
        "Top": 3102.5207114543155,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 3175.5207114543155,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "725bdc1084c648be8475b66da4345ba1",
        "Title": "Aggregate information",
        "DescriptionText": "Combine situation information and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "af5023f83f304ae1ba56472f38d146e6",
          "24942385eec64cf0826bd76f6d412b6e",
          "6d90eab9761b4102838b9806a008b8bc"
        ],
        "HasNestedGroups": false,
        "Left": 11707.157230667824,
        "Top": 2480.0314755684203,
        "Width": 1183.0,
        "Height": 273.0,
        "FontSize": 36.0,
        "InitialTop": 2553.0314755684203,
        "InitialHeight": 179.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "c1668483a05548c4a3beb135e19dcbfd",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a4a6a1cd3d2f41c9a3f297d996b87711",
          "723601ba829b45f89b6cdafcfff6e0fa",
          "d442c2259b6f4259aeb1468147aa041f",
          "64fa4268479d4befab81e989f8ff8675",
          "6d0fa7d27b7f4b098289d0c52f1ac94f",
          "2ea267044c4f4444aaed82a7ab2a5887",
          "385fceab551a47e090364aaa29c90de7",
          "91d4906387384754aaf275f0ac7d8d64",
          "8fc7a9ed089743159dc06d963647e130",
          "6f575fe4563847f2a72f2219e7adf0c6",
          "7b22188d771f40259529f60ea16ae15a",
          "f601877d574f44a0ac894e73fa0568df",
          "b4ed490bc4ce4a5995551440c89291cc",
          "5e010da0fad445b88bcb6f79d1454848",
          "b41da54a897c4d47a164235013aec4bb",
          "d7e53beae4474495b13ed16e42769470"
        ],
        "HasNestedGroups": false,
        "Left": 12639.685873068905,
        "Top": 1044.1374019327723,
        "Width": 1900.0,
        "Height": 875.0,
        "FontSize": 36.0,
        "InitialTop": 1117.1374019327723,
        "InitialHeight": 695.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "674c726df4a04f18804a62124c98fc93",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Moment column splice;Splice joint).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6217.8862481016931,
        "Top": 662.66812928489958,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "646164bb1207481cba7fa1b3dc4fa6b0"
      },
      {
        "Id": "81111fba1d5049ffac130c059c42d63d",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. C to C;Web). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1185.61478107811,
        "Top": 938.8318501301286,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "f920e27dafb444ab889adbe6e5c3500b"
      }
    ],
    "X": 2261.71899530924,
    "Y": 530.06052812293967,
    "Zoom": 0.51552040789874332
  }
}