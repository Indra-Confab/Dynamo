{
  "Uuid": "e4581c33-76ed-4b98-ad58-62d831281f33",
  "IsCustomNode": false,
  "Description": "Places double sided connections in beam to column geometric situations. Works only on connection types with attached ranges of applicability. ",
  "Name": "Two beams to one column by ranges",
  "ElementResolver": {
    "ResolutionMap": {
      "ConnectionType": {
        "Key": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
        "Value": "AdvanceSteelConnAutoNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "String.x": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Name": "1. Select steel elements",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select the structure data used for filtering Fabrication Elements",
      "SelectedIndex": 0
    },
    {
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Name": "2.1. Beams Slope Angle (degrees) from",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Name": "2.2. Beams Slope Angle (degrees) to",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Name": "3. Library file path",
      "Type": "string",
      "Value": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Name": "4. Connection family to place",
      "Type": "string",
      "Value": "Double side clip angle",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "d2716a15fa7b4783a84eeb143861c6b9",
      "Name": "5. Filter connection type name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "38828e1188c846548bfd27c1fe828632",
      "Name": "6. Select analysis results",
      "Type": "dropdownSelection",
      "Value": "Revit Member End Forces",
      "Description": "Select analysis result",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Name": "Summary report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.SelectStructureData, AdvanceSteelConnAutoNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d46991c95cae483792e0878fc2aaa757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dba63372f2bd469da9644cbc6b430351",
          "Name": "structureData",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.FromStructure@AdvanceSteel.ConnectionAutomation.Nodes.ModelObject[]",
      "Id": "23e71998c97843498024665c1918a3c7",
      "Inputs": [
        {
          "Id": "9139b031129046b2a1a7f9f43de76e92",
          "Name": "objects",
          "Description": "A list of structure data elements.\n\nModelObject[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c091f3f481445218d47efc78287259c",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection nodes. For more info, see grouping.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Groups structure data elements into connection nodes.\n\nConnectionNode.FromStructure (objects: ModelObject[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.SubNodesOfSize@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int",
      "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
      "Inputs": [
        {
          "Id": "8212eb9c9d8c49d2a76d76809a309e94",
          "Name": "node",
          "Description": "The connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e307d01036c447bbafaf21955d6460e5",
          "Name": "noOfZones",
          "Description": "The specified number of zones.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8823b5f019f48f68b6b681e641f2660",
          "Name": "ConnectionNode[]",
          "Description": "A list of connection subnodes. For more info, see arrangements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "For connection nodes that have at least the specified number of elements or zones, it turns each input node into a list of subnodes, where each subnode is a different arrangement of the elements in the original connection node.\n\nConnectionNode.SubNodesOfSize (node: ConnectionNode, noOfZones: int): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "afa893eaa5de46fa9ce002c4e28f8ea1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlantAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "e0347155fcfe4b88a8aa4169246e4107",
      "Inputs": [
        {
          "Id": "6cd5081b3d894062892a0cec90cd6592",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25418920fcf74f3090c265671d5906e7",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb9b4f7d0e2542438a4b22f4b50aa15a",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d656cd5aaed74e56a5c55127ba80b843",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e47e13bd9c0a4ea99a59eb668f197b1e",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc6c73d2e9c34bcea90789c1707b9058",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slant angle (angle between the axis of the element and the vertical axis).\n\nFilter.BySlantAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd2d123c3d94abca7e9992dcda22716",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b4341169db024f76be3bf2ba21d694a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4575df7326346a99186d0fa7f7f68ce",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "c8598dd14c5e45588214304b179fa158",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3313e6f8f9b543a8878f837edafbae7f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "4ca736382ad7404ab11147885333bf37",
      "Inputs": [
        {
          "Id": "5ca90615bcdc4566ad508e5771a8e945",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf98bc5b441244b0b407d6b71fe99d27",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "641ca3aebb16443c902431fe61bb5127",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2565857cacda40b6821fb433dbd5f6a1",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "872cc7af41bc435e8e9c9287366f16ff",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "840106e5436c43eda9f6d7a7a9d6be45",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f2ed36f3702a420cbfc747b104b73312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "374e1ff6640649faa07f47bcccb7bd7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "b99019feddf34cddbd879fca7f2bc375",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6bccf5579f84a6496a53819c0d126a3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8352ce7cfa8340249d4d2c77b4d94765",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "596909f5799446a7820a3e674d2f49c7",
      "Inputs": [
        {
          "Id": "31a2a03e186b41f68176345589f851fe",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e2c7e481b8f4c97b05b11b5cadf98fc",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5587e93c96a1461bbf95cde6a7300220",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "881d3b5066d2416ea41953ba13ced78d",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f830726134164f5691f1c2dd7e22e7cb",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b12606021e4dbda2be3dfc4f977dc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "3db0ae870aae4d4e8fccea48976c3b33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab334ee1abe949b5ac4be2c72a8b2772",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19ef94231bb245bf9f8d0335d2470c6c",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.StructuralDataTypes, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Any | Any",
      "NodeType": "ExtensionNode",
      "Id": "1ca46343c98e422eb589fa5f6c1c842d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98ebb802466d45fc88fee4b647379981",
          "Name": "familyName",
          "Description": "Family Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f6d6943546347d2828ddfdfb9c156f9",
          "Name": "typeName",
          "Description": "Type Name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select the Family and Type for filtering Fabrication Elements"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySectionType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "145ece1505dd4e13b5adb581f63e7bf8",
      "Inputs": [
        {
          "Id": "1901e0d33af342ebaa77014a352c0c32",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcf786854a0f4dd3be94e87cc2b56554",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9ff16241fe7408d97349addfede0721",
          "Name": "nameToFind",
          "Description": "The type name that the structure data element must have to pass the filter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3e6b35fdf5e421fac487c209e921316",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df853b25b16449ba80be54e810da58b9",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain section type.\n\nFilter.BySectionType (node: ConnectionNode, index: int, nameToFind: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "e1d42da2f0d04115ba4c333d965e15ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6af4a39229064ca09d4e222acb42e2bc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "InputValue": "C:\\ProgramData\\Autodesk\\RVT 2023\\Libraries\\US Imperial\\Structural Connections\\Steel\\AISC Steel Construction Manual v15\\AISC 10.1BB.rvt",
      "NodeType": "ExtensionNode",
      "Id": "5c1fecff026548af92d1d0d712d29ce2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7cb4c5a4d7744158b43d117c10964990",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ByType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
      "Id": "13adc36d2358407b9fde374bae5dabd1",
      "Inputs": [
        {
          "Id": "8edc4a160f354bd48769ee988754518a",
          "Name": "node",
          "Description": "A connection node or a list of connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9228c4c71455ab80f8436b0b03bed",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798bda9e629846bf9fe371b604d0a17b",
          "Name": "connectionType",
          "Description": "The connection type to be created.\n\nConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec118e79ec548a08f25cb936668f191",
          "Name": "Connection",
          "Description": "A connection or a list of connections.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944c09bf60784fb789618a7fcb2b0352",
          "Name": "Existing",
          "Description": "A connection node or a list of connection nodes where a connection already existed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates connections; Loads the connection type if it is not already loaded in the current model.\n\nConnection.ByType (node: ConnectionNode, indexes: int[], connectionType: ConnectionType): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0,1,2];",
      "Id": "0f8f42606627455eb286b7e1556580bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "733b3b1b4534485b8af5aebef07e728c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Double side clip angle",
      "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68aba1580a084fcc909abd9f22159f2b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.MatchTypeByRanges@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
      "Inputs": [
        {
          "Id": "dfd5fdb26cc74803b6ae34116fd9b969",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d475cfc57692481789ade76cefe06c75",
          "Name": "indexes",
          "Description": "The order of the input elements in a connection, given as an array of integers.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a33890ed644727b539d857f319afd1",
          "Name": "connectionTypes",
          "Description": "The connection types to be verified.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a14760c33ec4499490fdc263e4bc5b3e",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use the SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c223a4ec19e42e0a7c0d9073df939d8",
          "Name": "accepted",
          "Description": "A list with two elements containing the connection node that has at least one applicable connection type, and the ordered list of connection types that pass the range conditions on the connection node.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43f18a19a43041419ca1a5fd0b91f652",
          "Name": "rejected",
          "Description": "The connection node that does not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data for elements passes range conditions.\n\nConnectionNode.MatchTypeByRanges (node: ConnectionNode, indexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "c1d0bfb70a604549b70d7713cb9b673e",
      "Inputs": [
        {
          "Id": "30a3811490b84915938faed169b95026",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a032cac1b4d54d6a867c113e963cd6fa",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970d7651d80c45e9bc8ec306d2a1e31a",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f7e3177b9a344ef9a8444e38e851570a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dcde687dff5d41be840324d861f4c6e3",
      "Inputs": [
        {
          "Id": "9280ca763221416c9b8f4fcea36af6b4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "190a0ae8c548496e8aff40d2eeb812c7",
      "Inputs": [
        {
          "Id": "c7c51a8392bc4c168554fe0dabd02f79",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3ad7bd14234448a63f7e071b923279",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
      "Inputs": [
        {
          "Id": "2766602a35304466b25332322eeff47c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3adc47502d0e40999d528e3f838639e2",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e229b66d98d24d01a4641804e6973bdd",
      "Inputs": [
        {
          "Id": "3370cf786b2d4671b19a9166a2d05848",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b564b56c967448adb6674685b027e968",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2405b4b3ac62465e9e8f8b0814d82534",
      "Inputs": [
        {
          "Id": "5f73364e90c141fea94ee55744a96ad5",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7018d8627bc4bd3bcec0088f995aae6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38bc839560124a8eac19b984757afbaa",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7b68347597c4ce9b964ed7a77000133",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a3c243dbd4e94ba4bd695dd190285961",
      "Inputs": [
        {
          "Id": "1fedb6ded53b4629ba4f540dcb10aa5e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5486b0a534d9416c910018387fdb7443",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f3c15adb847c7a260d8e02b7b7745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fd229c791ae14ec68f4d184c8971f8be",
      "Inputs": [
        {
          "Id": "f4c63ccf0e834aa9a15868c8e9b37c4e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb7158725d3c4a4ab1f6f3118654ceb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2efdd0fb814f42fe92ec0d65e8528058",
      "Inputs": [
        {
          "Id": "126dee5c274546c28f561969b3546d62",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f66b0792a9f40a3b83778d717f874bf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f74b564d2ad451db19bbbfa17296726",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "b739323cec314bb79a21b9b10408a3a1",
      "Inputs": [
        {
          "Id": "1a6633c960864ea7a3de85af872cdd62",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ab609669a34e4a9180c9040e5f2ece",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf79e1baba74ea985d7f5cc2c5cf9bf",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "46806d536f524b258bebbf04bed9270c",
      "Inputs": [
        {
          "Id": "1b0fd80f9d304f9ba9a4c03abba09ee2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc303eecbebd43eb967816b8c8d18ef8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "557103ea96c04fa0af6d8e52b7b8a326",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a540a6c5e4acb8b4b5d686f3cd381",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743b75eb3ca546d9af30330c7b67a73a",
      "Inputs": [
        {
          "Id": "a068174273ba4e339389a8a0cf0b80f3",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ab32bec1749446981818b6833f90696",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "565b21616ba540c6ad0e1ca363dbe479",
      "Inputs": [
        {
          "Id": "5e0169e69ec14c21a5a8d58e11fe20cb",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e52f7ba8a1954c709be89365ee33e05c",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
      "Inputs": [
        {
          "Id": "34c6d917408d47f8a336053edaa54c53",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ba019d3de6469fb8f66a3ab4ced83f",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cfa77aa802415eab7e4ca24f35bb12",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0028afe02824f3883a634b77b92eac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "538b8bf613164b2c855374e76a030dd9",
      "Inputs": [
        {
          "Id": "6bd6774f245c4cec863a30ac2f5e4463",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4b087283f24c16b2030baafbcac292",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5393e867455b4e76999d5f23cb74e10c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "772e6ba595c64804a85db1574dbd2e38",
      "Inputs": [
        {
          "Id": "44c417a84b174e68848d95df4cb1c855",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "578934bf35ba42788b77930d987cc480",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "254ce0984a514f1b88df4d788d039906",
      "Inputs": [
        {
          "Id": "e4a30ae1de3a4c95a58f678ff7e07c9c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec6ec369e514b66bd409f07f1a5bfdb",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Connection.ConnectionType",
      "Id": "a7ed204d1065484b804d093c6d488102",
      "Inputs": [
        {
          "Id": "46ba1030269d42c0bdccc02de5a66397",
          "Name": "connection",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Connection",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00018cdbc5d4262b9b9cf135a8857b2",
          "Name": "ConnectionType",
          "Description": "The connection type of this connection instance.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type with which the connection was created.\n\nConnection.ConnectionType: ConnectionType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "54fa0a13352d4aeeb89c61760877b87e",
      "Inputs": [
        {
          "Id": "0cdd8bfaeb4e46d4b252a9237fa47523",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ec7a74bc704b9ca57de9d653a79155",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a31eca7da98e4f4497be7950e7176968",
      "Inputs": [
        {
          "Id": "283920bc836e429fb6ec10e88edcfc21",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d02194c3cd64c2c98abe4a43d3bce9d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "774bfec08d6646eab975b1a78194a1d4",
      "Inputs": [
        {
          "Id": "b2554cedec674fd9aa2f7fc35bab7008",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49f4b92ce2e64014a68344d009952029",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e1355331b64e7e850e717a10fd4c5e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b9b1b2e8c2648da8d551ba065b0040a",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f46b862733e044d69c1a4ec177003746",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07dbbb1674e54a9e8f6b2a156c204109",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rundown:\r\n",
      "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "840de0f9de614622bf0b99cfef6253ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "a052708963d74d64a67e0b16aca98624",
      "Inputs": [
        {
          "Id": "e179f994c040481cbbf20081d47c1575",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0938ae63b023462da2a80ea354fb698d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "e9e666cbb8f64880b8218119cd6156d8",
      "Inputs": [
        {
          "Id": "a31b2f19310e40aa88e461de9cad50ad",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "215f13e6d6c7451b89aa57a3f2776976",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b226949cd14b53afc189f8c1948043",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a27eb35ed4c4984a251e44c2f04f7cd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6467f392f679494a8a2fc5379b011bbb",
      "Inputs": [
        {
          "Id": "59eb57c8d5344612abdca83d42bd61c0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7014061952804f38b200d0c5918f5ca5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54379f1c96954d2896d4a44e3c35a0fd",
      "Inputs": [
        {
          "Id": "953a2e05a1bb41d3aa06ac072e73d9fc",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42ffd4e7d6b4a629585539c57d17a13",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d19b07df0f1247c09fd1a6d579459e44",
      "Inputs": [
        {
          "Id": "8c806428de07439c88b2c7d80368cc46",
          "Name": "reductor",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "435b20457d424320a532552c70a09bd3",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "094ae248e07d4f5f9a8503e6355a10dc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b52cd842fe44268a9e03f873a26c3b2",
          "Name": "reduced",
          "Description": "Reduced lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "41b6a9f8fd004de0ba416a8a588963c7",
      "Inputs": [
        {
          "Id": "7669dbfabca345b7970fc2f3d940b2cf",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439bf123353a43babf86950043d6a72a",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6cbc2429b1f4219910fcc3d11853a58",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "809e0ab45e464576aa8783e69d0af647",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "628afbf358244c619694f826300bcc7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
      "Inputs": [
        {
          "Id": "fa3e9809f83f463998291cd6dbd016a2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c0c509d53d4dbfb569326a7f988aa8",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5346315715a4462a97d7a60d709095f8",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f85922284c4992832c3ac3405a01a5",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
      "Inputs": [
        {
          "Id": "9a46ba6423404a6093cbdb53c325c2a9",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda45607c2a74fbf9e4f9e3ba0ae3159",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1390765c6a454b1c946d150be3c6adb0",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.SetValueAtKeys@string[],var[]..[]",
      "Id": "93fa6b310e10450685774ed66b3bb04e",
      "Inputs": [
        {
          "Id": "4b89d003584c4f51bea4e3678de05c0d",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67c8054a8f384e7a8aa6d108528d7d7e",
          "Name": "keys",
          "Description": "The keys in the Dictionary to set. If the same key already exists, the value at that key will be modified.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
          "Name": "values",
          "Description": "The corresponding values to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de4cf278f7cc4032b6b15536488a1a3a",
          "Name": "dictionary",
          "Description": "New dictionary with the entries inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produce a new Dictionary with a list of keys set to the new values, possibly overwriting existing key-value pairs. These two lists are expected to be of the same length. If not, the shorter of the two bounds the number of insertions.\n\nDictionary.SetValueAtKeys (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "cbe701715f3c4d59847c85bc1fba2edd",
      "Inputs": [
        {
          "Id": "4fa6aa68647448199695a59d7d749879",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b40eec7e1be9436ebd6b12e55e8cfe17",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
      "Inputs": [
        {
          "Id": "0bca034d91e44f93a8fb5c411b7f3920",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fb4d87bdb840df9e36a9ed3a64d860",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "9a071a3676a146e59b21682562a0b7f7",
      "Inputs": [
        {
          "Id": "87e7659ef91e4669870cf6df0d08b4e3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cfa565a9d647c4adcbb89599ba1042",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
      "Inputs": [
        {
          "Id": "2ae3c62b069746a3940329b25db46352",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18880fd863d2494ab0c39629273b425f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Flatten(List.Clean([x], false));",
      "Id": "46ec41b71daf42dca401a9dc8eb59e77",
      "Inputs": [
        {
          "Id": "9187fc576aa14c41980e45ee09f0d49e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7dd1a200015469899296f304adef090",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "b9e7767890a047e685f8ff26c0f26d02",
      "Inputs": [
        {
          "Id": "79c4ee477399447da176b1f256eb638e",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "668e6d307b734b7a894d8d0aa7920a35",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e74c87ecb2554dc4a29ecf3c8832de1d",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e42c95f2dec4300bcdaf38ed6cdce08",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d564358cdcbf494381f22cd64b4e6e79",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "d074ff8024794568b8a0c042612ff9da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "09bca46ccf2a48859709fd4d80dde4c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "f5fd7157d8dd46efa1a7ad4b9e7133ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df5273941e614abe8790e600ec43355b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "75fbb7ec69cf461b95141eb144180577",
      "Inputs": [
        {
          "Id": "7625ead503a947a596a3803e4e4f8900",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f463f3d10cf841bc83787c009e615cb5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bedfc1817de342eaa8f615bd6f4577a9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "98f256f147cb4d0f8148c23deef718d3",
      "Inputs": [
        {
          "Id": "9abf1463b0564e40bcd4c16725e35a82",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ab37174f3cb4d6592716343f87999e2",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca65a379b8f640ecbbd00ea1abe6b2bd",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "558c4f50298042ad99570158961261a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d96d7b2764549b1a75d853c6c72a8fc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "289d91618171478dbb998b4e6984e0ea",
      "Inputs": [
        {
          "Id": "89776865d9e04677890be975ab474d44",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bddc1f6f23e74af3a78b22f516810da7",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "683f0f6052a64bfe9cebcd0cdc1e3c93",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.ByName@string,string",
      "Id": "5bf679f3a1d845e9a80dcfacd4d4b0c2",
      "Inputs": [
        {
          "Id": "d51e9f0f59e74d818369de529c3d0ab1",
          "Name": "connectionName",
          "Description": "The name of the connection. If it is null, this node will return all the connection types from the source model.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe5a20fac51049149e5df32f438e9af2",
          "Name": "filePath",
          "Description": "The source file path for listing the connection types. If it is null, this node will use the current model as source.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba8964315d2b466498c8e73c0eb6230b",
          "Name": "ConnectionTypes",
          "Description": "A list of connection types.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a list of connection types.\n\nConnectionType.ByName (connectionName: string, filePath: string = null): ConnectionType[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "997ebb57baa34324bb07089352ec8a17",
      "Inputs": [
        {
          "Id": "5012cbe92c694c49ad2d3690cf9a2719",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5f7e7e5851a4cdebfe1b0ee945e4405",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "235988b977a14604acb722f2940d6b14",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "911367ea95104a68a8bdabf24ea343d5",
      "Inputs": [
        {
          "Id": "8b3dfa1cdd4d46f29e017a672e889724",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a6f4ad6f78f4de59ade11cb0c564a4f",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\r\n\r\nTotal: {created_number} created, {existing_number} existed, from {applicable_number} applicable, out of {situations_number} potential situations.",
      "Id": "72425b91f2ea4495926845dcc24a7e3f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7115c25603364da8a51e5cb84d267f45",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ade3a07d982d4a6b9566f90ae4060d67",
      "Inputs": [
        {
          "Id": "9182d7cf4e2b4105b31944cf9c39597f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3f6cc8735c14d9fa736f79a5bf972b7",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c14eaa6dc094dfdbea42a4c395b047b",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edffbf7f48b04d89aa738ec345de81da",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "650fbffecdd54e1f8a047828f6d12668",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7e35f853a91e4fc8ab2a21ec9a570c8c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ad66920b3a3e442bb5fe89999aae474b",
      "Inputs": [
        {
          "Id": "181c478a75b8486e9cdd9e6274a212f6",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21af63424c76407dac9933bda913e684",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0233f2e308cd4d35a401d787e461fd3a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c299c99af46a4aeb98d78a3724b5529b",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "0685e4e2cde14269a350099bca66d1cc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cee36242ae464531b1ceebeb2b884fa4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "bb1eaf21f4dc42819950d90924b30413",
      "Inputs": [
        {
          "Id": "5bbd6d4e11b7490888d53a2fcf193a20",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7071f11a1de40069cc54c15c14cdb0f",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439d8e8331ca47d89f4304156db1470a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ed4e2f79751435e847706e7a3780ed6",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{situations_number}",
      "Id": "02fc6e7ff41f41b384488b805e007f4a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41d5906d72f147d690c67f68396487e0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4f35443af9384bb5a47d95baaeedceeb",
      "Inputs": [
        {
          "Id": "2a3a7187eaf3433ca5137d1f627d7668",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8076a247af394e739313ca05b1daeed3",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae20e96134d42d8bc4b2363f8ac90a7",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2415835e1844a97af39030d2bd9a3f0",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection type was applicable anywhere. Make sure your connection types have ranges defined. Check if the library file path, the connection family to place, and the selected filtering options are correct.",
      "Id": "2404215ffc2c4afa9614331a555b437e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6cbe605591a0477e9bdbb1f61c32bb66",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}: {created_number} created, of {applicable_number} applicable",
      "Id": "6bcb242ae05c45fda1f9ebbbdeec3731",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ace1ec76dcbe426b9df8ffce870aa1be",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ffb92b32cdde4dc3a73c1560eb54fdfd",
      "Inputs": [
        {
          "Id": "cfadc2c2add14e90b1836896c3985ad3",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7bb3ba22e174ce1a936e83f061d5170",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24f56f2f68ec4e8586c0327889d1805d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d20595c51d346cdaf57d76a04857a05",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{created_number}",
      "Id": "c33840e0557c4408a330da04f399cfb1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99c9647b92cf49ba93ceb20299986ba4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "6e077c8a1abd42a7aa12f341ed0d448d",
      "Inputs": [
        {
          "Id": "f9648e5771c7403fbce5d14d204f351a",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "191d1385ef96481eb537a25313b67c85",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "564e99c9566b4ee5bd5fbffbae8f674d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46fcb7aa4efd42df8be86905211c788f",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{applicable_number}",
      "Id": "90dbaba524234fdfb31eb37933266b20",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57264b25d28640d2a3e9d57fb1c9b09f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f3f8813e5c794004833a9739d4c2d0ca",
      "Inputs": [
        {
          "Id": "583b330733704330baf738ea4bf7792f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db24234063f845469ae0246721579a68",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79211f1c747b4670a6fa01792af7e5c5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c971c39136642848fa16acb95f8cddb",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{type_text}",
      "Id": "12e6cd04e27647869a2afb60be7717cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c028a8984d5484cb380701f563156ca",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "a1f4df2ff8434486a643c653fcf53787",
      "Inputs": [
        {
          "Id": "0c5a2cc2796d4d40a55c7d84f2121723",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd9e0bb0b69143978fdfe9d904d9de7f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "8807f05fe05d4763a174deb7ff8863e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48ebe732282846088290408b37599da9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "852b8ef9499847458b72627ed032ffc3",
      "Inputs": [
        {
          "Id": "4d8695a21e6142c885c1079149e4f270",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb085e2eacae476d8031f6b7876dfcf9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cda4d8e3feae4ce4b8baf96eece3e925",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "ffaace1683d54d13971e8728952de923",
      "Inputs": [
        {
          "Id": "ce37c4f386d54f3585e6485a67d68c4c",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a585a4698993467db464df485419f031",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0612a40e9d440e28ddadc4aab1afb0e",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b6bd315c8a80447a95142ed6c7047fd2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e27a169f9a944fe294482052fe05ef1f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "c6d9585fb47841cb9c9ceb4bfd7558e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e6dd81a32884af2aad5bf1e9746adc2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "dde7df2ab5954fc1b5b52264b6ea322c",
      "Inputs": [
        {
          "Id": "be314907ceb34e98b2a2d3e11f1431b8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03ebe3556a4244fda67a41a091b73068",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95707ef7d43648b79460d1c5ee2272d6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1e3e2a13ad1349daa6c58b63b5f0b78a",
      "Inputs": [
        {
          "Id": "fa7cbd7a3ae54d3b9cd639eec7dedbfb",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a36c2926d1654975801a127b1c897d84",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3841de7214484a55b00b70d485720ed1",
      "Inputs": [
        {
          "Id": "09baac595f8d42acb57f2f32d54d889c",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8543ca588114403e9a1db47a07cea87d",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "d45cf1955c2e41dd9e147541a76d0162",
      "Inputs": [
        {
          "Id": "18935de52a4b4d509a5af0deecdbeb9a",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f55e9920f7fa4d468201eb0bab2e284c",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bc1b037889d4e5c841f5b916c1b58c5",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "254a2da754394a22bdc053660c8ae550",
      "Inputs": [
        {
          "Id": "ffb70a570cbd454a90481b2825bff81b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfefcaa0d0af4e35964dd3262b47522f",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e9267712b3a4ae9b4130f23971a580f",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3314cdf441ce47adb55c96b8e87cb3cb",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{existing_number}",
      "Id": "ebc677ba74f349d581eb89a79f50b8c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "437eccbb3d724fad9779325d68db224a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "745d81c493ee465684bd2dca363c1732",
      "Inputs": [
        {
          "Id": "fbcd7126c9c3443cb03cdb905c91ead5",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "369839d064054499b2e82ca01d89b08a",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb7dd1c3f9dc4b398d13b0a973a407db",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb1663514382423ba994c96a3802f02c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "d2716a15fa7b4783a84eeb143861c6b9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1746da7d88474f7fafe003decdd00b5d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "35aa8435dc9b403b9c32aa5427de285f",
      "Inputs": [
        {
          "Id": "7b33449e9e074180902e12f0ebdf5a5a",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c3dc18fed984849a49e03df5c51e089",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "647f8844bb9c4fc699893a2c544ea501",
      "Inputs": [
        {
          "Id": "9c5074b6100845df8d56e53f64284d62",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12a7938ec704414893a42981de49dbf8",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c76f836d0934456ea2a9c07013f94183",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35132014c7f64508aa8662dcaec012ed",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "AdvanceSteel.ConnectionAutomation.AnalysisResults, AdvanceSteelConnAutoNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Revit Member End Forces",
      "NodeType": "ExtensionNode",
      "Id": "38828e1188c846548bfd27c1fe828632",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f126b934d0f47b0b1aa9b3814e0022f",
          "Name": "analysisResult",
          "Description": "The analysis result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select analysis result"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.BySlopeAngle@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,double,double",
      "Id": "1c3e27d8e616407fa057a4d131be8172",
      "Inputs": [
        {
          "Id": "8485a8e5156b428db03e4e7262e149d7",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74698e024cf3421f91730ebb748846ae",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c37393f834f45c48c135f009501f6bd",
          "Name": "rangeStart",
          "Description": "A value between 0 and 90 degrees representing the start of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e5c64e8ef0140fcbf6c8c7bd0d7af41",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 90 degrees representing the end of the desired range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20b80335838747c6abc365f715551e8a",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07966c2103744526b89e018895ce2100",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain slope angle (angle between the axis of the element and the horizontal plane).\n\nFilter.BySlopeAngle (node: ConnectionNode, index: int = 0, rangeStart: double = 0, rangeEnd: double = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "6c93ec56f8074203a7c856b523cf73a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f3b3ebb609b4ca88628054631979fb6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByAngleBetweenBeams@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,int,double,double",
      "Id": "0321480046804511bbc7a985bb90dbe7",
      "Inputs": [
        {
          "Id": "ea8627b10bd54d29a4639c1c2413c42a",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5608d02060d4b39819d042dd33a8f02",
          "Name": "indexFirst",
          "Description": "The zero-based index of the first structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "893f8b5fb5324a49bb113ba42174d145",
          "Name": "indexSecond",
          "Description": "The zero-based index of the second structure data element to be compared.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afb5da9057a4402da731d40e74fdcca4",
          "Name": "rangeStart",
          "Description": "A value between 0 and 180 degrees representing the start of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da9ecccf23d74ae6b62b773fddb85575",
          "Name": "rangeEnd",
          "Description": "A value between 0 and 180 degrees representing the end of the desired range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd97ddc09337416fa263b7fa10d73a19",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31591c1b0e2849c994949dc9b3189d7e",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where certain axes of the Nth and Mth structure data elements in the node form an angle between within a certain range. This is similar to ByAngleBetweenAxes except it only measures the angle using the X axis, and for the case where the structural elements meet end to end the angle can be between 0-180 degrees instead of 0-90 degrees.\n\nFilter.ByAngleBetweenBeams (node: ConnectionNode, indexFirst: int, indexSecond: int, rangeStart: double, rangeEnd: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;\n2;\n180 - x;\n180;",
      "Id": "9b832420e2f24b81b2f6c68ea6ce7aca",
      "Inputs": [
        {
          "Id": "174a8dc5cba84e49bd36d5fa2454e4b8",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "178c98cbf40e46409d5a324b21e367ef",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fd878b883684a639cbec8af49a96981",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "68092365118f4ff9bd12d510b7c92b45",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21783c126200480aa41d6aa7724f8743",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "63d940a6f6b9432d8d2531ddcb7889a2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "83c659c4fbac4390b77b880e2190c979",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.RemoveDuplicates@var[]..[]",
      "Id": "84d9c853239e477c8b5c92c9a036c7e9",
      "Inputs": [
        {
          "Id": "bfc2517172c14f9db94038a1887912a2",
          "Name": "nodes",
          "Description": "The nested lists of connection nodes (ConnectionNode[]). It is recommended to filter by geometric conditions beforehand.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6326ac01bfeb413daff7bea72107cdda",
          "Name": "ConnectionNode[]",
          "Description": "A partially flattened and cleaned list containing only one connection node for each group of structure data elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all connection nodes that are permutations of one another { [beam1, beam2], [beam2, beam1] }, keeps only the first node { [beam1, beam2] } and removes null and empty items.\n\nConnectionNode.RemoveDuplicates (nodes: var[]..[]): ConnectionNode[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4f01b16137e64076a046161d7875e06f",
      "Inputs": [
        {
          "Id": "2b06e5443fd94ee0a14ef7ad48bc3dd8",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3de5479ec548477ba96e75f15a81c43c",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "865e389fe1da4014b63af65a70e732ef",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "fd2e862ad1aa4f54bb98f69246640f34",
      "Inputs": [
        {
          "Id": "868f3cea5205453586619b73a58cfd1b",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "629e26c887bb4ed9a692de8dc5d7b747",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Filter.ByZoneType@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int,string",
      "Id": "672ebc73ffdb4667a823b19e5165e2f0",
      "Inputs": [
        {
          "Id": "4eef4945406845ff9d43ca8ff911cac3",
          "Name": "node",
          "Description": "The input connection nodes.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04cc2be5168945afb4086193c13129a2",
          "Name": "index",
          "Description": "The zero-based index of the structure data element to be compared.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fc332fd8fb04817bf044407e84040b5",
          "Name": "zoneType",
          "Description": "A case insensitive string representing the zone type (it can be end or body).\n\nstring\nDefault value : \"End\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abac91f43c1e40a7b3ed11fcc7d02577",
          "Name": "accepted",
          "Description": "The nodes that pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a6f07b2e82f4f1db298e9a338b9a06a",
          "Name": "rejected",
          "Description": "The nodes that do not pass the filter.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection nodes where the structure data element at an index has a certain zone type for that node.\n\nFilter.ByZoneType (node: ConnectionNode, index: int = 0, zoneType: string = \"End\"): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "53738b4ce754457586ce278aa4e0490a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bce545c226154eadad8783dbc8c19682",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "3bbdc629c7134289825732ba76f82142",
      "Inputs": [
        {
          "Id": "11b2a35241e841d68481acf075b364bd",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a98451165f24d8bbb317e4ccc0c954c",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d69f6fb1e78b45f29c10a5649181b9cd",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.TypeName",
      "Id": "cef3e29a69364a088cca9949265da0dc",
      "Inputs": [
        {
          "Id": "12bef3a517c64f50a9251f8a6fcbf61a",
          "Name": "connectionType",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6bec47a359a42518c38f7c5f2cb6d4d",
          "Name": "string",
          "Description": "The output string containing the connection type name.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the connection type name from a connection type.\n\nConnectionType.TypeName: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# (C) Copyright 2021 by Autodesk, Inc.\r\n# Permission to use, copy, modify, and distribute this software in\r\n# object code form for any purpose and without fee is hereby granted,\r\n# provided that the above copyright notice appears in all copies and\r\n# that both that copyright notice and the limited warranty and\r\n# restricted rights notice below appear in all supporting\r\n# documentation.\r\n#\r\n# AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\r\n# AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\r\n# MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. AUTODESK, INC.\r\n# DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\r\n# UNINTERRUPTED OR ERROR FREE.\r\n#\r\n# Use, duplication, or disclosure by the U.S. Government is subject to\r\n# restrictions set forth in FAR 52.227-19 (Commercial Computer\r\n# Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)\r\n# (Rights in Technical Data and Computer Software), as applicable.\r\nimport re\r\nimport math\r\nimport locale\r\n\r\ndataEnteringNode = IN\r\n\r\n# The idea is to replace the number with a string that will preserve\r\n#   as best possible intuitive sense\r\n#   * for the numbers magnitude add a single character at the beginning\r\n#       indicating the number of digits in base 10, so the numbers with\r\n#       fewer significant digits (above unit) come first. e.g:\r\n#           * 5 will be \"[1]5.0\" - the 1 says it is between 1 and 10\r\n#           * 11 will be \"[2]11.0\"\r\n#           * 0.5 will be \"[0]0.5\" - the 0 says it between 0 and 1\r\n#   * for negative numbers we will use different characters to leverage\r\n#       their ordering in ASCII code, they will not be readable, but\r\n#       the ordering will be correct\r\ndef num_sortable_str(my_num:float) -> str:\r\n    # get the number of significant digits\r\n    lead_digits = 0\r\n    if my_num >= 1:\r\n        lead_digits = 1 + int(math.log10(my_num))\r\n    \r\n    sortable_number = ''\r\n    # take the first part unchanged, then add the second part by \r\n    #   replacing the match with the magnitude and decimal\r\n    #   representation of the number\r\n    if my_num >= 0:\r\n        # why 48 + lead_digits? to make that char printable, to avoid\r\n        #   characters that break sorting, starting at '0'\r\n        sortable_number += '['+chr(48 + lead_digits)+']'+ str(my_num)\r\n    else:\r\n        # for negative numbers add a '!' sign to make them all smaller\r\n        #   than all positives, and inverse the values so that the\r\n        #   numbers bigger in magnitude are smaller when comparing\r\n        #   negative numbers.\r\n        #   why '!'? because it is generally smaller than '0', while\r\n        #   '-' often has an issue where sorting ignores it completely\r\n        sortable_number += '[!'+ chr(126 - lead_digits) +']'\r\n        \r\n        # also each individual digit needs to be inverted for negative\r\n        #   numbers, they will no longer be readable, but that's fine\r\n        inversed_digits = [chr(126 - ord(c)) for c in str(my_num)]\r\n        sortable_number += ''.join(inversed_digits)\r\n    return sortable_number\r\n\r\n# This is the entry point, this regular expression identifies possible\r\n#   numbers we want to interpret. If this does not match we will not\r\n#   treat it. As regular expressions do not do arithmetic we will need\r\n#   a function to do that logic for us, replace_numbers_for_sorting.\r\np = re.compile('(\\d+[\\']?)(([ _](\\d+))?((([ _](\\d+))?[/](\\d+))|([{0}]\\d+))?[\\\"]?)?([^\\'\"]|$)'.format(locale.localeconv()['decimal_point']))\r\n# group  0 -> entire matched string\r\n# group  1 -> mandatory number, either the number of feet with ' or the\r\n#               whole or first part of fraction, or decimal\r\n# group  4 -> optional number, whole part or numerator\r\n# group  8 -> optional number, the numerator it it has a whole part and a\r\n#               fraction part\r\n# group  9 -> optional number, the denominator, whether or not is has a\r\n#               whole part\r\n# group 10 -> optional decimal part, with leading digits separator\r\n# group 11 -> final character to avoid combining separate lengths\r\n\r\n# Notes:\r\n#   * Negative numbers are not currently considered, but the logic is\r\n#       there. To treat negative numbers just add \"-?\" at the beginning\r\n#       of the above regular expression.\r\n#   * If feet symbol is present then inches symbol should be present,\r\n#       otherwise they will be considered to mean different things.\r\n#   * As separator between feet and inches, and between the whole part\r\n#       and the fraction part of a fracionary number are accepted only\r\n#       space ' ' and underscore '_'\r\n#   * The decimals separator is checked against locale, but not other\r\n#       regional settings such as digit grouping separators.\r\n\r\n# Here we need to iterate through all numbers in the string and interpret\r\n#   them as best possible by treating decimals, fractions with or without\r\n#   whole part, and feet and inches.\r\ndef replace_numbers_for_sorting(s:str) -> str:\r\n    s_consistent_spaces = re.sub('[ ]+', ' ', s)\r\n    key = s_consistent_spaces\r\n    offset = 0\r\n    \r\n    for m in p.finditer(s_consistent_spaces):\r\n        has_feet = m[1][-1] == '\\''\r\n        has_inches = m[2] and m[2][-1] == '\"'\r\n        is_decimal = m[10] is not None\r\n        is_fraction = m[9] is not None\r\n        \r\n        if has_feet:\r\n            whole_part_idx = 4\r\n            numerator_idx = 8\r\n        else:\r\n            whole_part_idx = 1\r\n            numerator_idx = 4\r\n        \r\n        # if it does have whole part then the numerator is separate,\r\n        #   otherwise it might still be a fraction and the numerator is\r\n        #   where the whole part would be if it had one\r\n        has_whole = m[whole_part_idx] is not None\r\n        has_numerator = m[numerator_idx] is not None\r\n\r\n        if is_decimal:\r\n            # there is a decimal part, reconstruct it and parse here\r\n            if has_whole:\r\n                my_num = float(m[whole_part_idx] + m[10])\r\n            else:\r\n                my_num = float('0' + m[10])\r\n        elif has_whole:\r\n            my_num = float(m[whole_part_idx])\r\n        else:\r\n            my_num = 0.0\r\n        \r\n        # this spagetti code is needed so we can try and tell when there\r\n        #   are two separate numbers from when there is a number with\r\n        #   whole part and fraction or feets and inches\r\n        is_one_number = not m[2] or (has_feet and has_inches) or (\r\n            has_whole and not has_feet and ((not has_numerator) or (\r\n                is_decimal or is_fraction)))\r\n\r\n        fraction = 0.0\r\n        if is_fraction:\r\n            if has_numerator:\r\n                fraction = float(m[numerator_idx]) / float(m[9])\r\n            else:\r\n                fraction = my_num / float(m[9])\r\n                # here the whole part is missing, but we used it above as\r\n                #   the whole part, we need to set it to zero in this case\r\n                my_num = 0.0\r\n        \r\n        my_num += fraction\r\n        sortable_number = ''\r\n        \r\n        # if we had a number of feet just do the conversion and add the\r\n        #   equivalent inches to the result.\r\n        # we also need to trim the last 2 characters\r\n        first_num = None\r\n        if has_feet or not is_one_number:\r\n            if has_feet and has_inches:\r\n                # do this only if we had inches as well\r\n                my_num += 12.0 * float(m[1][:-1])\r\n            else:\r\n                # if we only had feet, then treat this number separately\r\n                # if we don't have feet, then this is also a separate\r\n                #   number, not the whole part of a fraction\r\n                if has_feet:\r\n                    first_num = 12.0 * float(m[1][:-1])\r\n                else:\r\n                    first_num = float(m[1])\r\n                    if has_numerator:\r\n                        # the numerator is actually a separate number\r\n                        my_num = float(m[numerator_idx])\r\n                \r\n                sortable_number += num_sortable_str(first_num)\r\n\r\n                # only when we had a separate feet number before our actual\r\n                #   fraction or decimal number do we need to add another\r\n                #   character here otherwise it will be lost by separation\r\n                if m[2] and len(m[2]) > 1:\r\n                    sortable_number += m[2][0]\r\n        \r\n        # we either had a single number or we had a previous number\r\n        if (is_one_number ^ bool(first_num)) or (not has_feet):\r\n            # now that we have computed the absolute value of the number we\r\n            #   need to set its sign\r\n            if m[0][0] == '-':\r\n                my_num = -my_num\r\n            \r\n            sortable_number += num_sortable_str(my_num)\r\n        \r\n        # add back the final character, it could be important\r\n        if m[11]:\r\n            sortable_number += m[11]\r\n        \r\n        # we need to keep an offset because we will be searching in the\r\n        #   string to ensure correctness, but replacing in the 'key'\r\n        #   variable\r\n        idx = m.start() + offset\r\n        offset += len(sortable_number) - len(m[0])\r\n        \r\n        # we get the resulting string up to the current position and then\r\n        #   replace the matched string in the remaining string only once\r\n        key = key[:idx] + key[idx:].replace(m[0], sortable_number, 1)\r\n    return key\r\n\r\nOUT = [replace_numbers_for_sorting(s) for s in IN[0]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3158084883ab47dc955a4f081b566e99",
      "Inputs": [
        {
          "Id": "c593c798b8f44b0194380e6d29915472",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad060e3ab8c044e099230fbae08877d7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "d74f38d24d484e2fa1c0726ca6657039",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "575d551fe1004c6493abfb9b72f34d13",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "edb2ef938555433da5c46207ff939565",
      "Inputs": [
        {
          "Id": "fe9e28014af344fb93251f7ed78b29b8",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31525e7465ad46c581d29053956e8d56",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c07778c63324c9b8797c91290e6acfd",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84de71b95a3241d4bb221cb1a38083f3",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "da181444a7264cc79b9c3ef8b966c49d",
      "Inputs": [
        {
          "Id": "3fcb3c479d984601a804a36e28f2f892",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65abe159f7d848aba2ee9228c0bfac4b",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b390665e81f46c89f3ca1ed446677c9",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "ea1606a2d32f4d43940ca6ee94a0383a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd7922d2909c4f0dab3fc53960372417",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType.Validate@AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode,int[],AdvanceSteel.ConnectionAutomation.Nodes.ConnectionType[],string",
      "Id": "3d571aded5214e05b201c57c1dfa7dbc",
      "Inputs": [
        {
          "Id": "68f3fbdcbcca4e4982d053e7ff94b094",
          "Name": "node",
          "Description": "Provide a specific connection node from the model for validation.\n\nConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b3ca4e2a5b941b387d2e96bdcf608fa",
          "Name": "uniqueIndexes",
          "Description": "The order of the input objects from the node.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0dbc63272f524558aa76cba86ec76f71",
          "Name": "connectionTypes",
          "Description": "The connection types to be validated.\n\nConnectionType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26753054cb064f7baf907e884f1ffd46",
          "Name": "analysisResult",
          "Description": "The analysis result identifier. Use SteelConnections.Input.AnalysisResults dropdown node to select the identifier.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b270a71c3c5b4b988a9855a85afe1c78",
          "Name": "isValid",
          "Description": "A list of booleans. True = the range passed for the connection type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cec5bbe56cf54b1ea5080fb04919000b",
          "Name": "additionalInfo",
          "Description": "A list of dictionaries containing additional information from range check, for each case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Validates a connection type against a specific model situation.\n\nConnectionType.Validate (node: ConnectionNode, uniqueIndexes: int[], connectionTypes: ConnectionType[], analysisResult: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode.Zones",
      "Id": "0aadced215be45b2845e6ca37aef95a7",
      "Inputs": [
        {
          "Id": "5464bb61ce70441d868c0d8d21e1c8ce",
          "Name": "connectionNode",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.ConnectionNode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f8bd95636dc4f3eb7b5471bc65a3b05",
          "Name": "Zone[]",
          "Description": "A list of zones.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the zones within each input connection node.\n\nConnectionNode.Zones: Zone[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.Zone.Parent",
      "Id": "e5b7758995744be68215bf88e11a97bc",
      "Inputs": [
        {
          "Id": "13c14addff6441e3a528609cdc9bca9c",
          "Name": "zone",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.Zone",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39aa725062144c3bacd2dd8a0a768217",
          "Name": "ModelObject",
          "Description": "The output structure data element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the parent of the zone, which is a structure data element.\n\nZone.Parent: ModelObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData.RevitHandle",
      "Id": "5f1d296a330b4f29b2794d55e591370b",
      "Inputs": [
        {
          "Id": "a840a9d122a340bf95d50ae0c1231de1",
          "Name": "structureData",
          "Description": "AdvanceSteel.ConnectionAutomation.Nodes.StructureData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44e823d378d84e26a24b53daf1e9ff43",
          "Name": "RevitHandle",
          "Description": "The Revit handle as string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Revit handle of a structure data element.\n\nStructureData.RevitHandle: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.SectionProfile + \"|\" + x.SectionType;",
      "Id": "082ea98603724b079bbdf5a374ff99b8",
      "Inputs": [
        {
          "Id": "42b88320bbe04adebfc86c53011cfe98",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baba87cc12fa44ce9c750b26d1fe52c2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}({element_ids_numbers})",
      "Id": "17deda83606d4a7da966c8ec1dbc1036",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a252f94a897b4e899995f60cb0a9619e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{types_text}",
      "Id": "dc67f63c9fae48f68c34bd0e5a9410d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cf4f4ee99ab04e17af82b758c7cbf2de",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{element_ids_numbers}",
      "Id": "2a2cbb200bac4920a25f27dccd4be663",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4cdfaee4fdb4c6ea7e6b1f068c522b4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "41584edd4b4e4fefa74c5f29e98d118a",
      "Inputs": [
        {
          "Id": "a954d3964d1346bc8c5f631949a88de5",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91a87816cdc4419e8b2dd09ab3c2abc6",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb9e9e3c550045c5a7a08373a298e5de",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54d46a551f304d5e8f0d03fd4fbf7b72",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "24b961c7d3504fce9f1060dd294c7184",
      "Inputs": [
        {
          "Id": "fdb96eecf6c446958bdc9b5c59f4dda7",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7d8b20f975e4ec792cf6e4c9839106a",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea05fe9cdbad48f99ce3a94b3d4af1a3",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f180ac43bc244f969b03d78bf3b7be49",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8c459f95f0db44aea943f50dc5f0f6af",
      "Inputs": [
        {
          "Id": "e366ce0c230742e994cdd3875001c27e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "586594b499fd4a0c84ffbfcb3aa71885",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd094703790b40ac9616ce5e29936feb",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\", \";",
      "Id": "031182b929df402f88b55d8598fafc55",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da213eecca3343159eac2355e49563fd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "3e32903984964930a5534469f7d5c777",
      "Inputs": [
        {
          "Id": "4fa42f6e455e4633b074b5ed9dd8d8f0",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ee2947091b304200a8faa83ae36bda14",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "210b853120a24a1f86ba3ac7586dde42",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7ffc630cb245460fb5970336e3369f46",
      "Inputs": [
        {
          "Id": "1e4b6aea97804a18a3cefb22d9ce2d65",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9cecb777fe124245b2ad4ede9fc9ca3f",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59df49fe3ede412d9afe3e1bf95cb55e",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "c90dd3e1c47b4afdb979455aaf381671",
      "Inputs": [
        {
          "Id": "50bd8b0a619b476981b003e2d87266ad",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "350104c953c64f80a69471357c472727",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abe4f52f5eb64ecb801debf6d11907a2",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "260f77834b2041de816e3a8c3625f529",
      "Inputs": [
        {
          "Id": "9404b7ed64024d69bd8cb9753eb45b24",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c04942411b9e44cabb156c5c321d71d3",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e6a38894e124e4eba88c995930df68b",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "6d3142f7ffaa4c14bc505eb147f5710c",
      "Inputs": [
        {
          "Id": "449294fe15fc46e68930a510defbb3e3",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c0f4631fab16467299095d8a0f7b34f0",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7aef8e934cd14f7c9fc598730abba253",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "a73188cf2f8c4a4c906b49789c8d084d",
      "Inputs": [
        {
          "Id": "ef9cdc7861a94a098fae883a0ceabf4e",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0f3e36f7fc9142a0a82bc1dda0c7151f",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0366a1e02c74729a02da055368d566f",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"kNotPassed\";",
      "Id": "b0edf31c432845439a2e44588118c626",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06fd9ec1b26944ccae12742b40559651",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.StartsWith@string,string,bool",
      "Id": "50142a7af4a340deb00d4bc3e366de3a",
      "Inputs": [
        {
          "Id": "afe8a99b38b74d5fa7124df8ed506fd1",
          "Name": "string",
          "Description": "String to search the start of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8582ccddf7f24cbebbc94cfcc29a324e",
          "Name": "searchFor",
          "Description": "Substring to search the start for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f437b5fbc314437fbce903c5de495571",
          "Name": "ignoreCase",
          "Description": "True to ignore case in comparison, false to take case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9a487e99e244016904cf05f795dcb21",
          "Name": "bool",
          "Description": "True if string starts with substring, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string starts with the given substring.\n\nString.StartsWith (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "2c6a7d74e3e44e6db3786dd07e0a9792",
      "Inputs": [
        {
          "Id": "2bf9290c8ec7425c8a2f4859d8c1af8b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3326435ca312491081bd08738cf6cc43",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a28b1a56a08841f7bcde702cb9f4cd1f",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c758ed99d45946c8a0f278f8a7aa4974",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.ConnectionName + \"|\" + x.TypeName;",
      "Id": "240cedcc78124bebbba845962219230f",
      "Inputs": [
        {
          "Id": "b07d107629dd415da5af5661260022a5",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f7c17e84c9044e4932a78e8e8554642",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "cdc5c512d623484d8b99055aa5523676",
      "Inputs": [
        {
          "Id": "6674591ba10a4f59b1b6b17f204e85aa",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8244ba1343114a8fa72cd91851774757",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5512a7d638e544ec8551a9e9a8f984ba",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "3010aec6b7ed47e0b85a73000a71e4cc",
      "Inputs": [
        {
          "Id": "a7ce7b7d85b846d99c7ed955df511db3",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7116f72796a410bb0b4eedcfbd522cd",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c6c203307b24ee5974ff8e39799061d",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ";",
      "Id": "e373ad042129485eaee23302b4781d65",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "853f4d00e3d947a2b4837b053e74da73",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The search did not find any connection types corresponding to the filtering criteria.",
      "Id": "53205e8fb64a49b19100e55cab74d2e7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad256f2d8bc0450892ee87726bbd33fa",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "No connection types of the specified families were found in the library file or in the current model.",
      "Id": "1dfae5cfe2ca4b09a29fecc583214ff5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cf1981cf42154c7aa4469c2c3777fae2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "The selection does not contain any suitable situations. Please review the geometric parameters and try again.",
      "Id": "5d48327b885443cab7c6a16400c14531",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "58db68f7c16d458bbccf9b49e8734a31",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5ab4d82800b0452094d3aa5137553b62",
      "Inputs": [
        {
          "Id": "3f521c3b735745d4a980ba5b8518c4cf",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf9a03a57f3544a79b9f7316e6d4fc39",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d333ed2140dc406991e515a9b61a3586",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e41c733e0e394f29ae079928b6e13b9f",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8c648d67cb6a40e0b29940cf04bcf46b",
      "Inputs": [
        {
          "Id": "f2dc189239264e90adf688e38c492ca6",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a15e77a66834b318e82aaec3385c05f",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8ddfae58f0849bf919606ec2b1bbc8e",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdd66adee64647ff9f886244c407cdff",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "7bde4fd6455841f38b851839742c39f3",
      "Inputs": [
        {
          "Id": "e019235569b843768494c7d6973b0f3e",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad6554690dfe4b9c898be309eb78e9e4",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aafdc6daea6c4efabc060a25b995177c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61b09e674a4445609efc8b0e4a78bad7",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "2cda305af11b426a9def5d392bcb30ea",
      "Inputs": [
        {
          "Id": "bc7a695b9a384613af1818b0c89700b4",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e88c971220c4f8f8ec91b534364911f",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dea0d55623da4cc899e6504802f13064",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "c4b9f6d941dc43058e1887f77d92cee7",
      "Inputs": [
        {
          "Id": "e9bba6107291465da0797d5ce29399a6",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d3b2a310cdf4ae0a8fb9721065cc4ab",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d68fd6db845a4c8aa0f681ef65341a8b",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "ad298864527f409091ea628b563f15fe",
      "Inputs": [
        {
          "Id": "ce3351c40e58443a8b9576a60e614ef7",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7292913a7b4f4fa58ff56d4eaf6e74a9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "018e5b69259a42ac9b150116c565b9fd",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "16eabe12e75e4dc1a9089ffec137c341",
      "Inputs": [
        {
          "Id": "b90014e8a444419ab61bf01b9438ad8e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87d67bcd64084dddae2cc5e50824a88e",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "89768149587249d9b08a79d316479899",
      "Inputs": [
        {
          "Id": "cca58bffd1154f4eb8898da3f1f7ddb9",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79599425bb2c48b4876d8cf73e58f8c9",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "dba63372f2bd469da9644cbc6b430351",
      "End": "9139b031129046b2a1a7f9f43de76e92",
      "Id": "4fa9435f6d874414a54300ac31eef002",
      "IsHidden": "False"
    },
    {
      "Start": "0c091f3f481445218d47efc78287259c",
      "End": "8212eb9c9d8c49d2a76d76809a309e94",
      "Id": "1e0ab95aeeef46e09be4b3fcd3217f90",
      "IsHidden": "False"
    },
    {
      "Start": "e8823b5f019f48f68b6b681e641f2660",
      "End": "79c4ee477399447da176b1f256eb638e",
      "Id": "a2a2e0cfb963474bbfad81e27ef03f41",
      "IsHidden": "False"
    },
    {
      "Start": "afa893eaa5de46fa9ce002c4e28f8ea1",
      "End": "e307d01036c447bbafaf21955d6460e5",
      "Id": "0c27072e0ab3458a8f295f4bc88a090f",
      "IsHidden": "False"
    },
    {
      "Start": "e47e13bd9c0a4ea99a59eb668f197b1e",
      "End": "5ca90615bcdc4566ad508e5771a8e945",
      "Id": "1b2056f0e937447db0aadada9df3b89f",
      "IsHidden": "False"
    },
    {
      "Start": "1bd2d123c3d94abca7e9992dcda22716",
      "End": "25418920fcf74f3090c265671d5906e7",
      "Id": "79f2765c0a4c4ba1970bdf5cf16daa94",
      "IsHidden": "False"
    },
    {
      "Start": "b4575df7326346a99186d0fa7f7f68ce",
      "End": "eb9b4f7d0e2542438a4b22f4b50aa15a",
      "Id": "5b30ef5ce89d4d87a8aed0145bc4a423",
      "IsHidden": "False"
    },
    {
      "Start": "3313e6f8f9b543a8878f837edafbae7f",
      "End": "d656cd5aaed74e56a5c55127ba80b843",
      "Id": "ef8dd08ce05e4fd5b1416a27234e8ab9",
      "IsHidden": "False"
    },
    {
      "Start": "872cc7af41bc435e8e9c9287366f16ff",
      "End": "8485a8e5156b428db03e4e7262e149d7",
      "Id": "2b5f8333e99344cdbed0dbdf2ea6dbdb",
      "IsHidden": "False"
    },
    {
      "Start": "374e1ff6640649faa07f47bcccb7bd7f",
      "End": "cf98bc5b441244b0b407d6b71fe99d27",
      "Id": "c052f00c89dc4165bbd99e33b7dbfb30",
      "IsHidden": "False"
    },
    {
      "Start": "d6bccf5579f84a6496a53819c0d126a3",
      "End": "641ca3aebb16443c902431fe61bb5127",
      "Id": "1d1eba77cc1c482dad0de2596a493a1f",
      "IsHidden": "False"
    },
    {
      "Start": "d6bccf5579f84a6496a53819c0d126a3",
      "End": "0c37393f834f45c48c135f009501f6bd",
      "Id": "6f514c64682447c384b5570aea92053c",
      "IsHidden": "False"
    },
    {
      "Start": "8352ce7cfa8340249d4d2c77b4d94765",
      "End": "2565857cacda40b6821fb433dbd5f6a1",
      "Id": "da3867b34e864eeaba4f4f440e610d03",
      "IsHidden": "False"
    },
    {
      "Start": "8352ce7cfa8340249d4d2c77b4d94765",
      "End": "5e5c64e8ef0140fcbf6c8c7bd0d7af41",
      "Id": "217ef2bb203641879f38afe0406edec8",
      "IsHidden": "False"
    },
    {
      "Start": "881d3b5066d2416ea41953ba13ced78d",
      "End": "1901e0d33af342ebaa77014a352c0c32",
      "Id": "b2c6b815a2d441ba845ecca322e013e5",
      "IsHidden": "False"
    },
    {
      "Start": "d0b12606021e4dbda2be3dfc4f977dc3",
      "End": "2e2c7e481b8f4c97b05b11b5cadf98fc",
      "Id": "531fd8a51b8747e3b59409e00debd515",
      "IsHidden": "False"
    },
    {
      "Start": "19ef94231bb245bf9f8d0335d2470c6c",
      "End": "5587e93c96a1461bbf95cde6a7300220",
      "Id": "4d128a78f44b4228b96e1210e441cc29",
      "IsHidden": "False"
    },
    {
      "Start": "3f6d6943546347d2828ddfdfb9c156f9",
      "End": "a9ff16241fe7408d97349addfede0721",
      "Id": "ffa846437ff04004834b628f0176c79c",
      "IsHidden": "False"
    },
    {
      "Start": "e3e6b35fdf5e421fac487c209e921316",
      "End": "bfc2517172c14f9db94038a1887912a2",
      "Id": "0a1832515dd546eb9afbcbe961027369",
      "IsHidden": "False"
    },
    {
      "Start": "6af4a39229064ca09d4e222acb42e2bc",
      "End": "fcf786854a0f4dd3be94e87cc2b56554",
      "Id": "20cd8b8267ee4c67913593908e1f7278",
      "IsHidden": "False"
    },
    {
      "Start": "7cb4c5a4d7744158b43d117c10964990",
      "End": "fe5a20fac51049149e5df32f438e9af2",
      "Id": "eab02c7d58ba4f0ca657fa8856a2ebb1",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "34c6d917408d47f8a336053edaa54c53",
      "Id": "db55733388b9490eb4e642866792ab8a",
      "IsHidden": "False"
    },
    {
      "Start": "2ec118e79ec548a08f25cb936668f191",
      "End": "7669dbfabca345b7970fc2f3d940b2cf",
      "Id": "400547f2c82a43eda423518b307ccd03",
      "IsHidden": "False"
    },
    {
      "Start": "944c09bf60784fb789618a7fcb2b0352",
      "End": "18935de52a4b4d509a5af0deecdbeb9a",
      "Id": "623fa12ce2324f809572bbcf045c39d1",
      "IsHidden": "False"
    },
    {
      "Start": "733b3b1b4534485b8af5aebef07e728c",
      "End": "2ac9228c4c71455ab80f8436b0b03bed",
      "Id": "a061dcabbca44f009709f35e395e20a8",
      "IsHidden": "False"
    },
    {
      "Start": "733b3b1b4534485b8af5aebef07e728c",
      "End": "d475cfc57692481789ade76cefe06c75",
      "Id": "1a21d0c718ae4c249569f4ff3bf78f62",
      "IsHidden": "False"
    },
    {
      "Start": "733b3b1b4534485b8af5aebef07e728c",
      "End": "1b3ca4e2a5b941b387d2e96bdcf608fa",
      "Id": "cfe3e854a18547ad9fa7ae2a7f4ec59f",
      "IsHidden": "False"
    },
    {
      "Start": "68aba1580a084fcc909abd9f22159f2b",
      "End": "11b2a35241e841d68481acf075b364bd",
      "Id": "b6c1dab9ef5d4395995062e8c5564db0",
      "IsHidden": "False"
    },
    {
      "Start": "2c223a4ec19e42e0a7c0d9073df939d8",
      "End": "30a3811490b84915938faed169b95026",
      "Id": "c4d90b455f3b4b1a9a4b4c8aad98eaad",
      "IsHidden": "False"
    },
    {
      "Start": "43f18a19a43041419ca1a5fd0b91f652",
      "End": "3fcb3c479d984601a804a36e28f2f892",
      "Id": "5d3eacae9f8c44b99621699e60fbd1b8",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "9280ca763221416c9b8f4fcea36af6b4",
      "Id": "888d37cf48944e59a368d7ec1c3743a6",
      "IsHidden": "False"
    },
    {
      "Start": "970d7651d80c45e9bc8ec306d2a1e31a",
      "End": "c7c51a8392bc4c168554fe0dabd02f79",
      "Id": "9d8c29bb94ee4d9ca5b9fd559d98551c",
      "IsHidden": "False"
    },
    {
      "Start": "d3cda70d8432493f8f2e7e4a3f3ca5ba",
      "End": "a032cac1b4d54d6a867c113e963cd6fa",
      "Id": "078a46de5d004f84a1f7f157025b186d",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "8edc4a160f354bd48769ee988754518a",
      "Id": "ff9e9798fd0b4f1fb88d90c3971e1db7",
      "IsHidden": "False"
    },
    {
      "Start": "b9f79f49d3d04d0eb5c2bfad2b655e3e",
      "End": "1a6633c960864ea7a3de85af872cdd62",
      "Id": "61a99df1782146a8ac40db700558e566",
      "IsHidden": "False"
    },
    {
      "Start": "9f3ad7bd14234448a63f7e071b923279",
      "End": "2766602a35304466b25332322eeff47c",
      "Id": "d4ec813aa2714998a34a2c675ea87d91",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "798bda9e629846bf9fe371b604d0a17b",
      "Id": "7d4babf61aec4ddaa374b36aa98d5bf8",
      "IsHidden": "False"
    },
    {
      "Start": "3adc47502d0e40999d528e3f838639e2",
      "End": "ce37c4f386d54f3585e6485a67d68c4c",
      "Id": "a9de549597e2425b881f50c7f3a67c03",
      "IsHidden": "False"
    },
    {
      "Start": "38bc839560124a8eac19b984757afbaa",
      "End": "1fedb6ded53b4629ba4f540dcb10aa5e",
      "Id": "379987dad1d241eabf1990b792fe55e4",
      "IsHidden": "False"
    },
    {
      "Start": "a7b68347597c4ce9b964ed7a77000133",
      "End": "a7018d8627bc4bd3bcec0088f995aae6",
      "Id": "9b4df741cd7a4b9d9bf9ed7ccbb7f876",
      "IsHidden": "False"
    },
    {
      "Start": "be7f3c15adb847c7a260d8e02b7b7745",
      "End": "f4c63ccf0e834aa9a15868c8e9b37c4e",
      "Id": "031829808d1049fbbf5b1235b9f38372",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "a068174273ba4e339389a8a0cf0b80f3",
      "Id": "daceeedaa27b4fdf9cc341eccfe579fe",
      "IsHidden": "False"
    },
    {
      "Start": "eb7158725d3c4a4ab1f6f3118654ceb3",
      "End": "ce3351c40e58443a8b9576a60e614ef7",
      "Id": "cf5989850e2448769779f8adb011db07",
      "IsHidden": "False"
    },
    {
      "Start": "3f74b564d2ad451db19bbbfa17296726",
      "End": "1b0fd80f9d304f9ba9a4c03abba09ee2",
      "Id": "82b708c96e6744a1840c3f7d86f32d08",
      "IsHidden": "False"
    },
    {
      "Start": "abf79e1baba74ea985d7f5cc2c5cf9bf",
      "End": "126dee5c274546c28f561969b3546d62",
      "Id": "11de33977aec4a03b1e9aba47f52e7b1",
      "IsHidden": "False"
    },
    {
      "Start": "fc303eecbebd43eb967816b8c8d18ef8",
      "End": "5e0169e69ec14c21a5a8d58e11fe20cb",
      "Id": "c6167532537e42e480830278423ff16d",
      "IsHidden": "False"
    },
    {
      "Start": "901a540a6c5e4acb8b4b5d686f3cd381",
      "End": "31ab609669a34e4a9180c9040e5f2ece",
      "Id": "069d92d714144d44b5cc943fc26e5a47",
      "IsHidden": "False"
    },
    {
      "Start": "3ab32bec1749446981818b6833f90696",
      "End": "439d8e8331ca47d89f4304156db1470a",
      "Id": "903a489caf204c8ba3d73b182120b60c",
      "IsHidden": "False"
    },
    {
      "Start": "e52f7ba8a1954c709be89365ee33e05c",
      "End": "0233f2e308cd4d35a401d787e461fd3a",
      "Id": "4e784a13af6841989a134f56d19f440d",
      "IsHidden": "False"
    },
    {
      "Start": "c9cfa77aa802415eab7e4ca24f35bb12",
      "End": "6bd6774f245c4cec863a30ac2f5e4463",
      "Id": "6db2417329ad41b889f41e2c5395a400",
      "IsHidden": "False"
    },
    {
      "Start": "c0028afe02824f3883a634b77b92eac3",
      "End": "22ba019d3de6469fb8f66a3ab4ced83f",
      "Id": "73fd37194bae4e419e98cf9c3f8a1ba6",
      "IsHidden": "False"
    },
    {
      "Start": "5393e867455b4e76999d5f23cb74e10c",
      "End": "44c417a84b174e68848d95df4cb1c855",
      "Id": "2cd1a9dd05b5496596415dc5ab44b6a1",
      "IsHidden": "False"
    },
    {
      "Start": "578934bf35ba42788b77930d987cc480",
      "End": "e4a30ae1de3a4c95a58f678ff7e07c9c",
      "Id": "58187442da1d4f95926f1aab2ac97e6d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec6ec369e514b66bd409f07f1a5bfdb",
      "End": "9c14eaa6dc094dfdbea42a4c395b047b",
      "Id": "8fe8ba996fec48758463ce6d7e4184f5",
      "IsHidden": "False"
    },
    {
      "Start": "d00018cdbc5d4262b9b9cf135a8857b2",
      "End": "0cdd8bfaeb4e46d4b252a9237fa47523",
      "Id": "088ff8ebe75b4504a8c0fd29c258c1eb",
      "IsHidden": "False"
    },
    {
      "Start": "b1ec7a74bc704b9ca57de9d653a79155",
      "End": "5012cbe92c694c49ad2d3690cf9a2719",
      "Id": "7fefbbde9d0e4cb9af0bd68a829c9f4a",
      "IsHidden": "False"
    },
    {
      "Start": "1d02194c3cd64c2c98abe4a43d3bce9d",
      "End": "24f56f2f68ec4e8586c0327889d1805d",
      "Id": "ecc706416d344151b22510730477d49a",
      "IsHidden": "False"
    },
    {
      "Start": "4b9b1b2e8c2648da8d551ba065b0040a",
      "End": "8c806428de07439c88b2c7d80368cc46",
      "Id": "d5a5faf947bd4c6e9d534f34f26dc29a",
      "IsHidden": "False"
    },
    {
      "Start": "f46b862733e044d69c1a4ec177003746",
      "End": "b2554cedec674fd9aa2f7fc35bab7008",
      "Id": "0eb2a939fab04aac99db2f4637a5f005",
      "IsHidden": "False"
    },
    {
      "Start": "07dbbb1674e54a9e8f6b2a156c204109",
      "End": "435b20457d424320a532552c70a09bd3",
      "Id": "05731ca6b12f462e8690ecedec35ac89",
      "IsHidden": "False"
    },
    {
      "Start": "840de0f9de614622bf0b99cfef6253ed",
      "End": "2a3a7187eaf3433ca5137d1f627d7668",
      "Id": "da6b0dbc09b84d52a504e4cd4315c156",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "a31b2f19310e40aa88e461de9cad50ad",
      "Id": "20311583068548a19561832bb7d5f984",
      "IsHidden": "False"
    },
    {
      "Start": "0938ae63b023462da2a80ea354fb698d",
      "End": "215f13e6d6c7451b89aa57a3f2776976",
      "Id": "0a5ac88576854cba8f983f0f030542a2",
      "IsHidden": "False"
    },
    {
      "Start": "89b226949cd14b53afc189f8c1948043",
      "End": "59eb57c8d5344612abdca83d42bd61c0",
      "Id": "ee7a982ab4864784a07c6b49fd06da13",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "b5f7e7e5851a4cdebfe1b0ee945e4405",
      "Id": "9aefbb467ffd42459ba596fbaedf7824",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "0c5a2cc2796d4d40a55c7d84f2121723",
      "Id": "039501746c774a1bb0cf07eb6822e931",
      "IsHidden": "False"
    },
    {
      "Start": "3a27eb35ed4c4984a251e44c2f04f7cd",
      "End": "79211f1c747b4670a6fa01792af7e5c5",
      "Id": "9ee75ce4600a4874b47e97c60f92f7f5",
      "IsHidden": "False"
    },
    {
      "Start": "7014061952804f38b200d0c5918f5ca5",
      "End": "953a2e05a1bb41d3aa06ac072e73d9fc",
      "Id": "966a372eaa4148669ebb222139563c70",
      "IsHidden": "False"
    },
    {
      "Start": "f42ffd4e7d6b4a629585539c57d17a13",
      "End": "564e99c9566b4ee5bd5fbffbae8f674d",
      "Id": "6657084acdc34901a26a01f3f2969ddb",
      "IsHidden": "False"
    },
    {
      "Start": "8b52cd842fe44268a9e03f873a26c3b2",
      "End": "31525e7465ad46c581d29053956e8d56",
      "Id": "48ec28a7ae1d451d94d35db8f264649f",
      "IsHidden": "False"
    },
    {
      "Start": "a6cbc2429b1f4219910fcc3d11853a58",
      "End": "46ba1030269d42c0bdccc02de5a66397",
      "Id": "6a8a2e4f58f84d0d99a1e4b96313fe2d",
      "IsHidden": "False"
    },
    {
      "Start": "628afbf358244c619694f826300bcc7f",
      "End": "439bf123353a43babf86950043d6a72a",
      "Id": "0fe5a65b35ed4607a58f54e83bf34e6d",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "7b33449e9e074180902e12f0ebdf5a5a",
      "Id": "43fb33d0106e49e5a6ce83f265eb5dc7",
      "IsHidden": "False"
    },
    {
      "Start": "5346315715a4462a97d7a60d709095f8",
      "End": "9c5074b6100845df8d56e53f64284d62",
      "Id": "42d3ff4960274c02bea07a4fa9a16b14",
      "IsHidden": "False"
    },
    {
      "Start": "1390765c6a454b1c946d150be3c6adb0",
      "End": "4b89d003584c4f51bea4e3678de05c0d",
      "Id": "0052a1a43e0d4e4bb94f916aaf653a46",
      "IsHidden": "False"
    },
    {
      "Start": "de4cf278f7cc4032b6b15536488a1a3a",
      "End": "4fa6aa68647448199695a59d7d749879",
      "Id": "d353399ba49140f88183392c7e204d22",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "fa3e9809f83f463998291cd6dbd016a2",
      "Id": "3a784e39da024b33a26b60c64cbfd143",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "12bef3a517c64f50a9251f8a6fcbf61a",
      "Id": "1faf070110404184875182c3d42bd421",
      "IsHidden": "False"
    },
    {
      "Start": "b40eec7e1be9436ebd6b12e55e8cfe17",
      "End": "cca58bffd1154f4eb8898da3f1f7ddb9",
      "Id": "59b004683dcb41b6b52edeb41eae8fd0",
      "IsHidden": "False"
    },
    {
      "Start": "18fb4d87bdb840df9e36a9ed3a64d860",
      "End": "9a46ba6423404a6093cbdb53c325c2a9",
      "Id": "06f4a59e0b69438d9f357c7feff100a8",
      "IsHidden": "False"
    },
    {
      "Start": "27cfa565a9d647c4adcbb89599ba1042",
      "End": "67c8054a8f384e7a8aa6d108528d7d7e",
      "Id": "b8d7e6c9e0d949788424be7ad1716bb1",
      "IsHidden": "False"
    },
    {
      "Start": "18880fd863d2494ab0c39629273b425f",
      "End": "87e7659ef91e4669870cf6df0d08b4e3",
      "Id": "96328ec376474e27a792e4f4e93369d7",
      "IsHidden": "False"
    },
    {
      "Start": "18880fd863d2494ab0c39629273b425f",
      "End": "b4b0119a9d2d4b54be7ec0c59e9cf02b",
      "Id": "39a80b80165845139da6c4442e9d0245",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "0bca034d91e44f93a8fb5c411b7f3920",
      "Id": "931d32f497fb403ea09c3a7899a7f575",
      "IsHidden": "False"
    },
    {
      "Start": "e7dd1a200015469899296f304adef090",
      "End": "cda45607c2a74fbf9e4f9e3ba0ae3159",
      "Id": "f1f9d5115d394ef8ae11c96fc3f87414",
      "IsHidden": "False"
    },
    {
      "Start": "8e42c95f2dec4300bcdaf38ed6cdce08",
      "End": "4eef4945406845ff9d43ca8ff911cac3",
      "Id": "6c7cd014c0274f7cbaf84b611d84a37d",
      "IsHidden": "False"
    },
    {
      "Start": "09bca46ccf2a48859709fd4d80dde4c3",
      "End": "668e6d307b734b7a894d8d0aa7920a35",
      "Id": "62edb465e54e4dbaa47a22e4441e9c14",
      "IsHidden": "False"
    },
    {
      "Start": "df5273941e614abe8790e600ec43355b",
      "End": "bddc1f6f23e74af3a78b22f516810da7",
      "Id": "ac3bf5bbecca4a93ab9cd20f648c8cfb",
      "IsHidden": "False"
    },
    {
      "Start": "bedfc1817de342eaa8f615bd6f4577a9",
      "End": "9abf1463b0564e40bcd4c16725e35a82",
      "Id": "67997a1f848f4c688e904d42439444dc",
      "IsHidden": "False"
    },
    {
      "Start": "ca65a379b8f640ecbbd00ea1abe6b2bd",
      "End": "dfd5fdb26cc74803b6ae34116fd9b969",
      "Id": "d41f3f9facb146c9abe74ff7372bf365",
      "IsHidden": "False"
    },
    {
      "Start": "ca65a379b8f640ecbbd00ea1abe6b2bd",
      "End": "5f73364e90c141fea94ee55744a96ad5",
      "Id": "19af210724d64131be6416be835e71a4",
      "IsHidden": "False"
    },
    {
      "Start": "3d96d7b2764549b1a75d853c6c72a8fc",
      "End": "7ab37174f3cb4d6592716343f87999e2",
      "Id": "bad6eee471bf4b2597fb8d6998ca1ac5",
      "IsHidden": "False"
    },
    {
      "Start": "683f0f6052a64bfe9cebcd0cdc1e3c93",
      "End": "2ae3c62b069746a3940329b25db46352",
      "Id": "59ea92bdbf354e4489bfb5535695e846",
      "IsHidden": "False"
    },
    {
      "Start": "ba8964315d2b466498c8e73c0eb6230b",
      "End": "9187fc576aa14c41980e45ee09f0d49e",
      "Id": "721e89b349bc4c73bd133f44af9e8ca2",
      "IsHidden": "False"
    },
    {
      "Start": "235988b977a14604acb722f2940d6b14",
      "End": "8b3dfa1cdd4d46f29e017a672e889724",
      "Id": "7804c685566847e39e9ad3cfef9aae51",
      "IsHidden": "False"
    },
    {
      "Start": "4a6f4ad6f78f4de59ade11cb0c564a4f",
      "End": "283920bc836e429fb6ec10e88edcfc21",
      "Id": "5b20a8bb8f2b4a979a4261e90a0b48fb",
      "IsHidden": "False"
    },
    {
      "Start": "7115c25603364da8a51e5cb84d267f45",
      "End": "9182d7cf4e2b4105b31944cf9c39597f",
      "Id": "94dbeb29e59441c580ce359963a658b9",
      "IsHidden": "False"
    },
    {
      "Start": "edffbf7f48b04d89aa738ec345de81da",
      "End": "ffb70a570cbd454a90481b2825bff81b",
      "Id": "2472d70dde88427884e3907ee3f6705a",
      "IsHidden": "False"
    },
    {
      "Start": "7e35f853a91e4fc8ab2a21ec9a570c8c",
      "End": "c3f6cc8735c14d9fa736f79a5bf972b7",
      "Id": "a091950439a64be988c3cbed8ba9c93a",
      "IsHidden": "False"
    },
    {
      "Start": "c299c99af46a4aeb98d78a3724b5529b",
      "End": "5bbd6d4e11b7490888d53a2fcf193a20",
      "Id": "36a195c059624d08819e3356e4ffa9c0",
      "IsHidden": "False"
    },
    {
      "Start": "cee36242ae464531b1ceebeb2b884fa4",
      "End": "21af63424c76407dac9933bda913e684",
      "Id": "aad5d1c2b6dc4fa48244082a354dcac4",
      "IsHidden": "False"
    },
    {
      "Start": "5ed4e2f79751435e847706e7a3780ed6",
      "End": "6ae20e96134d42d8bc4b2363f8ac90a7",
      "Id": "07b071209abd4db6ac3a95566807b4bb",
      "IsHidden": "False"
    },
    {
      "Start": "41d5906d72f147d690c67f68396487e0",
      "End": "d7071f11a1de40069cc54c15c14cdb0f",
      "Id": "4820dca5dbbc4a748dc828abca079f8a",
      "IsHidden": "False"
    },
    {
      "Start": "b2415835e1844a97af39030d2bd9a3f0",
      "End": "3370cf786b2d4671b19a9166a2d05848",
      "Id": "d1dab9429b0a438ca478d341fabe59a7",
      "IsHidden": "False"
    },
    {
      "Start": "6cbe605591a0477e9bdbb1f61c32bb66",
      "End": "0c07778c63324c9b8797c91290e6acfd",
      "Id": "8dfaaa7e783b4f2eb57920cebddd6cbe",
      "IsHidden": "False"
    },
    {
      "Start": "ace1ec76dcbe426b9df8ffce870aa1be",
      "End": "cfadc2c2add14e90b1836896c3985ad3",
      "Id": "d961473abe2b462ab5968b08865a656e",
      "IsHidden": "False"
    },
    {
      "Start": "2d20595c51d346cdaf57d76a04857a05",
      "End": "f9648e5771c7403fbce5d14d204f351a",
      "Id": "8199f1481c5b4145939d6b08a7aa2b77",
      "IsHidden": "False"
    },
    {
      "Start": "99c9647b92cf49ba93ceb20299986ba4",
      "End": "e7bb3ba22e174ce1a936e83f061d5170",
      "Id": "df2ec0b7e6774b5cb3a58acf5d9c429b",
      "IsHidden": "False"
    },
    {
      "Start": "46fcb7aa4efd42df8be86905211c788f",
      "End": "583b330733704330baf738ea4bf7792f",
      "Id": "6c5d9c3e96cb49f98e261fe6b1e5cca8",
      "IsHidden": "False"
    },
    {
      "Start": "57264b25d28640d2a3e9d57fb1c9b09f",
      "End": "191d1385ef96481eb537a25313b67c85",
      "Id": "6327f3d1a103491e815367cc2e6fcdf5",
      "IsHidden": "False"
    },
    {
      "Start": "0c971c39136642848fa16acb95f8cddb",
      "End": "094ae248e07d4f5f9a8503e6355a10dc",
      "Id": "b7ef383d8d1749aa8349589a87d62136",
      "IsHidden": "False"
    },
    {
      "Start": "2c028a8984d5484cb380701f563156ca",
      "End": "db24234063f845469ae0246721579a68",
      "Id": "c6bd1a2475af4f15bcc18c986114b962",
      "IsHidden": "False"
    },
    {
      "Start": "bd9e0bb0b69143978fdfe9d904d9de7f",
      "End": "4d8695a21e6142c885c1079149e4f270",
      "Id": "57b0b937c4e3459ba71a2dada06e0e27",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "eb085e2eacae476d8031f6b7876dfcf9",
      "Id": "440b229f7ec64da281ef8a41b35906aa",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "0e88c971220c4f8f8ec91b534364911f",
      "Id": "161c6d2e520d4d2daf33829cd8959dfb",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "3d3b2a310cdf4ae0a8fb9721065cc4ab",
      "Id": "997914ad478c4fe5a5a5ccd51c44d4f3",
      "IsHidden": "False"
    },
    {
      "Start": "48ebe732282846088290408b37599da9",
      "End": "7292913a7b4f4fa58ff56d4eaf6e74a9",
      "Id": "f8604a7402504709b95937b69ba5ff56",
      "IsHidden": "False"
    },
    {
      "Start": "cda4d8e3feae4ce4b8baf96eece3e925",
      "End": "fe9e28014af344fb93251f7ed78b29b8",
      "Id": "746c6f23500444879b78a787fe54d024",
      "IsHidden": "False"
    },
    {
      "Start": "d0612a40e9d440e28ddadc4aab1afb0e",
      "End": "e179f994c040481cbbf20081d47c1575",
      "Id": "f026578dc7fd411ebfc50d77e84437b2",
      "IsHidden": "False"
    },
    {
      "Start": "e27a169f9a944fe294482052fe05ef1f",
      "End": "a585a4698993467db464df485419f031",
      "Id": "8e6dc9766c0c45e5a113d72dd53c8d6c",
      "IsHidden": "False"
    },
    {
      "Start": "4e6dd81a32884af2aad5bf1e9746adc2",
      "End": "f55e9920f7fa4d468201eb0bab2e284c",
      "Id": "8c31057fe86247f0b0e4bef4ca5ed604",
      "IsHidden": "False"
    },
    {
      "Start": "95707ef7d43648b79460d1c5ee2272d6",
      "End": "fa7cbd7a3ae54d3b9cd639eec7dedbfb",
      "Id": "016af0f8301942ceae760f1d740acca6",
      "IsHidden": "False"
    },
    {
      "Start": "a36c2926d1654975801a127b1c897d84",
      "End": "09baac595f8d42acb57f2f32d54d889c",
      "Id": "be8cfe25d1194cb8be058112a3c50097",
      "IsHidden": "False"
    },
    {
      "Start": "8543ca588114403e9a1db47a07cea87d",
      "End": "1e9267712b3a4ae9b4130f23971a580f",
      "Id": "2eeed0c621554e65b1c08111a5198c4b",
      "IsHidden": "False"
    },
    {
      "Start": "6bc1b037889d4e5c841f5b916c1b58c5",
      "End": "be314907ceb34e98b2a2d3e11f1431b8",
      "Id": "7a71ee65eb214a6c92bb58b1810b55a8",
      "IsHidden": "False"
    },
    {
      "Start": "3314cdf441ce47adb55c96b8e87cb3cb",
      "End": "181c478a75b8486e9cdd9e6274a212f6",
      "Id": "3c9f2b73c6974c8b8f5ca28855e6ae1b",
      "IsHidden": "False"
    },
    {
      "Start": "437eccbb3d724fad9779325d68db224a",
      "End": "bfefcaa0d0af4e35964dd3262b47522f",
      "Id": "69e034b541544838b6a9872d110b2f51",
      "IsHidden": "False"
    },
    {
      "Start": "fb1663514382423ba994c96a3802f02c",
      "End": "868f3cea5205453586619b73a58cfd1b",
      "Id": "fc96fffbf01345f8b8fac8221e2663eb",
      "IsHidden": "False"
    },
    {
      "Start": "1746da7d88474f7fafe003decdd00b5d",
      "End": "2b06e5443fd94ee0a14ef7ad48bc3dd8",
      "Id": "0789b1484d964c01bdb04e38e2fa31a2",
      "IsHidden": "False"
    },
    {
      "Start": "0c3dc18fed984849a49e03df5c51e089",
      "End": "fbcd7126c9c3443cb03cdb905c91ead5",
      "Id": "7c584cff31af4e8b845b32b9fd3964fe",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "24a33890ed644727b539d857f319afd1",
      "Id": "51365faf42b74ab896ac53145b613245",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "0dbc63272f524558aa76cba86ec76f71",
      "Id": "60b8f58389454a08ac755d0643a1c97e",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "b07d107629dd415da5af5661260022a5",
      "Id": "4ede63d3e8a94d659f44f31f60005488",
      "IsHidden": "False"
    },
    {
      "Start": "c76f836d0934456ea2a9c07013f94183",
      "End": "b90014e8a444419ab61bf01b9438ad8e",
      "Id": "e83177dcde594757a008ab2670504f6e",
      "IsHidden": "False"
    },
    {
      "Start": "3f126b934d0f47b0b1aa9b3814e0022f",
      "End": "a14760c33ec4499490fdc263e4bc5b3e",
      "Id": "581fb6c9cc374cb09ada7a26bce6d27f",
      "IsHidden": "False"
    },
    {
      "Start": "3f126b934d0f47b0b1aa9b3814e0022f",
      "End": "26753054cb064f7baf907e884f1ffd46",
      "Id": "b34c332109714969972d61070e137b0c",
      "IsHidden": "False"
    },
    {
      "Start": "20b80335838747c6abc365f715551e8a",
      "End": "ea8627b10bd54d29a4639c1c2413c42a",
      "Id": "7a3abfef7a0646c1bc6bf55801dad4a8",
      "IsHidden": "False"
    },
    {
      "Start": "7f3b3ebb609b4ca88628054631979fb6",
      "End": "74698e024cf3421f91730ebb748846ae",
      "Id": "6e153afefc7e4abbb7c126a7f2556806",
      "IsHidden": "False"
    },
    {
      "Start": "fd97ddc09337416fa263b7fa10d73a19",
      "End": "31a2a03e186b41f68176345589f851fe",
      "Id": "0862e93c0f9b4db69bc6881788a85552",
      "IsHidden": "False"
    },
    {
      "Start": "178c98cbf40e46409d5a324b21e367ef",
      "End": "d5608d02060d4b39819d042dd33a8f02",
      "Id": "bc02f2d3944f4190ab5a6181d0756f20",
      "IsHidden": "False"
    },
    {
      "Start": "5fd878b883684a639cbec8af49a96981",
      "End": "893f8b5fb5324a49bb113ba42174d145",
      "Id": "062f7c89bbbf4c0ab31f0e482e758091",
      "IsHidden": "False"
    },
    {
      "Start": "68092365118f4ff9bd12d510b7c92b45",
      "End": "afb5da9057a4402da731d40e74fdcca4",
      "Id": "d13e8a73213049f3994c222ff63d0858",
      "IsHidden": "False"
    },
    {
      "Start": "21783c126200480aa41d6aa7724f8743",
      "End": "da9ecccf23d74ae6b62b773fddb85575",
      "Id": "b07bb30d873446ab88c5dec59005b0fb",
      "IsHidden": "False"
    },
    {
      "Start": "83c659c4fbac4390b77b880e2190c979",
      "End": "174a8dc5cba84e49bd36d5fa2454e4b8",
      "Id": "df149ea1870646bc9c80b948c60d29ac",
      "IsHidden": "False"
    },
    {
      "Start": "6326ac01bfeb413daff7bea72107cdda",
      "End": "7625ead503a947a596a3803e4e4f8900",
      "Id": "c577fdfcb6ea4d5ba0026dbebe257746",
      "IsHidden": "False"
    },
    {
      "Start": "865e389fe1da4014b63af65a70e732ef",
      "End": "369839d064054499b2e82ca01d89b08a",
      "Id": "85091efda1de43e3950b46d38b56b63a",
      "IsHidden": "False"
    },
    {
      "Start": "629e26c887bb4ed9a692de8dc5d7b747",
      "End": "12a7938ec704414893a42981de49dbf8",
      "Id": "54cabd1994284f92b100584f7095573b",
      "IsHidden": "False"
    },
    {
      "Start": "abac91f43c1e40a7b3ed11fcc7d02577",
      "End": "6cd5081b3d894062892a0cec90cd6592",
      "Id": "5a0ec661cf074d238cc6f77677cc31d3",
      "IsHidden": "False"
    },
    {
      "Start": "bce545c226154eadad8783dbc8c19682",
      "End": "04cc2be5168945afb4086193c13129a2",
      "Id": "8e567a4d333644958904787609b98998",
      "IsHidden": "False"
    },
    {
      "Start": "d69f6fb1e78b45f29c10a5649181b9cd",
      "End": "89776865d9e04677890be975ab474d44",
      "Id": "4db0efc968ea460ca258de5fe0508c1a",
      "IsHidden": "False"
    },
    {
      "Start": "d69f6fb1e78b45f29c10a5649181b9cd",
      "End": "d51e9f0f59e74d818369de529c3d0ab1",
      "Id": "dda0b037e40a45558983456828944492",
      "IsHidden": "False"
    },
    {
      "Start": "f6bec47a359a42518c38f7c5f2cb6d4d",
      "End": "c593c798b8f44b0194380e6d29915472",
      "Id": "76a0f124098a447d8fbeaa75ad42c6b3",
      "IsHidden": "False"
    },
    {
      "Start": "ad060e3ab8c044e099230fbae08877d7",
      "End": "d7c0c509d53d4dbfb569326a7f988aa8",
      "Id": "2ea89e7b3a43457a89ccee8d1fc82e3d",
      "IsHidden": "False"
    },
    {
      "Start": "575d551fe1004c6493abfb9b72f34d13",
      "End": "3de5479ec548477ba96e75f15a81c43c",
      "Id": "d862a6151e5b4e8ba3a0139bb7f165fe",
      "IsHidden": "False"
    },
    {
      "Start": "84de71b95a3241d4bb221cb1a38083f3",
      "End": "cf9a03a57f3544a79b9f7316e6d4fc39",
      "Id": "46e50b0983454b4b815cc0f91120690b",
      "IsHidden": "False"
    },
    {
      "Start": "0b390665e81f46c89f3ca1ed446677c9",
      "End": "68f3fbdcbcca4e4982d053e7ff94b094",
      "Id": "f0aac93bce9944dd9d7bc3f1f3c8014e",
      "IsHidden": "False"
    },
    {
      "Start": "0b390665e81f46c89f3ca1ed446677c9",
      "End": "5464bb61ce70441d868c0d8d21e1c8ce",
      "Id": "cf1241496d7642bdafdd78207b9279af",
      "IsHidden": "False"
    },
    {
      "Start": "bd7922d2909c4f0dab3fc53960372417",
      "End": "65abe159f7d848aba2ee9228c0bfac4b",
      "Id": "74fa483270764e2d9651b07001f85239",
      "IsHidden": "False"
    },
    {
      "Start": "cec5bbe56cf54b1ea5080fb04919000b",
      "End": "50bd8b0a619b476981b003e2d87266ad",
      "Id": "0a755933a6ae4732ac0313295406c481",
      "IsHidden": "False"
    },
    {
      "Start": "4f8bd95636dc4f3eb7b5471bc65a3b05",
      "End": "13c14addff6441e3a528609cdc9bca9c",
      "Id": "4def79c3edb749ddbee8577046a7887f",
      "IsHidden": "False"
    },
    {
      "Start": "39aa725062144c3bacd2dd8a0a768217",
      "End": "a840a9d122a340bf95d50ae0c1231de1",
      "Id": "273f3a1090d34bbfa934c9e6647de633",
      "IsHidden": "False"
    },
    {
      "Start": "39aa725062144c3bacd2dd8a0a768217",
      "End": "42b88320bbe04adebfc86c53011cfe98",
      "Id": "91fda03da19546c5b18181aa4f80d1cf",
      "IsHidden": "False"
    },
    {
      "Start": "44e823d378d84e26a24b53daf1e9ff43",
      "End": "9cecb777fe124245b2ad4ede9fc9ca3f",
      "Id": "0ac94c16a0174a56aa5c5cd518dbe1f0",
      "IsHidden": "False"
    },
    {
      "Start": "baba87cc12fa44ce9c750b26d1fe52c2",
      "End": "ee2947091b304200a8faa83ae36bda14",
      "Id": "ffa2ab8f97d34b69bb454d4a5ff851fd",
      "IsHidden": "False"
    },
    {
      "Start": "a252f94a897b4e899995f60cb0a9619e",
      "End": "a954d3964d1346bc8c5f631949a88de5",
      "Id": "667b10937bd142a3935611218403d169",
      "IsHidden": "False"
    },
    {
      "Start": "cf4f4ee99ab04e17af82b758c7cbf2de",
      "End": "91a87816cdc4419e8b2dd09ab3c2abc6",
      "Id": "4508d1d39f5f4590ae5225bb78f899fd",
      "IsHidden": "False"
    },
    {
      "Start": "b4cdfaee4fdb4c6ea7e6b1f068c522b4",
      "End": "b7d8b20f975e4ec792cf6e4c9839106a",
      "Id": "2d05e66615c74bd1b27236b9f2211d1a",
      "IsHidden": "False"
    },
    {
      "Start": "54d46a551f304d5e8f0d03fd4fbf7b72",
      "End": "fdb96eecf6c446958bdc9b5c59f4dda7",
      "Id": "e5b7358de5f64e9ca64b86648ca72f28",
      "IsHidden": "False"
    },
    {
      "Start": "f180ac43bc244f969b03d78bf3b7be49",
      "End": "e366ce0c230742e994cdd3875001c27e",
      "Id": "c56257fe1cd6467b97c02ba456084a2a",
      "IsHidden": "False"
    },
    {
      "Start": "cd094703790b40ac9616ce5e29936feb",
      "End": "a7ce7b7d85b846d99c7ed955df511db3",
      "Id": "0c0c4a857bb04355b449b439d8317e20",
      "IsHidden": "False"
    },
    {
      "Start": "da213eecca3343159eac2355e49563fd",
      "End": "4fa42f6e455e4633b074b5ed9dd8d8f0",
      "Id": "fa247bc71c9342afb10e8c0d7a2fd602",
      "IsHidden": "False"
    },
    {
      "Start": "da213eecca3343159eac2355e49563fd",
      "End": "1e4b6aea97804a18a3cefb22d9ce2d65",
      "Id": "d1c9c66047ed4740aa3bafc6b8d91297",
      "IsHidden": "False"
    },
    {
      "Start": "210b853120a24a1f86ba3ac7586dde42",
      "End": "eb9e9e3c550045c5a7a08373a298e5de",
      "Id": "30a564251ba744908bb8dd9530ab9015",
      "IsHidden": "False"
    },
    {
      "Start": "59df49fe3ede412d9afe3e1bf95cb55e",
      "End": "ea05fe9cdbad48f99ce3a94b3d4af1a3",
      "Id": "dfff56de43224e22a662ab33aa8bdc4e",
      "IsHidden": "False"
    },
    {
      "Start": "350104c953c64f80a69471357c472727",
      "End": "449294fe15fc46e68930a510defbb3e3",
      "Id": "7f5f231791034c5b8a1a86a72370602a",
      "IsHidden": "False"
    },
    {
      "Start": "abe4f52f5eb64ecb801debf6d11907a2",
      "End": "9404b7ed64024d69bd8cb9753eb45b24",
      "Id": "4f916a67d4c34c21bfe030510d6764dc",
      "IsHidden": "False"
    },
    {
      "Start": "c04942411b9e44cabb156c5c321d71d3",
      "End": "ef9cdc7861a94a098fae883a0ceabf4e",
      "Id": "9e3f9f97dde44309b6c699a5d5fc1c80",
      "IsHidden": "False"
    },
    {
      "Start": "1e6a38894e124e4eba88c995930df68b",
      "End": "afe8a99b38b74d5fa7124df8ed506fd1",
      "Id": "73f0becf0f604c6aaec5d19042af5156",
      "IsHidden": "False"
    },
    {
      "Start": "1e6a38894e124e4eba88c995930df68b",
      "End": "2bf9290c8ec7425c8a2f4859d8c1af8b",
      "Id": "7af581e2e96e4287843e443b90b18aa5",
      "IsHidden": "False"
    },
    {
      "Start": "7aef8e934cd14f7c9fc598730abba253",
      "End": "8244ba1343114a8fa72cd91851774757",
      "Id": "6aaf99caa8e54734ad87abc0d3def7d0",
      "IsHidden": "False"
    },
    {
      "Start": "f0366a1e02c74729a02da055368d566f",
      "End": "c0f4631fab16467299095d8a0f7b34f0",
      "Id": "31694bd1422742fa90fa16ff87dadee8",
      "IsHidden": "False"
    },
    {
      "Start": "06fd9ec1b26944ccae12742b40559651",
      "End": "8582ccddf7f24cbebbc94cfcc29a324e",
      "Id": "749fb06c944142dbaa4d966eaa5c6c73",
      "IsHidden": "False"
    },
    {
      "Start": "a9a487e99e244016904cf05f795dcb21",
      "End": "3326435ca312491081bd08738cf6cc43",
      "Id": "eb0544826ba1468381eaf9a4948e19fe",
      "IsHidden": "False"
    },
    {
      "Start": "a28b1a56a08841f7bcde702cb9f4cd1f",
      "End": "0f3e36f7fc9142a0a82bc1dda0c7151f",
      "Id": "3895a2f78c804fc397615531a8bbab1e",
      "IsHidden": "False"
    },
    {
      "Start": "0f7c17e84c9044e4932a78e8e8554642",
      "End": "6674591ba10a4f59b1b6b17f204e85aa",
      "Id": "e4ac723458aa49dfa9ccdcbde057cbcb",
      "IsHidden": "False"
    },
    {
      "Start": "5512a7d638e544ec8551a9e9a8f984ba",
      "End": "a7116f72796a410bb0b4eedcfbd522cd",
      "Id": "fa7a7c7c53304f859c495f037ea0df22",
      "IsHidden": "False"
    },
    {
      "Start": "853f4d00e3d947a2b4837b053e74da73",
      "End": "8a98451165f24d8bbb317e4ccc0c954c",
      "Id": "d7e9f6c7cd6a485a9d35d7e9644e579b",
      "IsHidden": "False"
    },
    {
      "Start": "ad256f2d8bc0450892ee87726bbd33fa",
      "End": "d333ed2140dc406991e515a9b61a3586",
      "Id": "5ac66e36cdd543d78d1bf19825aea8a0",
      "IsHidden": "False"
    },
    {
      "Start": "cf1981cf42154c7aa4469c2c3777fae2",
      "End": "a8ddfae58f0849bf919606ec2b1bbc8e",
      "Id": "5dd1d70d58164b3e9ece00efe4643f19",
      "IsHidden": "False"
    },
    {
      "Start": "58db68f7c16d458bbccf9b49e8734a31",
      "End": "aafdc6daea6c4efabc060a25b995177c",
      "Id": "025c9bad06b34b6cbb0b4f4a11c0b24e",
      "IsHidden": "False"
    },
    {
      "Start": "e41c733e0e394f29ae079928b6e13b9f",
      "End": "7a15e77a66834b318e82aaec3385c05f",
      "Id": "fdffcfcff75d432fbabc841b89625f51",
      "IsHidden": "False"
    },
    {
      "Start": "bdd66adee64647ff9f886244c407cdff",
      "End": "ad6554690dfe4b9c898be309eb78e9e4",
      "Id": "0a0f1b4219cd4d8d9fccfcdc29dace5c",
      "IsHidden": "False"
    },
    {
      "Start": "61b09e674a4445609efc8b0e4a78bad7",
      "End": "8076a247af394e739313ca05b1daeed3",
      "Id": "a07dfd0a593449b0b3f9a4ebcaa69991",
      "IsHidden": "False"
    },
    {
      "Start": "dea0d55623da4cc899e6504802f13064",
      "End": "3f521c3b735745d4a980ba5b8518c4cf",
      "Id": "acbff35a160b4fb9be12dc91d93bd38a",
      "IsHidden": "False"
    },
    {
      "Start": "d68fd6db845a4c8aa0f681ef65341a8b",
      "End": "f2dc189239264e90adf688e38c492ca6",
      "Id": "382a973f236749a8bba1761dbdacc44c",
      "IsHidden": "False"
    },
    {
      "Start": "018e5b69259a42ac9b150116c565b9fd",
      "End": "e019235569b843768494c7d6973b0f3e",
      "Id": "9bc69d97a39840b6a0787da43398abfa",
      "IsHidden": "False"
    },
    {
      "Start": "87d67bcd64084dddae2cc5e50824a88e",
      "End": "bc7a695b9a384613af1818b0c89700b4",
      "Id": "c00fc7d1ce134d1094d11c11e0a23b8e",
      "IsHidden": "False"
    },
    {
      "Start": "79599425bb2c48b4876d8cf73e58f8c9",
      "End": "e9bba6107291465da0797d5ce29399a6",
      "Id": "2086d167518b4ada8238eab3f9c63b64",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABoAGgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TfM9xR5nuKi3fSjd9KsCXzPcVl6x4q03QLi1h1C6Fs11uMbNGxT5du7cwG1fvL94j9DV/d9K8/8AiovmXWj/AO5cfzhppXdhN2R2c/inR7ZN0urWMa4z81wn+NZs3xK8OQ4xqiT56fZopJv/AEBTXiWoadDZ3FvcQp5LyTKjhOFYEHqOnate37U2rCTuelyfFCwZittYahdDs/krEp9P9Yyn9M+1QN8RL6Zf3GjRoc8faLsA/wDjqn+dcbb9q07bqKgoiTXPFGg3E96dRt7m2mnd/sUyu6rudmwrkggAHA7cDivQfCfiX/hKNHF8bf7KfNkhMZbd8yMVJB9Mg4zXA64u7T4x/wBNR/Jq6T4WHb4TI/6fbr/0c1V0uTs7HZ+Z7ijzPcVFu+lG76UiiXzPcUVFu+lFAEE04ghkkKO4RSxWNSzHAzgAdT7VxC/Fe3uJDFbaXcfaFOHhvJBAyexXDMDnsR6812u6uJ+LFjbXWg280kKmdblFWYfLIo2twGHI/OqJJ7Xx9dNIGmsIjEescMp3r9CQA35LWb421i11m40vyGYOkc5aORSrDJi/Me4zXEWN9qNjjbKt/F/cuPlkx6BwOT9R+Nai6tHqmpW0YhmgmSCZmjlTj70XRhwfzq1a5LuZ2vJtjsj/ANPK/wAmqzb9qb4kXbDZf9fS/wDoLU637VMhx2NK37Vp23UVmW/atO26isjQXVhus4h/01H8mroPhkceGZB/0/XX/o5qwdRG63gH/TX/ANlatz4cfL4dmH/T/d/+jmrRbE9Trd1G6ot1G6gCXdRUW6igCLIrkvid/wAi7D/19p/6C9dTurk/iY2fD8H/AF9p/wCgPTA89t+1aWnLu1aL/r3l/wDQoqzbftWto67tXT/r2l/9DipLcXQh8WJtt7A/9Pa/+gtWbfatDo1sk86yNGziPMYHy5BOSSQAOOtbHjNNtpp5/wCnxP8A0F65y6t4rjWIhLEkgFo5G9Q2DvTnmuPHYj6rQlWtex14LD/Wq8aN7XNiw1SW+iWW1hiaFvuyNOD+YUEf+PVsWt5cRYM0AdO7W5JI/wCAnk/hk+1fPc3iLxxYXCTw+FEglk1N4Lie1v1xBZgEpcFc4YtzkEcbeQMivY9I8QahDbwvdW8d7GyKxkthscZGT8hOD17Ht0rHBY2njY3Ss15p+W69OtjfG4Kpg5au6fk10T2fr0udfJdQ3kcIikDlZfmXuvyv1HUVufD/AOXQ7gemoXf/AKOaub0++0vxAyKrq9ygyI3BSeM45wOGHpxweeoroNEhm0O3eG2IuYHleYpO2HDOxZsOOoyehHfrXp2sebu7nU5FGRVCHVoXYJLutpTwI5gBn6HofwP1xVvdQMkyKKj3UUAV5mk8mTyTH5207PMzt3Y4zjnGfSvNPE9x4glhWHW4jDapIJPtFnF5kG7BAJYDco+bo2OSOTXpO6jcaoR4/Day+WskW26h7SW53A/gP6ZrW8O4l1kbSDi2lz7fPFXXah4Q068kaaFG0+7PPn2h2En/AGl+63bqO1ZttpF5p+uxfaJLe4ja2mCTRqUkPzxcMvTp3B7dKVuojG8dptsdOP8A0+p/6A9cxL/yGI/+vST/ANDSut+ISbdP03/r+T/0B65KX/kMR/8AXpJ/6GleJnP+41Pl+aPYyf8A32n8/wAmeKTaW3lwi3+KTMketTSSrJPG5vCQf9BBEnGwfw8/e+6OBXuOkf8AIPtf+uSfyFeAalfeFH/s9p/h9qltK+uyx2ubIwiC525a6YKwBVhjBIOdp9K9/wBI/wCPC1/65J/IV5+S3vK9/uiur/l/rsennNrRt37t/Zj3NNrOC8VRPEsmOjEfMvuD1H4Vq2F5qmmY8i6F9CP+WF6Tux6CUcj8Q3X2xVC36CtKGvpj5c24fGlssQS80vUFdjhoo7U3CH/gS5XH1wfai31u4vBdLo2k3cLW8nlFLyaNIM7FbAXLMBtZeFwO3FVoO1aHhk/vda/6/h/6TW9VHcVjdhkkaGMyqqSlQXVW3AHHIBwM0U3dRWgiLcfSjcfSoqKoCXcfSqV0C2rWn/XvP/6FDVioFXdrFt/17Tf+hw0nsI5b4lLt03S/+v8AT/0XJXG6lYz3CpNaKhuV+Q+ZI6gxnkgbSOchcZ4ruPiiu3S9KP8A1EE/9FyVzVv2rnnCNSPLNXXmaU5ypy5oOz8jnP7NtZt8VxNNpt1Knlsko2I456Nkhu/Un6CtyGzk02FI5I2RIwFD9VwOOv8AjitdIknjMcqLJG3VHUMp+oNJb6G1oQ2m3Ulpj/li/wC8hPttPK/8BI6niop0aNJ3pwUW+ysa1K1aqkqk3K3d3IrflVI5FaUNVCn2dlGoWUloWOBdWH7yJmwTygBYdO6/j3rQt7WSSETWzR39v/z0tjk/985/QZNatdjAuwdqu+Gz++1vj/l+X/0mgqjayK2QDyp5HcfUVZ8PSKbvW0DKXF6pK55A+zQc4pw3G9je3H0oqKitiSPd/nNG7/Oai3e5o3e5qrCJd3+c0Wfz61B/17Tf+hw1Fu9zU+k/PrkX/XrN/wChw1MtgOe+LC7dJ0k/9RFP/Rclcnb9q7P4wLt0bSP+wkn/AKKkrjLftWPQZpW/atO26isy37Vp23UVBZr6WM6rpw/6at/6KkrK03Q7W4n1aePzLO7/ALTux9otX8tj++bG7sw6cMD0rX0f/kM6YDwTK2P+/UlVtFbEmr/9hS7/APRzVpT3JZHcWmsTMImm02eIDC3U9u/2hfwR1Hp3GfSoIfDFx5Uiz6xM7SSea7wQRxHdsVMgkMynag5UjvW5u9zRu9zW3KiR8f7uNE3M+0AbmOScDqfeimbvc0U7ARbz6/pRvPr+lFFUAbz6/pTre6ls76O6hCOyxtGY5AQGDFT1HQ/IOx60UUnroBnfEKd/FGl6VbWsLQ3UeoLJIk4O1VEcgLblBBHI/MZxWLB4Rul4kvoQPWOEk/q1FFQooZeh8Nhfv39xn/pkiKP1Vj+tWk0OzXr58nrvuJCG+q7sfhjHtRRVcq7ATR6XZxMGS2RWHIbbyPcHt+FSWdrFYrKsIcCWV5nLuzkuxyxyxJ5PbpRRTET7z6/pRvPr+lFFMA3n1/SiiigD/9k=",
  "GraphDocumentationURL": "https://www.autodesk.com/rvt-dynamo-steel-connection-scripts-help-2023-enu",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "Autodesk",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.0.3137",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "1. Select steel elements",
        "Id": "d46991c95cae483792e0878fc2aaa757",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3982.9597053579146,
        "Y": -701.14530640056694
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.FromStructure",
        "Id": "23e71998c97843498024665c1918a3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3624.9597053579146,
        "Y": -701.14530640056694
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.SubNodesOfSize",
        "Id": "ef30d65737fd4013b6da12c08cdaa8c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2594.5917560574489,
        "Y": -666.54365710920683
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65ce32be3d2d4245abb097f6b5d57cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2848.5917560574489,
        "Y": -632.40365710920685
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlantAngle",
        "Id": "e0347155fcfe4b88a8aa4169246e4107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1235.5917560574489,
        "Y": -276.54365710920689
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c69ac6655e414cbbc9b40b1cba4e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1693.5917560574489,
        "Y": -285.40365710920685
      },
      {
        "ShowGeometry": true,
        "Name": "Column Slant Angle (degrees) from",
        "Id": "b4341169db024f76be3bf2ba21d694a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1693.5917560574489,
        "Y": -133.54365710920683
      },
      {
        "ShowGeometry": true,
        "Name": "Column Slant Angle (degrees) to",
        "Id": "c8598dd14c5e45588214304b179fa158",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1693.5917560574489,
        "Y": 18.456342890793167
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "4ca736382ad7404ab11147885333bf37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -746.591756057449,
        "Y": -56.543657109206833
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f2ed36f3702a420cbfc747b104b73312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1235.5917560574489,
        "Y": -25.403657109206847
      },
      {
        "ShowGeometry": true,
        "Name": "2.1. Beams Slope Angle (degrees) from",
        "Id": "b99019feddf34cddbd879fca7f2bc375",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1235.5917560574489,
        "Y": 125.95634289079317
      },
      {
        "ShowGeometry": true,
        "Name": "2.2. Beams Slope Angle (degrees) to",
        "Id": "5807ab7d61874f7394cfe59a85bfc7c1",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1235.5917560574489,
        "Y": 276.95634289079317
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "596909f5799446a7820a3e674d2f49c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1275.5304565743156,
        "Y": 14.881810234545526
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c0aeca86b3e4a598cd6c0ac60c2e74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 898.53045657431562,
        "Y": 142.02181023454551
      },
      {
        "ShowGeometry": true,
        "Name": "Column Section Type",
        "Id": "3db0ae870aae4d4e8fccea48976c3b33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 898.53045657431562,
        "Y": -44.118189765454417
      },
      {
        "ShowGeometry": true,
        "Name": "Beam Section Type",
        "Id": "1ca46343c98e422eb589fa5f6c1c842d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1275.5304565743156,
        "Y": 231.88181023454547
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySectionType",
        "Id": "145ece1505dd4e13b5adb581f63e7bf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1705.5304565743154,
        "Y": 198.88181023454547
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e1d42da2f0d04115ba4c333d965e15ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1275.5304565743156,
        "Y": 418.02181023454546
      },
      {
        "ShowGeometry": true,
        "Name": "3. Library file path",
        "Id": "5c1fecff026548af92d1d0d712d29ce2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4597.8262786351006,
        "Y": 1416.8977436658538
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ByType",
        "Id": "13adc36d2358407b9fde374bae5dabd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5983.4823103428862,
        "Y": 650.61920116344163
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0f8f42606627455eb286b7e1556580bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3538.5928963126453,
        "Y": 730.65605220303223
      },
      {
        "ShowGeometry": true,
        "Name": "4. Connection family to place",
        "Id": "646164bb1207481cba7fa1b3dc4fa6b0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6240.493777538677,
        "Y": 977.0247674338932
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.MatchTypeByRanges",
        "Id": "eb0a624451dd456bbcd4ea23b30d4cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3985.5928963126453,
        "Y": 753.72369142594221
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "c1d0bfb70a604549b70d7713cb9b673e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4757.6767235215511,
        "Y": 788.06131671929245
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7e3177b9a344ef9a8444e38e851570a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4503.6767235215511,
        "Y": 822.20131671929244
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "dcde687dff5d41be840324d861f4c6e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5172.6767235215511,
        "Y": 564.36219142348693
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "190a0ae8c548496e8aff40d2eeb812c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5172.6767235215511,
        "Y": 1011.760442015098
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "9fa70e5efd704fb2b4e278c1a6008b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5581.9044659582232,
        "Y": 818.8046235659765
      },
      {
        "ShowGeometry": true,
        "Name": "Summary report",
        "Id": "e229b66d98d24d01a4641804e6973bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15337.8308794018,
        "Y": 305.13364662504921
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "2405b4b3ac62465e9e8f8b0814d82534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7010.0331948079784,
        "Y": 409.00067297245334
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f1d09c48caa147d9aea4845f35f4a0f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6756.0331948079784,
        "Y": 443.14067297245333
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a3c243dbd4e94ba4bd695dd190285961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7425.0331948079784,
        "Y": 409.00067297245334
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "fd229c791ae14ec68f4d184c8971f8be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7773.0331948079784,
        "Y": 409.00067297245334
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2efdd0fb814f42fe92ec0d65e8528058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7409.691141651886,
        "Y": 66.726975591976441
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "b739323cec314bb79a21b9b10408a3a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6994.691141651886,
        "Y": 66.726975591976441
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "46806d536f524b258bebbf04bed9270c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7757.691141651886,
        "Y": 66.726975591976441
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "557103ea96c04fa0af6d8e52b7b8a326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6740.691141651886,
        "Y": 100.86697559197643
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "743b75eb3ca546d9af30330c7b67a73a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8081.0331948079784,
        "Y": 409.00067297245334
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "565b21616ba540c6ad0e1ca363dbe479",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8065.691141651886,
        "Y": 66.726975591976441
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "85378cbbb6334ee2ae63bbc2b9c677d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7023.3928694254037,
        "Y": -597.80141962760308
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9814f0ce4c5c48e9b4818792ac85bdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6769.3928694254037,
        "Y": -563.6614196276031
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "538b8bf613164b2c855374e76a030dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7438.3928694254037,
        "Y": -597.80141962760308
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "772e6ba595c64804a85db1574dbd2e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7786.3928694254037,
        "Y": -597.80141962760308
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "254ce0984a514f1b88df4d788d039906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8094.3928694254037,
        "Y": -597.80141962760308
      },
      {
        "ShowGeometry": true,
        "Name": "Connection.ConnectionType",
        "Id": "a7ed204d1065484b804d093c6d488102",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7188.1836522924823,
        "Y": 921.38738124295674
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "54fa0a13352d4aeeb89c61760877b87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7666.1836522924823,
        "Y": 921.38738124295674
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "a31eca7da98e4f4497be7950e7176968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8715.1836522924823,
        "Y": 921.38738124295674
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "774bfec08d6646eab975b1a78194a1d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11312.419552592364,
        "Y": 1017.8663843804864
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecc0331f412c4c319df6ef8ef2e250e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11058.419552592364,
        "Y": 1018.0063843804862
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c8b31c6aeef42179f9bf04ab0c50df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11312.419552592364,
        "Y": 1235.0063843804862
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f56a80fccb3748f09ccbbda7c4fc7891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14687.8308794018,
        "Y": 305.13364662504921
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "a052708963d74d64a67e0b16aca98624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7177.3984222815707,
        "Y": 1360.9808053132592
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "e9e666cbb8f64880b8218119cd6156d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7613.3984222815707,
        "Y": 1343.9808053132592
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "6467f392f679494a8a2fc5379b011bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8003.3984222815707,
        "Y": 1330.6224189267427
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "54379f1c96954d2896d4a44e3c35a0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8311.39842228157,
        "Y": 1330.6224189267427
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reduce",
        "Id": "d19b07df0f1247c09fd1a6d579459e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11734.419552592364,
        "Y": 1032.8663843804864
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "41b6a9f8fd004de0ba416a8a588963c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6773.1836522924823,
        "Y": 921.38738124295674
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "809e0ab45e464576aa8783e69d0af647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6519.1836522924823,
        "Y": 955.52738124295672
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "7fa3e51dec7148efa7d68fe0053cf9e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 362.2268925609369,
        "Y": 1080.8369142774836
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3a62f85b376d45a7a5c3a105ffc30ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2223.0841254647457,
        "Y": 1046.9413344608179
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.SetValueAtKeys",
        "Id": "93fa6b310e10450685774ed66b3bb04e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1712.084125464746,
        "Y": 1120.9413344608179
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "cbe701715f3c4d59847c85bc1fba2edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1289.084125464746,
        "Y": 1120.9413344608179
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f882cdd5d1ba430582c2ccfd66bed5ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2734.0841254647457,
        "Y": 1047.081334460818
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a071a3676a146e59b21682562a0b7f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2726.8082053173539,
        "Y": 1202.2160502020122
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "84a122aa1d2b4b7190cc739c4ca872a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3568.137600534259,
        "Y": 1006.7109553163723
      },
      {
        "ShowGeometry": true,
        "Name": "Proper list, or empty.",
        "Id": "46ec41b71daf42dca401a9dc8eb59e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3537.8262786351,
        "Y": 1382.8977436658538
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "b9e7767890a047e685f8ff26c0f26d02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2101.5917560574489,
        "Y": -592.54365710920683
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d074ff8024794568b8a0c042612ff9da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2594.5917560574489,
        "Y": -484.40365710920685
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f5fd7157d8dd46efa1a7ad4b9e7133ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4355.137600534259,
        "Y": 1040.8509553163724
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "75fbb7ec69cf461b95141eb144180577",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2884.4375571270034,
        "Y": 212.55973022449763
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "98f256f147cb4d0f8148c23deef718d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3232.4375571270034,
        "Y": 286.55973022449763
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "558c4f50298042ad99570158961261a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2884.4375571270034,
        "Y": 394.69973022449761
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "289d91618171478dbb998b4e6984e0ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4101.137600534259,
        "Y": 1006.7109553163723
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.ByName",
        "Id": "5bf679f3a1d845e9a80dcfacd4d4b0c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4070.8262786351,
        "Y": 1382.8977436658538
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "997ebb57baa34324bb07089352ec8a17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8102.1836522924823,
        "Y": 921.38738124295674
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountTrue",
        "Id": "911367ea95104a68a8bdabf24ea343d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8407.1836522924823,
        "Y": 921.38738124295674
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "72425b91f2ea4495926845dcc24a7e3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9239.72584024137,
        "Y": -311.06257401471419
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ade3a07d982d4a6b9566f90ae4060d67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9584.72584024137,
        "Y": -153.06257401471419
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "650fbffecdd54e1f8a047828f6d12668",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9239.72584024137,
        "Y": 38.937425985285813
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ad66920b3a3e442bb5fe89999aae474b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10392.72584024137,
        "Y": 28.937425985285813
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0685e4e2cde14269a350099bca66d1cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9988.72584024137,
        "Y": 153.93742598528581
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "bb1eaf21f4dc42819950d90924b30413",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10796.72584024137,
        "Y": 119.93742598528581
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "02fc6e7ff41f41b384488b805e007f4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10392.72584024137,
        "Y": 244.93742598528581
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "4f35443af9384bb5a47d95baaeedceeb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14934.8308794018,
        "Y": 305.13364662504921
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2404215ffc2c4afa9614331a555b437e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12725.941625792151,
        "Y": 1438.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "6bcb242ae05c45fda1f9ebbbdeec3731",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9181.6674369288339,
        "Y": 819.2977879385794
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ffb92b32cdde4dc3a73c1560eb54fdfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9502.6674369288339,
        "Y": 921.2977879385794
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c33840e0557c4408a330da04f399cfb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9181.6674369288339,
        "Y": 1057.2977879385794
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "6e077c8a1abd42a7aa12f341ed0d448d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9906.6674369288339,
        "Y": 1013.2977879385793
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "90dbaba524234fdfb31eb37933266b20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9502.6674369288339,
        "Y": 1139.2977879385792
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f3f8813e5c794004833a9739d4c2d0ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10310.667436928834,
        "Y": 1104.2977879385792
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "12e6cd04e27647869a2afb60be7717cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9906.6674369288339,
        "Y": 1229.2977879385792
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "a1f4df2ff8434486a643c653fcf53787",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12417.941625792151,
        "Y": 1269.4864194919442
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8807f05fe05d4763a174deb7ff8863e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12417.941625792151,
        "Y": 1116.626419491944
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "852b8ef9499847458b72627ed032ffc3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12725.941625792151,
        "Y": 1256.4864194919442
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "ffaace1683d54d13971e8728952de923",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6762.3984222815707,
        "Y": 1360.9808053132592
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b6bd315c8a80447a95142ed6c7047fd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6508.3984222815707,
        "Y": 1395.1208053132593
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c6d9585fb47841cb9c9ceb4bfd7558e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6737.8557180938269,
        "Y": -205.3102921168113
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "dde7df2ab5954fc1b5b52264b6ea322c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7406.8557180938269,
        "Y": -239.45029211681128
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "1e3e2a13ad1349daa6c58b63b5f0b78a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7754.8557180938269,
        "Y": -239.45029211681128
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "3841de7214484a55b00b70d485720ed1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8062.8557180938269,
        "Y": -239.45029211681128
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "d45cf1955c2e41dd9e147541a76d0162",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6991.8557180938269,
        "Y": -239.45029211681128
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "254a2da754394a22bdc053660c8ae550",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9988.72584024137,
        "Y": -62.062574014714187
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ebc677ba74f349d581eb89a79f50b8c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9584.72584024137,
        "Y": 62.937425985285813
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "745d81c493ee465684bd2dca363c1732",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2143.5307925752586,
        "Y": 1178.2793543716753
      },
      {
        "ShowGeometry": true,
        "Name": "5. Filter connection type name",
        "Id": "d2716a15fa7b4783a84eeb143861c6b9",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1368.5307925752586,
        "Y": 1212.2793543716753
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "35aa8435dc9b403b9c32aa5427de285f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1767.5307925752586,
        "Y": 1119.2793543716753
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "647f8844bb9c4fc699893a2c544ea501",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2730.5307925752586,
        "Y": 1144.2793543716755
      },
      {
        "ShowGeometry": true,
        "Name": "6. Select analysis results",
        "Id": "38828e1188c846548bfd27c1fe828632",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3538.5928963126453,
        "Y": 881.72369142594221
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.BySlopeAngle",
        "Id": "1c3e27d8e616407fa057a4d131be8172",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -319.59175605744895,
        "Y": 66.456342890793167
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6c93ec56f8074203a7c856b523cf73a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -746.591756057449,
        "Y": 194.59634289079315
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByAngleBetweenBeams",
        "Id": "0321480046804511bbc7a985bb90dbe7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 99.408243942551053,
        "Y": 161.45634289079317
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9b832420e2f24b81b2f6c68ea6ce7aca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -319.59175605744895,
        "Y": 318.01634289079311
      },
      {
        "ShowGeometry": true,
        "Name": "Colinearity tolerance (degrees)",
        "Id": "63d940a6f6b9432d8d2531ddcb7889a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -746.591756057449,
        "Y": 347.01634289079311
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.RemoveDuplicates",
        "Id": "84d9c853239e477c8b5c92c9a036c7e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2428.4375571270034,
        "Y": 212.55973022449763
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "4f01b16137e64076a046161d7875e06f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1767.5307925752586,
        "Y": 1271.2793543716753
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "fd2e862ad1aa4f54bb98f69246640f34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2459.5307925752586,
        "Y": 1178.2793543716753
      },
      {
        "ShowGeometry": true,
        "Name": "Filter.ByZoneType",
        "Id": "672ebc73ffdb4667a823b19e5165e2f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1693.5917560574489,
        "Y": -501.54365710920683
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "53738b4ce754457586ce278aa4e0490a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2101.5917560574489,
        "Y": -376.40365710920685
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "3bbdc629c7134289825732ba76f82142",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5847.493777538677,
        "Y": 1036.0247674338932
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.TypeName",
        "Id": "cef3e29a69364a088cca9949265da0dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -588.7731074390631,
        "Y": 1114.8369142774836
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script: numbers as sortable strings",
        "Id": "3158084883ab47dc955a4f081b566e99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -152.7731074390631,
        "Y": 1114.8369142774836
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "d74f38d24d484e2fa1c0726ca6657039",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1368.5307925752586,
        "Y": 1364.2793543716753
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "edb2ef938555433da5c46207ff939565",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13068.941625792151,
        "Y": 1304.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "da181444a7264cc79b9c3ef8b966c49d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5189.9990204384931,
        "Y": 2461.1091131245307
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ea1606a2d32f4d43940ca6ee94a0383a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4935.9990204384931,
        "Y": 2495.2491131245306
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionType.Validate",
        "Id": "3d571aded5214e05b201c57c1dfa7dbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5604.9990204384931,
        "Y": 2922.9318294481068
      },
      {
        "ShowGeometry": true,
        "Name": "ConnectionNode.Zones",
        "Id": "0aadced215be45b2845e6ca37aef95a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6547.9990702153254,
        "Y": 2301.822578732852
      },
      {
        "ShowGeometry": true,
        "Name": "Zone.Parent",
        "Id": "e5b7758995744be68215bf88e11a97bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6992.9990702153254,
        "Y": 2301.822578732852
      },
      {
        "ShowGeometry": true,
        "Name": "StructureData.RevitHandle",
        "Id": "5f1d296a330b4f29b2794d55e591370b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7391.9990702153254,
        "Y": 2377.822578732852
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "082ea98603724b079bbdf5a374ff99b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7391.9990702153254,
        "Y": 2225.822578732852
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "17deda83606d4a7da966c8ec1dbc1036",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8633.3949473609337,
        "Y": 2020.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "dc67f63c9fae48f68c34bd0e5a9410d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8633.3949473609337,
        "Y": 2213.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2a2cbb200bac4920a25f27dccd4be663",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9055.3949473609337,
        "Y": 2382.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "41584edd4b4e4fefa74c5f29e98d118a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9055.3949473609337,
        "Y": 2165.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "24b961c7d3504fce9f1060dd294c7184",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9477.3949473609337,
        "Y": 2326.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "8c459f95f0db44aea943f50dc5f0f6af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9881.3949473609337,
        "Y": 2326.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "031182b929df402f88b55d8598fafc55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8379.3949473609337,
        "Y": 2449.0159387015442
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "3e32903984964930a5534469f7d5c777",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8633.3949473609337,
        "Y": 2364.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "7ffc630cb245460fb5970336e3369f46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9055.3949473609337,
        "Y": 2533.3759387015443
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "c90dd3e1c47b4afdb979455aaf381671",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7463.9578782465578,
        "Y": 3259.468011380005
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Components",
        "Id": "260f77834b2041de816e3a8c3625f529",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7857.9578782465578,
        "Y": 3272.468011380005
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "6d3142f7ffaa4c14bc505eb147f5710c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9365.9578782465578,
        "Y": 3280.468011380005
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "a73188cf2f8c4a4c906b49789c8d084d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8971.9578782465578,
        "Y": 3314.468011380005
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b0edf31c432845439a2e44588118c626",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7857.9578782465578,
        "Y": 3458.6080113800049
      },
      {
        "ShowGeometry": true,
        "Name": "String.StartsWith",
        "Id": "50142a7af4a340deb00d4bc3e366de3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8251.9578782465578,
        "Y": 3382.468011380005
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "2c6a7d74e3e44e6db3786dd07e0a9792",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8636.9578782465578,
        "Y": 3348.468011380005
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "240cedcc78124bebbba845962219230f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10386.498924519045,
        "Y": 3128.6408598210819
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "cdc5c512d623484d8b99055aa5523676",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10900.20973912407,
        "Y": 3176.3405415323946
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ByKeysValues",
        "Id": "3010aec6b7ed47e0b85a73000a71e4cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11207.424112012228,
        "Y": 2985.13719057403
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e373ad042129485eaee23302b4781d65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6240.493777538677,
        "Y": 1129.0247674338932
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "53205e8fb64a49b19100e55cab74d2e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13068.941625792151,
        "Y": 1520.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1dfae5cfe2ca4b09a29fecc583214ff5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13415.941625792151,
        "Y": 1466.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5d48327b885443cab7c6a16400c14531",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13762.941625792151,
        "Y": 1444.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "5ab4d82800b0452094d3aa5137553b62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13415.941625792151,
        "Y": 1249.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "8c648d67cb6a40e0b29940cf04bcf46b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13762.941625792151,
        "Y": 1227.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "7bde4fd6455841f38b851839742c39f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14109.941625792151,
        "Y": 1205.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "2cda305af11b426a9def5d392bcb30ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13068.941625792151,
        "Y": 1122.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "c4b9f6d941dc43058e1887f77d92cee7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13415.941625792151,
        "Y": 1068.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": ">",
        "Id": "ad298864527f409091ea628b563f15fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13762.941625792151,
        "Y": 1046.4864194919439
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "16eabe12e75e4dc1a9089ffec137c341",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12725.941625792151,
        "Y": 1104.4864194919442
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "89768149587249d9b08a79d316479899",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13068.941625792151,
        "Y": 971.48641949194393
      }
    ],
    "Annotations": [
      {
        "Id": "df36757b87f5469a9d41cf5fc684341e",
        "Title": "Geometric conditions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e0347155fcfe4b88a8aa4169246e4107",
          "39c69ac6655e414cbbc9b40b1cba4e1f",
          "b4341169db024f76be3bf2ba21d694a4",
          "c8598dd14c5e45588214304b179fa158",
          "4ca736382ad7404ab11147885333bf37",
          "f2ed36f3702a420cbfc747b104b73312",
          "b99019feddf34cddbd879fca7f2bc375",
          "5807ab7d61874f7394cfe59a85bfc7c1",
          "b9e7767890a047e685f8ff26c0f26d02",
          "d074ff8024794568b8a0c042612ff9da",
          "6c93ec56f8074203a7c856b523cf73a8",
          "1c3e27d8e616407fa057a4d131be8172",
          "9b832420e2f24b81b2f6c68ea6ce7aca",
          "0321480046804511bbc7a985bb90dbe7",
          "63d940a6f6b9432d8d2531ddcb7889a2",
          "53738b4ce754457586ce278aa4e0490a",
          "672ebc73ffdb4667a823b19e5165e2f0",
          "ef30d65737fd4013b6da12c08cdaa8c6",
          "65ce32be3d2d4245abb097f6b5d57cdc"
        ],
        "HasNestedGroups": false,
        "Left": -2858.5917560574489,
        "Top": -739.54365710920683,
        "Width": 3261.0,
        "Height": 1235.56,
        "FontSize": 36.0,
        "InitialTop": -666.54365710920683,
        "InitialHeight": 1158.56,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1ba97622b83a4896ac6b2b42a790702f",
        "Title": "Additional (optional) filtering: by section types",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "596909f5799446a7820a3e674d2f49c7",
          "4c0aeca86b3e4a598cd6c0ac60c2e74d",
          "3db0ae870aae4d4e8fccea48976c3b33",
          "1ca46343c98e422eb589fa5f6c1c842d",
          "145ece1505dd4e13b5adb581f63e7bf8",
          "e1d42da2f0d04115ba4c333d965e15ac"
        ],
        "HasNestedGroups": false,
        "Left": 888.53045657431562,
        "Top": -117.11818976545442,
        "Width": 1073.9999999999998,
        "Height": 671.13999999999987,
        "FontSize": 36.0,
        "InitialTop": -44.118189765454417,
        "InitialHeight": 607.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "764f857c8163457797318db67bec01b2",
        "Title": "Get the connection types loaded current model",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "84a122aa1d2b4b7190cc739c4ca872a5",
          "f5fd7157d8dd46efa1a7ad4b9e7133ac",
          "289d91618171478dbb998b4e6984e0ea"
        ],
        "HasNestedGroups": false,
        "Left": -4365.137600534259,
        "Top": 933.71095531637229,
        "Width": 1203.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 1006.7109553163723,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "ab095e74dd98424385533858a2b9014b",
        "Title": "Get the connection types from the library",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c1fecff026548af92d1d0d712d29ce2",
          "46ec41b71daf42dca401a9dc8eb59e77",
          "5bf679f3a1d845e9a80dcfacd4d4b0c2"
        ],
        "HasNestedGroups": false,
        "Left": -4607.8262786351006,
        "Top": 1309.8977436658538,
        "Width": 1476.0000000000005,
        "Height": 252.0,
        "FontSize": 36.0,
        "InitialTop": 1382.8977436658538,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d6cf386240a64da89c00427cb1bf3e03",
        "Title": "Separate into ConnectionNodes and their respective List of ConnectionTypes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1d0bfb70a604549b70d7713cb9b673e",
          "f7e3177b9a344ef9a8444e38e851570a",
          "dcde687dff5d41be840324d861f4c6e3",
          "190a0ae8c548496e8aff40d2eeb812c7"
        ],
        "HasNestedGroups": false,
        "Left": 4493.6767235215511,
        "Top": 448.36219142348693,
        "Width": 861.0,
        "Height": 699.39825059161092,
        "FontSize": 36.0,
        "InitialTop": 564.36219142348693,
        "InitialHeight": 592.39825059161092,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "a71fcfde1f6d4b0a8b54184a8bc68dfb",
        "Title": "Count total potential situations (beams to column)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2405b4b3ac62465e9e8f8b0814d82534",
          "f1d09c48caa147d9aea4845f35f4a0f6",
          "a3c243dbd4e94ba4bd695dd190285961",
          "fd229c791ae14ec68f4d184c8971f8be",
          "743b75eb3ca546d9af30330c7b67a73a"
        ],
        "HasNestedGroups": false,
        "Left": 6746.0331948079784,
        "Top": 336.00067297245334,
        "Width": 1556.0,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 409.00067297245334,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dab9b478ec674dc086453605442545e8",
        "Title": "Count total created connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9814f0ce4c5c48e9b4818792ac85bdbc",
          "538b8bf613164b2c855374e76a030dd9",
          "772e6ba595c64804a85db1574dbd2e38",
          "254ce0984a514f1b88df4d788d039906",
          "85378cbbb6334ee2ae63bbc2b9c677d7"
        ],
        "HasNestedGroups": false,
        "Left": 6759.3928694254037,
        "Top": -670.80141962760308,
        "Width": 1555.9999999999991,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -597.80141962760308,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2f0365c040714e9e9927c2d4520b6df1",
        "Title": "Count total applicable connections (according to ranges)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2efdd0fb814f42fe92ec0d65e8528058",
          "b739323cec314bb79a21b9b10408a3a1",
          "46806d536f524b258bebbf04bed9270c",
          "557103ea96c04fa0af6d8e52b7b8a326",
          "565b21616ba540c6ad0e1ca363dbe479"
        ],
        "HasNestedGroups": false,
        "Left": 6730.691141651886,
        "Top": -6.2730244080235593,
        "Width": 1555.9999999999991,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": 66.726975591976441,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a120f6e87dc418889835dd47ba4582d",
        "Title": "Count created connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a7ed204d1065484b804d093c6d488102",
          "54fa0a13352d4aeeb89c61760877b87e",
          "a31eca7da98e4f4497be7950e7176968",
          "41b6a9f8fd004de0ba416a8a588963c7",
          "809e0ab45e464576aa8783e69d0af647",
          "911367ea95104a68a8bdabf24ea343d5",
          "997ebb57baa34324bb07089352ec8a17"
        ],
        "HasNestedGroups": false,
        "Left": 6509.1836522924823,
        "Top": 848.38738124295674,
        "Width": 2427.0,
        "Height": 243.1400000000001,
        "FontSize": 36.0,
        "InitialTop": 921.38738124295674,
        "InitialHeight": 179.1400000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "afe994791d8242d2907629af2bb5918a",
        "Title": "Count applicable connections by type",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a052708963d74d64a67e0b16aca98624",
          "e9e666cbb8f64880b8218119cd6156d8",
          "6467f392f679494a8a2fc5379b011bbb",
          "54379f1c96954d2896d4a44e3c35a0fd",
          "ffaace1683d54d13971e8728952de923",
          "b6bd315c8a80447a95142ed6c7047fd2"
        ],
        "HasNestedGroups": false,
        "Left": 6498.3984222815707,
        "Top": 1257.6224189267427,
        "Width": 2034.0,
        "Height": 273.49838638651659,
        "FontSize": 36.0,
        "InitialTop": 1330.6224189267427,
        "InitialHeight": 209.49838638651659,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "654e5f1363ce4799b114c9d1057fd75d",
        "Title": "Combine lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "774bfec08d6646eab975b1a78194a1d4",
          "ecc0331f412c4c319df6ef8ef2e250e2",
          "1c8b31c6aeef42179f9bf04ab0c50df4",
          "d19b07df0f1247c09fd1a6d579459e44"
        ],
        "HasNestedGroups": false,
        "Left": 11048.419552592364,
        "Top": 944.86638438048635,
        "Width": 894.0,
        "Height": 426.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 1017.8663843804864,
        "InitialHeight": 362.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "155c700f79e64b8d910c254904327926",
        "Title": "Order Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7fa3e51dec7148efa7d68fe0053cf9e5",
          "3158084883ab47dc955a4f081b566e99",
          "cef3e29a69364a088cca9949265da0dc"
        ],
        "HasNestedGroups": false,
        "Left": -598.7731074390631,
        "Top": 1007.8369142774836,
        "Width": 1187.0,
        "Height": 244.0,
        "FontSize": 36.0,
        "InitialTop": 1080.8369142774836,
        "InitialHeight": 179.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "70c8f17d9603445086fbc897dfb0a9d8",
        "Title": "Combine, with those in model taking precedence",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a62f85b376d45a7a5c3a105ffc30ec3",
          "93fa6b310e10450685774ed66b3bb04e",
          "cbe701715f3c4d59847c85bc1fba2edd",
          "9a071a3676a146e59b21682562a0b7f7",
          "f882cdd5d1ba430582c2ccfd66bed5ca"
        ],
        "HasNestedGroups": false,
        "Left": -2744.0841254647457,
        "Top": 973.94133446081787,
        "Width": 1686.9999999999998,
        "Height": 364.27471574119431,
        "FontSize": 36.0,
        "InitialTop": 1046.9413344608179,
        "InitialHeight": 300.27471574119431,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3535ac2782924cc1854d736c3bbf6722",
        "Title": "Count total connections that existed",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c6d9585fb47841cb9c9ceb4bfd7558e3",
          "dde7df2ab5954fc1b5b52264b6ea322c",
          "1e3e2a13ad1349daa6c58b63b5f0b78a",
          "3841de7214484a55b00b70d485720ed1",
          "d45cf1955c2e41dd9e147541a76d0162"
        ],
        "HasNestedGroups": false,
        "Left": 6727.8557180938269,
        "Top": -312.45029211681128,
        "Width": 1555.9999999999991,
        "Height": 243.14,
        "FontSize": 36.0,
        "InitialTop": -239.45029211681128,
        "InitialHeight": 179.14,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "200596100f8940ae8596549d1937131d",
        "Title": "Filter Connection Types by name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "745d81c493ee465684bd2dca363c1732",
          "35aa8435dc9b403b9c32aa5427de285f",
          "647f8844bb9c4fc699893a2c544ea501",
          "4f01b16137e64076a046161d7875e06f",
          "fd2e862ad1aa4f54bb98f69246640f34",
          "d74f38d24d484e2fa1c0726ca6657039",
          "d2716a15fa7b4783a84eeb143861c6b9",
          "380e3d12274942fa809d7ad699ecd54e"
        ],
        "HasNestedGroups": false,
        "Left": 1358.5307925752586,
        "Top": 1046.2793543716753,
        "Width": 1617.0,
        "Height": 454.0,
        "FontSize": 36.0,
        "InitialTop": 1119.2793543716753,
        "InitialHeight": 331.0,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "1f0a5648c3dc4b0aa8f26bfb6d9f7f33",
        "Title": "Select input model elements",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d46991c95cae483792e0878fc2aaa757",
          "23e71998c97843498024665c1918a3c7"
        ],
        "HasNestedGroups": false,
        "Left": -3992.9597053579146,
        "Top": -774.14530640056694,
        "Width": 688.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "InitialTop": -701.14530640056694,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "36b4176570d34ec9a0cf4bc223f88ace",
        "Title": "Connection family names input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "646164bb1207481cba7fa1b3dc4fa6b0",
          "3bbdc629c7134289825732ba76f82142",
          "e373ad042129485eaee23302b4781d65",
          "b2a7b442a2244a0d8626822d9634da13"
        ],
        "HasNestedGroups": false,
        "Left": -6260.993777538677,
        "Top": 839.0247674338932,
        "Width": 699.5,
        "Height": 426.0,
        "FontSize": 36.0,
        "InitialTop": 912.0247674338932,
        "InitialHeight": 375.09728081672847,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d6263bc4882146f285a14d922cf30819",
        "Title": "Cleanup for matching, totals",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "75fbb7ec69cf461b95141eb144180577",
          "98f256f147cb4d0f8148c23deef718d3",
          "558c4f50298042ad99570158961261a0",
          "84d9c853239e477c8b5c92c9a036c7e9"
        ],
        "HasNestedGroups": false,
        "Left": 2418.4375571270034,
        "Top": 139.55973022449763,
        "Width": 1061.0,
        "Height": 391.14000000000004,
        "FontSize": 36.0,
        "InitialTop": 212.55973022449763,
        "InitialHeight": 327.14,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d81f549f8cec4dc088ce5f0a68c370ab",
        "Title": "Find applicable types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0f8f42606627455eb286b7e1556580bc",
          "eb0a624451dd456bbcd4ea23b30d4cd0",
          "38828e1188c846548bfd27c1fe828632"
        ],
        "HasNestedGroups": false,
        "Left": 3528.5928963126453,
        "Top": 657.65605220303223,
        "Width": 824.0,
        "Height": 360.06763922291,
        "FontSize": 36.0,
        "InitialTop": 730.65605220303223,
        "InitialHeight": 296.06763922291,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "66cb51ef6ff14ef79334b502a5f2d58a",
        "Title": "Create totals report",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72425b91f2ea4495926845dcc24a7e3f",
          "ade3a07d982d4a6b9566f90ae4060d67",
          "650fbffecdd54e1f8a047828f6d12668",
          "ad66920b3a3e442bb5fe89999aae474b",
          "0685e4e2cde14269a350099bca66d1cc",
          "bb1eaf21f4dc42819950d90924b30413",
          "02fc6e7ff41f41b384488b805e007f4a",
          "254a2da754394a22bdc053660c8ae550",
          "ebc677ba74f349d581eb89a79f50b8c0"
        ],
        "HasNestedGroups": false,
        "Left": 9229.72584024137,
        "Top": -384.06257401471419,
        "Width": 1806.0,
        "Height": 765.0,
        "FontSize": 36.0,
        "InitialTop": -311.06257401471419,
        "InitialHeight": 701.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "a4a8211141444ea18ae4c4eb1f329636",
        "Title": "Report per connection type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6bcb242ae05c45fda1f9ebbbdeec3731",
          "ffb92b32cdde4dc3a73c1560eb54fdfd",
          "c33840e0557c4408a330da04f399cfb1",
          "6e077c8a1abd42a7aa12f341ed0d448d",
          "90dbaba524234fdfb31eb37933266b20",
          "f3f8813e5c794004833a9739d4c2d0ca",
          "12e6cd04e27647869a2afb60be7717cb"
        ],
        "HasNestedGroups": false,
        "Left": 9171.6674369288339,
        "Top": 746.2977879385794,
        "Width": 1378.0,
        "Height": 618.99999999999977,
        "FontSize": 36.0,
        "InitialTop": 819.2977879385794,
        "InitialHeight": 554.99999999999977,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "ae30b2deffe540bb98e999b9942a9f76",
        "Title": "Combine complete output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e229b66d98d24d01a4641804e6973bdd",
          "f56a80fccb3748f09ccbbda7c4fc7891",
          "4f35443af9384bb5a47d95baaeedceeb"
        ],
        "HasNestedGroups": false,
        "Left": 14677.8308794018,
        "Top": 232.13364662504921,
        "Width": 942.0,
        "Height": 375.0,
        "FontSize": 36.0,
        "InitialTop": 305.13364662504921,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "f0462f1cbaa54ff794208795f2e03990",
        "Title": "Validate the not applicable",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "da181444a7264cc79b9c3ef8b966c49d",
          "ea1606a2d32f4d43940ca6ee94a0383a",
          "3d571aded5214e05b201c57c1dfa7dbc"
        ],
        "HasNestedGroups": false,
        "Left": 4925.9990204384931,
        "Top": 2388.1091131245307,
        "Width": 994.0,
        "Height": 770.82271632357606,
        "FontSize": 36.0,
        "InitialTop": 2461.1091131245307,
        "InitialHeight": 606.82271632357606,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "0afe3224a8bf4594be4cbdba1346a215",
        "Title": "Get input member info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0aadced215be45b2845e6ca37aef95a7",
          "e5b7758995744be68215bf88e11a97bc",
          "5f1d296a330b4f29b2794d55e591370b",
          "082ea98603724b079bbdf5a374ff99b8"
        ],
        "HasNestedGroups": false,
        "Left": 6537.9990702153254,
        "Top": 2152.822578732852,
        "Width": 1275.0,
        "Height": 361.0,
        "FontSize": 36.0,
        "InitialTop": 2225.822578732852,
        "InitialHeight": 297.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "a95ba50000d54e1a98995d225673c8b9",
        "Title": "Format situation info",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "17deda83606d4a7da966c8ec1dbc1036",
          "dc67f63c9fae48f68c34bd0e5a9410d4",
          "2a2cbb200bac4920a25f27dccd4be663",
          "41584edd4b4e4fefa74c5f29e98d118a",
          "24b961c7d3504fce9f1060dd294c7184",
          "8c459f95f0db44aea943f50dc5f0f6af",
          "031182b929df402f88b55d8598fafc55",
          "3e32903984964930a5534469f7d5c777",
          "7ffc630cb245460fb5970336e3369f46"
        ],
        "HasNestedGroups": false,
        "Left": 8369.3949473609337,
        "Top": 1947.3759387015443,
        "Width": 1712.0,
        "Height": 752.0,
        "FontSize": 36.0,
        "InitialTop": 2020.3759387015443,
        "InitialHeight": 658.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "d4b2a4674efa4a54ac513d46538709c2",
        "Title": "Keep only failed conditions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c90dd3e1c47b4afdb979455aaf381671",
          "260f77834b2041de816e3a8c3625f529",
          "6d3142f7ffaa4c14bc505eb147f5710c",
          "a73188cf2f8c4a4c906b49789c8d084d",
          "b0edf31c432845439a2e44588118c626",
          "50142a7af4a340deb00d4bc3e366de3a",
          "2c6a7d74e3e44e6db3786dd07e0a9792"
        ],
        "HasNestedGroups": false,
        "Left": 7453.9578782465578,
        "Top": 3186.468011380005,
        "Width": 2180.0,
        "Height": 408.13999999999987,
        "FontSize": 36.0,
        "InitialTop": 3259.468011380005,
        "InitialHeight": 344.13999999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "989495893fdb45028366d67bcd24de6c",
        "Title": "Aggregate information",
        "DescriptionText": "Combine situation information and connection type names with ranges validation",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "240cedcc78124bebbba845962219230f",
          "cdc5c512d623484d8b99055aa5523676",
          "3010aec6b7ed47e0b85a73000a71e4cc"
        ],
        "HasNestedGroups": false,
        "Left": 10376.498924519045,
        "Top": 2912.13719057403,
        "Width": 1098.9251874931833,
        "Height": 430.20335095836481,
        "FontSize": 36.0,
        "InitialTop": 2985.13719057403,
        "InitialHeight": 336.20335095836481,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "0e647e849d53439b83ce486c14665b95",
        "Title": "Treat input parameter errors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2404215ffc2c4afa9614331a555b437e",
          "a1f4df2ff8434486a643c653fcf53787",
          "8807f05fe05d4763a174deb7ff8863e3",
          "852b8ef9499847458b72627ed032ffc3",
          "edb2ef938555433da5c46207ff939565",
          "53205e8fb64a49b19100e55cab74d2e7",
          "1dfae5cfe2ca4b09a29fecc583214ff5",
          "5d48327b885443cab7c6a16400c14531",
          "5ab4d82800b0452094d3aa5137553b62",
          "8c648d67cb6a40e0b29940cf04bcf46b",
          "7bde4fd6455841f38b851839742c39f3",
          "2cda305af11b426a9def5d392bcb30ea",
          "c4b9f6d941dc43058e1887f77d92cee7",
          "ad298864527f409091ea628b563f15fe",
          "16eabe12e75e4dc1a9089ffec137c341",
          "89768149587249d9b08a79d316479899"
        ],
        "HasNestedGroups": false,
        "Left": 12407.941625792151,
        "Top": 898.48641949194393,
        "Width": 1900.0,
        "Height": 874.0,
        "FontSize": 36.0,
        "InitialTop": 971.48641949194393,
        "InitialHeight": 694.0,
        "TextblockHeight": 63.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "b2a7b442a2244a0d8626822d9634da13",
        "Title": "Use a semicolon ( ; ) to separate terms (e.g. Double side clip angle;Double side clip angle custom).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6250.993777538677,
        "Top": 912.0247674338932,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "646164bb1207481cba7fa1b3dc4fa6b0"
      },
      {
        "Id": "380e3d12274942fa809d7ad699ecd54e",
        "Title": "Place only connection types with names that contain these terms. Use a semicolon ( ; ) to separate terms (e.g. B to C;BW). Leave blank to place any connection types.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1368.5307925752586,
        "Top": 1129.2793543716753,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "d2716a15fa7b4783a84eeb143861c6b9"
      }
    ],
    "X": 2594.1388712997741,
    "Y": 533.97016494426532,
    "Zoom": 0.63197475564469374
  }
}